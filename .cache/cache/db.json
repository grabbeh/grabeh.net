{"keys":[{"id":"transformer-remark-markdown-ast-4fadd4084a649312b442b977a4ddf3ff--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Moving-towards-object-oriented-JavaScript'\ntitle: 'Moving towards object oriented JavaScript'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":109},"indent":[1,1,1]}},{"type":"code","lang":null,"value":"    971 additions and 3,493 deletions","position":{"start":{"line":6,"column":1,"offset":111},"end":{"line":6,"column":42,"offset":152},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The above statistic from Github from the repository for one of my apps ","position":{"start":{"line":8,"column":1,"offset":154},"end":{"line":8,"column":72,"offset":225},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/grabbeh/routebop","children":[{"type":"text","value":"Routebop","position":{"start":{"line":8,"column":73,"offset":226},"end":{"line":8,"column":81,"offset":234},"indent":[]}}],"position":{"start":{"line":8,"column":72,"offset":225},"end":{"line":8,"column":119,"offset":272},"indent":[]}},{"type":"text","value":" showing the changes to the repo following a few days of editing is gratifying to me","position":{"start":{"line":8,"column":119,"offset":272},"end":{"line":8,"column":203,"offset":356},"indent":[]}},{"type":"html","value":"<sup id=\"fnref1\">","position":{"start":{"line":8,"column":203,"offset":356},"end":{"line":8,"column":220,"offset":373},"indent":[]}},{"type":"link","title":null,"url":"#fn1","children":[{"type":"text","value":"1","position":{"start":{"line":8,"column":221,"offset":374},"end":{"line":8,"column":222,"offset":375},"indent":[]}}],"position":{"start":{"line":8,"column":220,"offset":373},"end":{"line":8,"column":229,"offset":382},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":8,"column":229,"offset":382},"end":{"line":8,"column":235,"offset":388},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":8,"column":235,"offset":388},"end":{"line":8,"column":236,"offset":389},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":154},"end":{"line":8,"column":236,"offset":389},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Whilst as a beginner you would normally code to improve or build a new feature, a user of the site would not notice any change to the functionality of the site following the above changes.","position":{"start":{"line":10,"column":1,"offset":391},"end":{"line":10,"column":189,"offset":579},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":391},"end":{"line":10,"column":189,"offset":579},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So on the basis that you'd normally change code to alter functionality, what actually changed?","position":{"start":{"line":12,"column":1,"offset":581},"end":{"line":12,"column":95,"offset":675},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":581},"end":{"line":12,"column":95,"offset":675},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When I initially built the site because I had a fear of cross-contamination of JS amongst different pages, and because I was (and still am in many ways) a beginner, I decided to place all the JavaScript necessary for each page in the page itself with no sharing of JS between pages at all. As functionality between pages is shared to an extent, this meant that there was a significant amount of duplication","position":{"start":{"line":14,"column":1,"offset":677},"end":{"line":14,"column":407,"offset":1083},"indent":[]}},{"type":"html","value":"<sup id=\"fnref2\">","position":{"start":{"line":14,"column":407,"offset":1083},"end":{"line":14,"column":424,"offset":1100},"indent":[]}},{"type":"link","title":null,"url":"#fn2","children":[{"type":"text","value":"2","position":{"start":{"line":14,"column":425,"offset":1101},"end":{"line":14,"column":426,"offset":1102},"indent":[]}}],"position":{"start":{"line":14,"column":424,"offset":1100},"end":{"line":14,"column":433,"offset":1109},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":14,"column":433,"offset":1109},"end":{"line":14,"column":439,"offset":1115},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":14,"column":439,"offset":1115},"end":{"line":14,"column":440,"offset":1116},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":677},"end":{"line":14,"column":440,"offset":1116},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"However, the extent of duplication meant that there was always a nagging feeling that switching from the JS-per-page approach to one using separate JS files would lead to a much cleaner approach and allow for an easier time in updating functionality in the future.","position":{"start":{"line":16,"column":1,"offset":1118},"end":{"line":16,"column":265,"offset":1382},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1118},"end":{"line":16,"column":265,"offset":1382},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When I decided to refactor the code I first selected the page which I felt had the most functionality that I could potentially share across other pages. Following this, still within the same page I split up functions where I could. For example, one function collects and converts markers and waypoints into a more basic form, POSTs to the server, and then responds with a success message.","position":{"start":{"line":18,"column":1,"offset":1384},"end":{"line":18,"column":389,"offset":1772},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1384},"end":{"line":18,"column":389,"offset":1772},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"On the basis that the POSTing to the server element would be repeated, I split out this functionality and put a small wrapper around it to pass through transaction specific arguments into the function as follows:","position":{"start":{"line":20,"column":1,"offset":1774},"end":{"line":20,"column":213,"offset":1986},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1774},"end":{"line":20,"column":213,"offset":1986},"indent":[]}},{"type":"code","lang":null,"value":"this.sendToServer = function(postdata, posturl, completefunction){\n$.ajax({\n    url: posturl,\n    type: \"POST\",\n    contentType: \"application/json\",\n    processData: false,\n    data: JSON.stringify(postdata),\n    success: completefunction\n    });\n};\nthis.sendToServer(postdata, \"/show\", function(data){\n    $('#result').html(data.message);\n    });\n};","position":{"start":{"line":22,"column":1,"offset":1988},"end":{"line":35,"column":7,"offset":2394},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This way, the function could be re-used passing in different arguments depending on what was necessary in the circumstances. In respect of the 'completefunction' and as per the above I use an anonymous function when the function is actually called to specify what will happen when the POST request is successful (displaying a success message, or processing the data onto a map for example).","position":{"start":{"line":37,"column":1,"offset":2396},"end":{"line":37,"column":391,"offset":2786},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":2396},"end":{"line":37,"column":391,"offset":2786},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Following this point, I then started work on a separate JavaScript file switching across functions from the page itself into the JS file. I adopted a rather timid approach to this initially, switching over a function or two, then making reference to them in the HTML file to ensure things were still working.","position":{"start":{"line":39,"column":1,"offset":2788},"end":{"line":39,"column":309,"offset":3096},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":2788},"end":{"line":39,"column":309,"offset":3096},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Design patterns you say?","position":{"start":{"line":41,"column":3,"offset":3100},"end":{"line":41,"column":27,"offset":3124},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":3098},"end":{"line":41,"column":29,"offset":3126},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":3098},"end":{"line":41,"column":29,"offset":3126},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I do have a copy of ","position":{"start":{"line":43,"column":1,"offset":3128},"end":{"line":43,"column":21,"offset":3148},"indent":[]}},{"type":"link","title":null,"url":"http://addyosmani.com/resources/essentialjsdesignpatterns/book/","children":[{"type":"text","value":"Design Patterns","position":{"start":{"line":43,"column":22,"offset":3149},"end":{"line":43,"column":37,"offset":3164},"indent":[]}}],"position":{"start":{"line":43,"column":21,"offset":3148},"end":{"line":43,"column":103,"offset":3230},"indent":[]}},{"type":"text","value":" by Addy Osmani on my bookshelf at home, however, on flipping through the book, I suspect the pattern I've used is somewhere between Constructor and the module pattern.","position":{"start":{"line":43,"column":103,"offset":3230},"end":{"line":43,"column":271,"offset":3398},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":3128},"end":{"line":43,"column":271,"offset":3398},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Essentially, this means that to use the JavaScript I create an instance of the Constructor by using the 'new' keyword and then attach that to a variable when opening a particular page. I think in part this is inspired by Google Maps which uses the new keyword when instantiating a new map or map-related item ilke a marker or infowindow.","position":{"start":{"line":45,"column":1,"offset":3400},"end":{"line":45,"column":338,"offset":3737},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":3400},"end":{"line":45,"column":338,"offset":3737},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"At the same time as creating a public interface using 'new', I also included local variables within the Constructor which are only able to be accessed by public methods on the instance. An example is as follows:","position":{"start":{"line":47,"column":1,"offset":3739},"end":{"line":47,"column":212,"offset":3950},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":3739},"end":{"line":47,"column":212,"offset":3950},"indent":[]}},{"type":"code","lang":null,"value":"function Map(){\n    var mapmarkers = [];\n    this.returnMapMarkers = function(){\n    \treturn mapmarkers;\n    }; \n    this.addMarkersToMap = function(array){\n    // function to place marker on map & push into mapmarkersarray\n    };\n};\n\n// Instantiation\n\nvar map = new Map;\n\nmap.mapmarkers;\n>> undefined\n\nmap.returnMapMarkers()\n>> [ array of markers ]","position":{"start":{"line":49,"column":1,"offset":3952},"end":{"line":67,"column":28,"offset":4361},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In this way, the mapmarkers private variable can only be accessed and updated using public methods (as I understand it).","position":{"start":{"line":69,"column":1,"offset":4363},"end":{"line":69,"column":121,"offset":4483},"indent":[]}},{"type":"html","value":"<sup id=\"fnref3\">","position":{"start":{"line":69,"column":121,"offset":4483},"end":{"line":69,"column":138,"offset":4500},"indent":[]}},{"type":"link","title":null,"url":"#fn3","children":[{"type":"text","value":"3","position":{"start":{"line":69,"column":139,"offset":4501},"end":{"line":69,"column":140,"offset":4502},"indent":[]}}],"position":{"start":{"line":69,"column":138,"offset":4500},"end":{"line":69,"column":147,"offset":4509},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":69,"column":147,"offset":4509},"end":{"line":69,"column":153,"offset":4515},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":69,"column":153,"offset":4515},"end":{"line":69,"column":154,"offset":4516},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":4363},"end":{"line":69,"column":154,"offset":4516},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Limitations on code re-use","position":{"start":{"line":71,"column":3,"offset":4520},"end":{"line":71,"column":29,"offset":4546},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":4518},"end":{"line":71,"column":31,"offset":4548},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":4518},"end":{"line":71,"column":31,"offset":4548},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In the process of refactoring the code, there were times when in the current state, I couldn't re-use the code across pages. At this point, I had to create new functions which although very similar in nature to existing functions performed slightly differently.","position":{"start":{"line":73,"column":1,"offset":4550},"end":{"line":73,"column":262,"offset":4811},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":4550},"end":{"line":73,"column":262,"offset":4811},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This was definitely a lazy way of doing things, and in future, I hope to do more work in stripping down functions into their component parts to ensure a greater ability to re-use functionality.","position":{"start":{"line":75,"column":1,"offset":4813},"end":{"line":75,"column":194,"offset":5006},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":4813},"end":{"line":75,"column":194,"offset":5006},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Separation of functionality","position":{"start":{"line":77,"column":3,"offset":5010},"end":{"line":77,"column":30,"offset":5037},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":5008},"end":{"line":77,"column":32,"offset":5039},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":5008},"end":{"line":77,"column":32,"offset":5039},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In addition to the main map.js file I also created separate files to cover distinct functionality on the site. This includes image upload handling and geocoding. I think this is a fairly common practice. As part of this, I created a init() function which is then the only function called to add the functionality to the page, as it incorporates calls to all the necessary functions.","position":{"start":{"line":79,"column":1,"offset":5041},"end":{"line":79,"column":383,"offset":5423},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":5041},"end":{"line":79,"column":383,"offset":5423},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In summary, when it comes to code refactoring, I don't really know what I'm doing. However although the above may not be (i) the most efficient in terms of code re-use or (ii) implement a design pattern correctly, it is definitely a leap forward for me from the JS-per-page approach used previously.","position":{"start":{"line":81,"column":1,"offset":5425},"end":{"line":81,"column":300,"offset":5724},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":5425},"end":{"line":81,"column":300,"offset":5724},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In future I hope to use the code I've written to help me improve my usage of design patterns and write better JavaScript generally.","position":{"start":{"line":83,"column":1,"offset":5726},"end":{"line":83,"column":132,"offset":5857},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":5726},"end":{"line":83,"column":132,"offset":5857},"indent":[]}},{"type":"html","value":"<div class=\"footnotes\">","position":{"start":{"line":85,"column":1,"offset":5859},"end":{"line":85,"column":24,"offset":5882},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":87,"column":1,"offset":5884},"end":{"line":87,"column":6,"offset":5889},"indent":[]}},{"type":"list","ordered":true,"start":1,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Particularly on the basis that the total repo size was only 20k lines of code before the changes. ","position":{"start":{"line":89,"column":5,"offset":5895},"end":{"line":89,"column":103,"offset":5993},"indent":[]}},{"type":"link","title":null,"url":"#fnref1","children":[{"type":"text","value":"↩","position":{"start":{"line":89,"column":104,"offset":5994},"end":{"line":89,"column":105,"offset":5995},"indent":[]}}],"position":{"start":{"line":89,"column":103,"offset":5993},"end":{"line":89,"column":115,"offset":6005},"indent":[]}}],"position":{"start":{"line":89,"column":5,"offset":5895},"end":{"line":89,"column":115,"offset":6005},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":5891},"end":{"line":90,"column":1,"offset":6006},"indent":[1]}},{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"On the other hand, one slight benefit was that altering JS on one page would only affect the functionality on that page. This form of sand-boxing helped to provide comfort that making changes to the page on the basis that it would not break another page. ","position":{"start":{"line":91,"column":5,"offset":6011},"end":{"line":91,"column":260,"offset":6266},"indent":[]}},{"type":"link","title":null,"url":"#fnref2","children":[{"type":"text","value":"↩","position":{"start":{"line":91,"column":261,"offset":6267},"end":{"line":91,"column":262,"offset":6268},"indent":[]}}],"position":{"start":{"line":91,"column":260,"offset":6266},"end":{"line":91,"column":272,"offset":6278},"indent":[]}}],"position":{"start":{"line":91,"column":5,"offset":6011},"end":{"line":91,"column":272,"offset":6278},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":6007},"end":{"line":92,"column":1,"offset":6279},"indent":[1]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"One point that does need addressing is that usually you would define static methods on the prototype of the Constructor rather than directly using 'this'. This is because by using prototype methods are automatically shared on all instances of the constructor, whereas with 'this' each method is defined afresh when a new instance is created with 'new'. I'll be updating this in the future (although in fairness multiple instances are not created on the site (for example only one 'Map' instance is created per page)). ","position":{"start":{"line":93,"column":5,"offset":6284},"end":{"line":93,"column":523,"offset":6802},"indent":[]}},{"type":"link","title":null,"url":"#fnref3","children":[{"type":"text","value":"↩","position":{"start":{"line":93,"column":524,"offset":6803},"end":{"line":93,"column":525,"offset":6804},"indent":[]}}],"position":{"start":{"line":93,"column":523,"offset":6802},"end":{"line":93,"column":535,"offset":6814},"indent":[]}}],"position":{"start":{"line":93,"column":5,"offset":6284},"end":{"line":93,"column":535,"offset":6814},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":6280},"end":{"line":93,"column":535,"offset":6814},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":5891},"end":{"line":93,"column":535,"offset":6814},"indent":[1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":95,"column":1,"offset":6816}}}},{"id":"transformer-remark-markdown-ast-f18cee0d8ae4ae81f69aa50c42e8efff--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Digital-Ocean-VPS-Nginx-Express-apps'\ntitle: 'Digital Ocean VPS, Nginx and Express apps'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":104},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"I recently started investigating the murky (at least for me) world of VPSs. I was previously hosting a few pet projects on Nodejitsu but although their service is excellent, the nature of my projects didn't really warrant using the platform.","position":{"start":{"line":6,"column":1,"offset":106},"end":{"line":6,"column":242,"offset":347},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":106},"end":{"line":6,"column":242,"offset":347},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"At the same time, I was interested in learning more about using linux commands and investigating how straightforward it was for a beginner to get Express apps running on a VPS and accessible via a specified subdomain.","position":{"start":{"line":8,"column":1,"offset":349},"end":{"line":8,"column":218,"offset":566},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":349},"end":{"line":8,"column":218,"offset":566},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"http://digitalocean.com","children":[{"type":"text","value":"Digital Ocean","position":{"start":{"line":10,"column":2,"offset":569},"end":{"line":10,"column":15,"offset":582},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":568},"end":{"line":10,"column":41,"offset":608},"indent":[]}},{"type":"text","value":" provides a basic option at $5 per month and I spun up an instance running Ubuntu 12.04 based in Amsterdam no less.","position":{"start":{"line":10,"column":41,"offset":608},"end":{"line":10,"column":156,"offset":723},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":568},"end":{"line":10,"column":156,"offset":723},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You'll access your VPS by using a SSH client. As I'm on Windows I use ","position":{"start":{"line":12,"column":1,"offset":725},"end":{"line":12,"column":71,"offset":795},"indent":[]}},{"type":"link","title":null,"url":"http://www.chiark.greenend.org.uk/%7Esgtatham/putty/","children":[{"type":"text","value":"PuTTY","position":{"start":{"line":12,"column":72,"offset":796},"end":{"line":12,"column":77,"offset":801},"indent":[]}}],"position":{"start":{"line":12,"column":71,"offset":795},"end":{"line":12,"column":132,"offset":856},"indent":[]}},{"type":"text","value":". Through this you'll input your login details for the VPS and you should be able to start on the road to getting your Express app running.","position":{"start":{"line":12,"column":132,"offset":856},"end":{"line":12,"column":271,"offset":995},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":725},"end":{"line":12,"column":271,"offset":995},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"http://wiki.nginx.org/Main","children":[{"type":"text","value":"Nginx","position":{"start":{"line":14,"column":2,"offset":998},"end":{"line":14,"column":7,"offset":1003},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":997},"end":{"line":14,"column":36,"offset":1032},"indent":[]}},{"type":"text","value":" is an open source http/reverse proxy server software and is being increasingly used on the basis that it offers simplified but powerful functionality for running servers in comparison to Apache (as I understand it at least!).","position":{"start":{"line":14,"column":36,"offset":1032},"end":{"line":14,"column":262,"offset":1258},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":997},"end":{"line":14,"column":262,"offset":1258},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first steps was to get Nginx running. This was fairly straightforward and I followed the steps in ","position":{"start":{"line":16,"column":1,"offset":1260},"end":{"line":16,"column":103,"offset":1362},"indent":[]}},{"type":"link","title":null,"url":"http://www.packtpub.com/nginx-http-server/book","children":[{"type":"text","value":"Nginx HTTP Server","position":{"start":{"line":16,"column":104,"offset":1363},"end":{"line":16,"column":121,"offset":1380},"indent":[]}}],"position":{"start":{"line":16,"column":103,"offset":1362},"end":{"line":16,"column":170,"offset":1429},"indent":[]}},{"type":"text","value":" by Clement Nedelcu. Nginx runs by using a central configuration file, but you can incorporate other conf files with the simple use of 'include'. On my installation the conf files were located in the following folder /usr/local/nginx/conf/ on the VPS.","position":{"start":{"line":16,"column":170,"offset":1429},"end":{"line":16,"column":421,"offset":1680},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1260},"end":{"line":16,"column":421,"offset":1680},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So following installation I had a basic http server up and running serving a index.html file at grabeh.net (adding a domain through Digital Ocean and updating the nameservers to point at the VPS was simple enough).","position":{"start":{"line":18,"column":1,"offset":1682},"end":{"line":18,"column":215,"offset":1896},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1682},"end":{"line":18,"column":215,"offset":1896},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"emphasis","children":[{"type":"text","value":"Installing node.js and your Express app","position":{"start":{"line":20,"column":4,"offset":1901},"end":{"line":20,"column":43,"offset":1940},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":1900},"end":{"line":20,"column":44,"offset":1941},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1898},"end":{"line":20,"column":46,"offset":1943},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1898},"end":{"line":20,"column":46,"offset":1943},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The next step was to identify how to get Express apps running on the VPS. Installing node.js itself was obviously key!","position":{"start":{"line":22,"column":1,"offset":1945},"end":{"line":22,"column":119,"offset":2063},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1945},"end":{"line":22,"column":119,"offset":2063},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The most straightforward way I identified was the following:","position":{"start":{"line":24,"column":1,"offset":2065},"end":{"line":24,"column":61,"offset":2125},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":2065},"end":{"line":24,"column":61,"offset":2125},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"apt-get install python-software-properties","position":{"start":{"line":26,"column":5,"offset":2131},"end":{"line":26,"column":47,"offset":2173},"indent":[]}}],"position":{"start":{"line":26,"column":5,"offset":2131},"end":{"line":26,"column":47,"offset":2173},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":2127},"end":{"line":26,"column":47,"offset":2173},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"apt-add-repository ppa:chris-lea/node.js","position":{"start":{"line":27,"column":5,"offset":2178},"end":{"line":27,"column":45,"offset":2218},"indent":[]}}],"position":{"start":{"line":27,"column":5,"offset":2178},"end":{"line":27,"column":45,"offset":2218},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":2174},"end":{"line":27,"column":45,"offset":2218},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"apt-get update","position":{"start":{"line":28,"column":5,"offset":2223},"end":{"line":28,"column":19,"offset":2237},"indent":[]}}],"position":{"start":{"line":28,"column":5,"offset":2223},"end":{"line":28,"column":19,"offset":2237},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":2219},"end":{"line":28,"column":19,"offset":2237},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"apt-get install nodejs","position":{"start":{"line":29,"column":5,"offset":2242},"end":{"line":29,"column":27,"offset":2264},"indent":[]}}],"position":{"start":{"line":29,"column":5,"offset":2242},"end":{"line":29,"column":27,"offset":2264},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":2238},"end":{"line":29,"column":27,"offset":2264},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":2127},"end":{"line":29,"column":27,"offset":2264},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After this point I was able to type in 'node' and get access to the REPL. Typing in 2 + 2 did indeed give me 4 which was a pleasure to see (particularly owing to my deficient maths skills). As a bonus, you'll also get npm for package control.","position":{"start":{"line":31,"column":1,"offset":2266},"end":{"line":31,"column":243,"offset":2508},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":2266},"end":{"line":31,"column":243,"offset":2508},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The next step was to get a small Express app running on the VPS. The easiest way I found was to git clone a basic app into the VPS. You can use the one ","position":{"start":{"line":33,"column":1,"offset":2510},"end":{"line":33,"column":153,"offset":2662},"indent":[]}},{"type":"link","title":null,"url":"http://github.com/Grabbeh/express-hello-world","children":[{"type":"text","value":"here","position":{"start":{"line":33,"column":154,"offset":2663},"end":{"line":33,"column":158,"offset":2667},"indent":[]}}],"position":{"start":{"line":33,"column":153,"offset":2662},"end":{"line":33,"column":206,"offset":2715},"indent":[]}},{"type":"text","value":" on Github if you want. (Using apt-get install git-core will give you access to git commands).","position":{"start":{"line":33,"column":206,"offset":2715},"end":{"line":33,"column":300,"offset":2809},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":2510},"end":{"line":33,"column":300,"offset":2809},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Then simply 'npm install' to install the Express dependency. After that 'node app' should have the app running on port 3000.","position":{"start":{"line":35,"column":1,"offset":2811},"end":{"line":35,"column":125,"offset":2935},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":2811},"end":{"line":35,"column":125,"offset":2935},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you will see using node app means the app is running in the foreground which means we cannot do anything else on the command line whilst the app is running. This simply will not do!","position":{"start":{"line":37,"column":1,"offset":2937},"end":{"line":37,"column":185,"offset":3121},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":2937},"end":{"line":37,"column":185,"offset":3121},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I recalled a while ago reading about Nodejitsu's Forever tool which allows you to set a node app running in the background. This ","position":{"start":{"line":39,"column":1,"offset":3123},"end":{"line":39,"column":130,"offset":3252},"indent":[]}},{"type":"link","title":null,"url":"http://blog.nodejitsu.com/keep-a-nodejs-server-up-with-forever","children":[{"type":"text","value":"link","position":{"start":{"line":39,"column":131,"offset":3253},"end":{"line":39,"column":135,"offset":3257},"indent":[]}}],"position":{"start":{"line":39,"column":130,"offset":3252},"end":{"line":39,"column":200,"offset":3322},"indent":[]}},{"type":"text","value":" on Nodejitsu's site provides step-by-step instructions, however basically just use 'npm install forever -g' and then in your app's directory you can use 'forever start app.js' and your app will be running in the background. If you're planning on running multiple apps you may want to remain the app.js file to be more descriptive.","position":{"start":{"line":39,"column":200,"offset":3322},"end":{"line":39,"column":531,"offset":3653},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":3123},"end":{"line":39,"column":531,"offset":3653},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is because 'forever list' will specify the apps running and for me things got confusing when I was using app.js for all apps.","position":{"start":{"line":41,"column":1,"offset":3655},"end":{"line":41,"column":131,"offset":3785},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":3655},"end":{"line":41,"column":131,"offset":3785},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"emphasis","children":[{"type":"text","value":"Getting your Express app displaying on a subdomain","position":{"start":{"line":43,"column":4,"offset":3790},"end":{"line":43,"column":54,"offset":3840},"indent":[]}}],"position":{"start":{"line":43,"column":3,"offset":3789},"end":{"line":43,"column":55,"offset":3841},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":3787},"end":{"line":43,"column":57,"offset":3843},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":3787},"end":{"line":43,"column":57,"offset":3843},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The next step was to determine how to get the app to display via a subdomain on grabeh.net.","position":{"start":{"line":45,"column":1,"offset":3845},"end":{"line":45,"column":92,"offset":3936},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":3845},"end":{"line":45,"column":92,"offset":3936},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A brief visit to Stackoverflow showed the way, and it wasn't long before the Nginx 'proxy_pass' and 'upstream' directives were identified as being necessary via this ","position":{"start":{"line":47,"column":1,"offset":3938},"end":{"line":47,"column":167,"offset":4104},"indent":[]}},{"type":"link","title":null,"url":"http://stackoverflow.com/questions/5009324/node-js-nginx-and-now","children":[{"type":"text","value":"Stackoverflow question","position":{"start":{"line":47,"column":168,"offset":4105},"end":{"line":47,"column":190,"offset":4127},"indent":[]}}],"position":{"start":{"line":47,"column":167,"offset":4104},"end":{"line":47,"column":257,"offset":4194},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":47,"column":257,"offset":4194},"end":{"line":47,"column":258,"offset":4195},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":3938},"end":{"line":47,"column":258,"offset":4195},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"After some tinkering I used the following configuration file to specify port 3000 as the upstream location for the Express app, and then using proxy","position":{"start":{"line":49,"column":1,"offset":4197},"end":{"line":49,"column":149,"offset":4345},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"pass and proxy","position":{"start":{"line":49,"column":150,"offset":4346},"end":{"line":49,"column":164,"offset":4360},"indent":[]}}],"position":{"start":{"line":49,"column":149,"offset":4345},"end":{"line":49,"column":165,"offset":4361},"indent":[]}},{"type":"text","value":"set_... to specify what should happen with requests to, in this case, helloworld.grabeh.net.","position":{"start":{"line":49,"column":165,"offset":4361},"end":{"line":49,"column":257,"offset":4453},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":4197},"end":{"line":49,"column":257,"offset":4453},"indent":[]}},{"type":"code","lang":null,"value":"      worker_processes 1;\n\n      events {\n        worker_connections 1024;\n      }\n      http {\n\n          include       mime.types;\n          default_type  application/octet-stream;\n          sendfile      on;\n          tcp_nopush    on;\n\n      # specify the location of the Express app you want to serve up\n\n      upstream helloworld {\n        server localhost:3000;\n      }\n\n      # calls to www.grabeh.net will be rewritten to grabeh.net\n\n      server {\n        listen 80;\n          server_name www.grabeh.net *.grabeh.net;\n          rewrite ^(.*) http://grabeh.net$1 permanent;\n      } \n\n      # specify what will happen when a request to helloworld.[your domain] is made. \n      # Here we are proxying the Express app through.\n\n      server {\n        listen 80;\n        server_name helloworld.grabeh.net;\n\n        location / {\n          try_files $uri @helloworld;\n      }\n\n        location @helloworld {\n          proxy_set_header X-Real-IP $remote_addr;\n          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n          proxy_set_header Host $proxy_host;\n          proxy_set_header X-NginX-Proxy true;\n          proxy_pass http://helloworld;\n          }\n      }\n\n      # basic element where we're sending index.html for requests to grabeh.net/\n      server {\n        listen 80; \n        server_name grabeh.net;\n\n        location / {\n          root html/home;\n          index index.html index.htm;\n          }  \n          }\n      }","position":{"start":{"line":50,"column":1,"offset":4454},"end":{"line":108,"column":4,"offset":5915},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you use this you'll obviously have to update the domain name 'grabeh.net' to your own domain.","position":{"start":{"line":109,"column":1,"offset":5916},"end":{"line":109,"column":97,"offset":6012},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":5916},"end":{"line":109,"column":97,"offset":6012},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Testing your .conf before sending it live is important. If I'm making any changes to nginx.conf I first use 'cp nginx.conf test.conf' and make changes to test.conf rather than the live file. Testing the file is done by ./nginx -t -c ","position":{"start":{"line":111,"column":1,"offset":6014},"end":{"line":111,"column":234,"offset":6247},"indent":[]}},{"type":"linkReference","identifier":"location of test.conf","referenceType":"shortcut","children":[{"type":"text","value":"location of test.conf","position":{"start":{"line":111,"column":235,"offset":6248},"end":{"line":111,"column":256,"offset":6269},"indent":[]}}],"position":{"start":{"line":111,"column":234,"offset":6247},"end":{"line":111,"column":257,"offset":6270},"indent":[]}},{"type":"text","value":". If tests pass, then using 'mv test.conf nginx.conf' will switch in the new conf for the existing one.","position":{"start":{"line":111,"column":257,"offset":6270},"end":{"line":111,"column":360,"offset":6373},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":6014},"end":{"line":111,"column":360,"offset":6373},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"After switching in the modified .conf file using './nginx -s reload' should result in 'Hello World' showing when you navigate to 'helloworld.","position":{"start":{"line":113,"column":1,"offset":6375},"end":{"line":113,"column":142,"offset":6516},"indent":[]}},{"type":"linkReference","identifier":"yourdomain","referenceType":"shortcut","children":[{"type":"text","value":"yourdomain","position":{"start":{"line":113,"column":143,"offset":6517},"end":{"line":113,"column":153,"offset":6527},"indent":[]}}],"position":{"start":{"line":113,"column":142,"offset":6516},"end":{"line":113,"column":154,"offset":6528},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":113,"column":154,"offset":6528},"end":{"line":113,"column":155,"offset":6529},"indent":[]}},{"type":"linkReference","identifier":"tld","referenceType":"shortcut","children":[{"type":"text","value":"tld","position":{"start":{"line":113,"column":156,"offset":6530},"end":{"line":113,"column":159,"offset":6533},"indent":[]}}],"position":{"start":{"line":113,"column":155,"offset":6529},"end":{"line":113,"column":160,"offset":6534},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":113,"column":160,"offset":6534},"end":{"line":113,"column":161,"offset":6535},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":6375},"end":{"line":113,"column":161,"offset":6535},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Hopefully the above or at least parts of it are useful. It's always good for me to get thoughts down to help cement my understanding. I'm still getting to grips with Nginx and whilst there was lots of good information on Digital Ocean's site and Stackoverflow of course, there didn't seem to be a full step-by-step guide to the entire process.","position":{"start":{"line":115,"column":1,"offset":6537},"end":{"line":115,"column":344,"offset":6880},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":6537},"end":{"line":115,"column":344,"offset":6880},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":117,"column":1,"offset":6882}}}},{"id":"transformer-remark-markdown-ast-01f04681e5fedffaf3eb7568ff13d0d1--","value":{"type":"root","children":[{"type":"yaml","value":"title: 'A comparison of drafting legal documents vs coding'\npath: '/A-comparison-of-drafting-legal-documents-vs-coding'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":127},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Having done a lot of legal drafting in my time and a little ","position":{"start":{"line":6,"column":1,"offset":129},"end":{"line":6,"column":61,"offset":189},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/grabbeh","children":[{"type":"text","value":"coding","position":{"start":{"line":6,"column":62,"offset":190},"end":{"line":6,"column":68,"offset":196},"indent":[]}}],"position":{"start":{"line":6,"column":61,"offset":189},"end":{"line":6,"column":97,"offset":225},"indent":[]}},{"type":"text","value":" also, I started to notice a few similarities between the two processes which I thought I'd write about. I also talk about one way in which the two processes diverge.","position":{"start":{"line":6,"column":97,"offset":225},"end":{"line":6,"column":263,"offset":391},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":129},"end":{"line":6,"column":263,"offset":391},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Avoiding repetition and keeping things DRY","position":{"start":{"line":8,"column":3,"offset":395},"end":{"line":8,"column":45,"offset":437},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":393},"end":{"line":8,"column":47,"offset":439},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":393},"end":{"line":8,"column":47,"offset":439},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When drafting legal documents, I'll sometimes find myself repeating a specific phrase or collection of words. To remove this repetition, you can create a defined term and then use the same defined term throughout the agreement.","position":{"start":{"line":10,"column":1,"offset":441},"end":{"line":10,"column":228,"offset":668},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":441},"end":{"line":10,"column":228,"offset":668},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example \"Confidential Information\" can be defined and then re-used throughout the agreement (making it as broad or as narrow as you might like, subject to enforceability).","position":{"start":{"line":12,"column":1,"offset":670},"end":{"line":12,"column":176,"offset":845},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":670},"end":{"line":12,"column":176,"offset":845},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This could be broadly analogous to using functions to collect together a specific area of functionality which can then be re-used without repeating the original code.","position":{"start":{"line":14,"column":1,"offset":847},"end":{"line":14,"column":167,"offset":1013},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":847},"end":{"line":14,"column":167,"offset":1013},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Separation of concerns","position":{"start":{"line":16,"column":3,"offset":1017},"end":{"line":16,"column":25,"offset":1039},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1015},"end":{"line":16,"column":27,"offset":1041},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1015},"end":{"line":16,"column":27,"offset":1041},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When you're working in an organisation with agreements that will be re-used frequently and by non-lawyers, it's good to separate out firstly as much as possible content that will need to change each time the document is used, and secondly content that is standard and is therefore unlikely in the first instance to change. Although sending it over to the other side's lawyers is a different matter.","position":{"start":{"line":18,"column":1,"offset":1043},"end":{"line":18,"column":399,"offset":1441},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1043},"end":{"line":18,"column":399,"offset":1441},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This can be done by moving changeable terms (price, delivery schedule, licence period etc) from the main body of the agreement into a schedule. This way when it comes to be re-used the user will only need to update the schedule and will not have to get involved with the main body of the agreement. Overall this hopefully means that the time to get a contract out to the other side is greatly reduced, or at least that's the plan.","position":{"start":{"line":20,"column":1,"offset":1443},"end":{"line":20,"column":431,"offset":1873},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1443},"end":{"line":20,"column":431,"offset":1873},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This has parallels with avoiding the use of CSS and Javascript inline in HTML. If for example you're allowing a user to customise a simple layout, then there isn't necessarily a need to have the user interact with the HTML itself as, depending on the circumstances of course.","position":{"start":{"line":22,"column":1,"offset":1875},"end":{"line":22,"column":276,"offset":2150},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1875},"end":{"line":22,"column":276,"offset":2150},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If everything is inline and a jumble of CSS, JS and HTML I would argue this increases the chances of a particular style update being missed (as is the case with an agreement, where the risk of missing an update to a changeable term is increased if everything is within the body of the agreement).","position":{"start":{"line":24,"column":1,"offset":2152},"end":{"line":24,"column":297,"offset":2448},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":2152},"end":{"line":24,"column":297,"offset":2448},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Straining the analogy","position":{"start":{"line":26,"column":3,"offset":2452},"end":{"line":26,"column":24,"offset":2473},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":2450},"end":{"line":26,"column":26,"offset":2475},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":2450},"end":{"line":26,"column":26,"offset":2475},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You could go as far as to say that the main body of an agreement is the view, the schedule with variables is the model, and the definitions section is the controller/router, providing the glue between the model and the view, defining how the terms in the schedule (price, payment terms, work period) are used in the view.","position":{"start":{"line":28,"column":1,"offset":2477},"end":{"line":28,"column":322,"offset":2798},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":2477},"end":{"line":28,"column":322,"offset":2798},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":"It's MVC, but not as we know it, Jim","url":"/legalmvc.png","alt":null,"position":{"start":{"line":30,"column":1,"offset":2800},"end":{"line":30,"column":58,"offset":2857},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":2800},"end":{"line":30,"column":58,"offset":2857},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"User feedback","position":{"start":{"line":32,"column":3,"offset":2861},"end":{"line":32,"column":16,"offset":2874},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":2859},"end":{"line":32,"column":18,"offset":2876},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":2859},"end":{"line":32,"column":18,"offset":2876},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A little trite, but both from a legal and a coding perspective, it's really important to have the results of your efforts reviewed by those who will be actually using the end result. Within my organisation, after I've drafted the document it will go out to the people who asked me to draft it in the first place for comments.","position":{"start":{"line":34,"column":1,"offset":2878},"end":{"line":34,"column":326,"offset":3203},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":2878},"end":{"line":34,"column":326,"offset":3203},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As a side-note, whether or not they'll give it a thorough read-through depends a) on the person's dedication to ensuring the terms of the proposed work are accurately reflected in the agreement and b) their trust in the abilities of the legal department!","position":{"start":{"line":36,"column":1,"offset":3205},"end":{"line":36,"column":255,"offset":3459},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":3205},"end":{"line":36,"column":255,"offset":3459},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In both cases you'll quickly find out what the important parts are and where improvements are desired, even if perhaps the full extent of the work isn't thoroughly assessed. If you're working for a services-based organisation, the expenses clause is generally the most important aspect of the agreement.","position":{"start":{"line":38,"column":1,"offset":3461},"end":{"line":38,"column":304,"offset":3764},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":3461},"end":{"line":38,"column":304,"offset":3764},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Modularity","position":{"start":{"line":40,"column":3,"offset":3768},"end":{"line":40,"column":13,"offset":3778},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":3766},"end":{"line":40,"column":15,"offset":3780},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":3766},"end":{"line":40,"column":15,"offset":3780},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Most agreements will have a set of standard clauses which you will find in most agreements, like choice of law, limitation of liability, assignment, waiver, and variation. Being able to slot these in and not have to worry about drafting new clauses each time takes time out the drafting process. This leaves time to focus on the elements unique to the agreement.","position":{"start":{"line":42,"column":1,"offset":3782},"end":{"line":42,"column":363,"offset":4144},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":3782},"end":{"line":42,"column":363,"offset":4144},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In the same way, when coding web applications, you will most likely have standard pieces of functionality like user authentication and file uploads, or frameworks like ","position":{"start":{"line":44,"column":1,"offset":4146},"end":{"line":44,"column":169,"offset":4314},"indent":[]}},{"type":"link","title":null,"url":"http://foundation.zurb.com/","children":[{"type":"text","value":"Foundation","position":{"start":{"line":44,"column":170,"offset":4315},"end":{"line":44,"column":180,"offset":4325},"indent":[]}}],"position":{"start":{"line":44,"column":169,"offset":4314},"end":{"line":44,"column":210,"offset":4355},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":44,"column":210,"offset":4355},"end":{"line":44,"column":212,"offset":4357},"indent":[]}},{"type":"link","title":null,"url":"http://getbootstrap.com/","children":[{"type":"text","value":"Bootstrap","position":{"start":{"line":44,"column":213,"offset":4358},"end":{"line":44,"column":222,"offset":4367},"indent":[]}}],"position":{"start":{"line":44,"column":212,"offset":4357},"end":{"line":44,"column":249,"offset":4394},"indent":[]}},{"type":"text","value":"and ","position":{"start":{"line":44,"column":249,"offset":4394},"end":{"line":44,"column":253,"offset":4398},"indent":[]}},{"type":"link","title":null,"url":"http://purecss.io/","children":[{"type":"text","value":"Pure.CSS","position":{"start":{"line":44,"column":254,"offset":4399},"end":{"line":44,"column":262,"offset":4407},"indent":[]}}],"position":{"start":{"line":44,"column":253,"offset":4398},"end":{"line":44,"column":283,"offset":4428},"indent":[]}},{"type":"text","value":" for the appearance of an app. Mozilla's Brick and Google's Polymer also open up the possibility of packaging up discrete elements of functionality.","position":{"start":{"line":44,"column":283,"offset":4428},"end":{"line":44,"column":431,"offset":4576},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":4146},"end":{"line":44,"column":431,"offset":4576},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"But where do they differ?","position":{"start":{"line":46,"column":3,"offset":4580},"end":{"line":46,"column":28,"offset":4605},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":4578},"end":{"line":46,"column":30,"offset":4607},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":4578},"end":{"line":46,"column":30,"offset":4607},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It's fair to say there's one pretty glaring way in which the two processes differ. If I want to draft a document I'm much more restricted in the way I can go out and grab existing examples that are free to use.","position":{"start":{"line":48,"column":1,"offset":4609},"end":{"line":48,"column":211,"offset":4819},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":4609},"end":{"line":48,"column":211,"offset":4819},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is in stark contract to the many open source options that are available to help a person to quickly incorporate functionality into an app (at least in my experience in using ","position":{"start":{"line":50,"column":1,"offset":4821},"end":{"line":50,"column":180,"offset":5000},"indent":[]}},{"type":"link","title":null,"url":"http://nodejs.org","children":[{"type":"text","value":"Node.js","position":{"start":{"line":50,"column":181,"offset":5001},"end":{"line":50,"column":188,"offset":5008},"indent":[]}}],"position":{"start":{"line":50,"column":180,"offset":5000},"end":{"line":50,"column":208,"offset":5028},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":50,"column":208,"offset":5028},"end":{"line":50,"column":213,"offset":5033},"indent":[]}},{"type":"link","title":null,"url":"http://expressjs.com","children":[{"type":"text","value":"Express","position":{"start":{"line":50,"column":214,"offset":5034},"end":{"line":50,"column":221,"offset":5041},"indent":[]}}],"position":{"start":{"line":50,"column":213,"offset":5033},"end":{"line":50,"column":244,"offset":5064},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":50,"column":244,"offset":5064},"end":{"line":50,"column":246,"offset":5066},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":4821},"end":{"line":50,"column":246,"offset":5066},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Some folks including ","position":{"start":{"line":52,"column":1,"offset":5068},"end":{"line":52,"column":22,"offset":5089},"indent":[]}},{"type":"link","title":null,"url":"http://www.legalzoom.com","children":[{"type":"text","value":"Legal Zoom","position":{"start":{"line":52,"column":23,"offset":5090},"end":{"line":52,"column":33,"offset":5100},"indent":[]}}],"position":{"start":{"line":52,"column":22,"offset":5089},"end":{"line":52,"column":60,"offset":5127},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":52,"column":60,"offset":5127},"end":{"line":52,"column":65,"offset":5132},"indent":[]}},{"type":"link","title":null,"url":"http://www.docracy.com","children":[{"type":"text","value":"Docracy","position":{"start":{"line":52,"column":66,"offset":5133},"end":{"line":52,"column":73,"offset":5140},"indent":[]}}],"position":{"start":{"line":52,"column":65,"offset":5132},"end":{"line":52,"column":98,"offset":5165},"indent":[]}},{"type":"text","value":" are taking steps to simplify the process for many users of legal services (in the case of the former and the latter) and to allow lawyers to provide and comment on agreements (in the case of the latter).","position":{"start":{"line":52,"column":98,"offset":5165},"end":{"line":52,"column":302,"offset":5369},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":5068},"end":{"line":52,"column":302,"offset":5369},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"However at present there isn't a widely-used service like Github where to extend the analogy and in the context of open source code, lawyers from different firms collaborate on improving documents used by all or used by many different people","position":{"start":{"line":54,"column":1,"offset":5371},"end":{"line":54,"column":242,"offset":5612},"indent":[]}},{"type":"html","value":"<sup id=\"fnref1\">","position":{"start":{"line":54,"column":242,"offset":5612},"end":{"line":54,"column":259,"offset":5629},"indent":[]}},{"type":"link","title":null,"url":"#fn1","children":[{"type":"text","value":"1","position":{"start":{"line":54,"column":260,"offset":5630},"end":{"line":54,"column":261,"offset":5631},"indent":[]}}],"position":{"start":{"line":54,"column":259,"offset":5629},"end":{"line":54,"column":268,"offset":5638},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":54,"column":268,"offset":5638},"end":{"line":54,"column":274,"offset":5644},"indent":[]}},{"type":"text","value":" (perhaps an overly broad definition) or lawyers might develop a set of wording internally and decide to release it for general consumption.","position":{"start":{"line":54,"column":274,"offset":5644},"end":{"line":54,"column":414,"offset":5784},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":5371},"end":{"line":54,"column":414,"offset":5784},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Whether this will change in the future remains to be seen however, there are good reasons for this reduced participation:","position":{"start":{"line":56,"column":1,"offset":5786},"end":{"line":56,"column":122,"offset":5907},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":5786},"end":{"line":56,"column":122,"offset":5907},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"unlike software companies, law firms are less likely to gain goodwill as a result of making available clauses","position":{"start":{"line":58,"column":5,"offset":5913},"end":{"line":58,"column":114,"offset":6022},"indent":[]}}],"position":{"start":{"line":58,"column":5,"offset":5913},"end":{"line":58,"column":114,"offset":6022},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":5909},"end":{"line":58,"column":114,"offset":6022},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"even standard clauses can need to be changed depending on the specific circumstances of a deal, reducing the benefit of open sourcing them in the first place","position":{"start":{"line":59,"column":5,"offset":6027},"end":{"line":59,"column":162,"offset":6184},"indent":[]}}],"position":{"start":{"line":59,"column":5,"offset":6027},"end":{"line":59,"column":162,"offset":6184},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":6023},"end":{"line":59,"column":162,"offset":6184},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"confidentiality issues are more likely to be an issue","position":{"start":{"line":60,"column":5,"offset":6189},"end":{"line":60,"column":58,"offset":6242},"indent":[]}}],"position":{"start":{"line":60,"column":5,"offset":6189},"end":{"line":60,"column":58,"offset":6242},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":6185},"end":{"line":60,"column":58,"offset":6242},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"perhaps most importantly, law firms act for clients who may take umbrage at releasing work (even if completely anonymised) as a third party could still benefit from the work, particularly bespoke drafting","position":{"start":{"line":61,"column":5,"offset":6247},"end":{"line":61,"column":209,"offset":6451},"indent":[]}}],"position":{"start":{"line":61,"column":5,"offset":6247},"end":{"line":61,"column":209,"offset":6451},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":6243},"end":{"line":61,"column":209,"offset":6451},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":5909},"end":{"line":61,"column":209,"offset":6451},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"I'm not saying that many of these reasons cannot be overcome but at present the above barriers are sufficient to prevent wider participation by lawyers in open sourcing of legal documentation","position":{"start":{"line":63,"column":1,"offset":6453},"end":{"line":63,"column":192,"offset":6644},"indent":[]}},{"type":"html","value":"<sup id=\"fnref2\">","position":{"start":{"line":63,"column":192,"offset":6644},"end":{"line":63,"column":209,"offset":6661},"indent":[]}},{"type":"link","title":null,"url":"#fn2","children":[{"type":"text","value":"2","position":{"start":{"line":63,"column":210,"offset":6662},"end":{"line":63,"column":211,"offset":6663},"indent":[]}}],"position":{"start":{"line":63,"column":209,"offset":6661},"end":{"line":63,"column":218,"offset":6670},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":63,"column":218,"offset":6670},"end":{"line":63,"column":224,"offset":6676},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":63,"column":224,"offset":6676},"end":{"line":63,"column":225,"offset":6677},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":6453},"end":{"line":63,"column":225,"offset":6677},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As for the future, it will be interesting to see whether start-ups operating in the legal sector will be able to exert sufficient influence or make it attractive enough for large volumes of lawyers to start doing this.","position":{"start":{"line":65,"column":1,"offset":6679},"end":{"line":65,"column":219,"offset":6897},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":6679},"end":{"line":65,"column":219,"offset":6897},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":68,"column":1,"offset":6900},"end":{"line":68,"column":6,"offset":6905},"indent":[]}},{"type":"list","ordered":true,"start":1,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"There are movements in certain niche areas where lawyers do collaborate to improve documents to a standard like ","position":{"start":{"line":70,"column":5,"offset":6911},"end":{"line":70,"column":117,"offset":7023},"indent":[]}},{"type":"link","title":null,"url":"http://www2.isda.org/","children":[{"type":"text","value":"ISDA","position":{"start":{"line":70,"column":118,"offset":7024},"end":{"line":70,"column":122,"offset":7028},"indent":[]}}],"position":{"start":{"line":70,"column":117,"offset":7023},"end":{"line":70,"column":146,"offset":7052},"indent":[]}},{"type":"text","value":" (for financial swaps and derivatives) and the ","position":{"start":{"line":70,"column":146,"offset":7052},"end":{"line":70,"column":193,"offset":7099},"indent":[]}},{"type":"link","title":null,"url":"http://www.jctltd.co.uk/","children":[{"type":"text","value":"JCT","position":{"start":{"line":70,"column":194,"offset":7100},"end":{"line":70,"column":197,"offset":7103},"indent":[]}}],"position":{"start":{"line":70,"column":193,"offset":7099},"end":{"line":70,"column":224,"offset":7130},"indent":[]}},{"type":"text","value":" for construction contracts but this is still a relatively closed system and is the exception rather than the rule. ","position":{"start":{"line":70,"column":224,"offset":7130},"end":{"line":70,"column":340,"offset":7246},"indent":[]}},{"type":"link","title":null,"url":"#fnref1","children":[{"type":"text","value":"↩","position":{"start":{"line":70,"column":341,"offset":7247},"end":{"line":70,"column":342,"offset":7248},"indent":[]}}],"position":{"start":{"line":70,"column":340,"offset":7246},"end":{"line":70,"column":352,"offset":7258},"indent":[]}}],"position":{"start":{"line":70,"column":5,"offset":6911},"end":{"line":70,"column":352,"offset":7258},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":6907},"end":{"line":71,"column":1,"offset":7259},"indent":[1]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"One counter-example is the ","position":{"start":{"line":72,"column":5,"offset":7264},"end":{"line":72,"column":32,"offset":7291},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/twitter/innovators-patent-agreement/blob/master/innovators-patent-agreement.md","children":[{"type":"text","value":"Innovators Patent Agreement","position":{"start":{"line":72,"column":33,"offset":7292},"end":{"line":72,"column":60,"offset":7319},"indent":[]}}],"position":{"start":{"line":72,"column":32,"offset":7291},"end":{"line":72,"column":160,"offset":7419},"indent":[]}},{"type":"text","value":".  ","position":{"start":{"line":72,"column":160,"offset":7419},"end":{"line":72,"column":163,"offset":7422},"indent":[]}},{"type":"link","title":null,"url":"#fnref2","children":[{"type":"text","value":"↩","position":{"start":{"line":72,"column":164,"offset":7423},"end":{"line":72,"column":165,"offset":7424},"indent":[]}}],"position":{"start":{"line":72,"column":163,"offset":7422},"end":{"line":72,"column":175,"offset":7434},"indent":[]}}],"position":{"start":{"line":72,"column":5,"offset":7264},"end":{"line":72,"column":175,"offset":7434},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":7260},"end":{"line":72,"column":175,"offset":7434},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":6907},"end":{"line":72,"column":175,"offset":7434},"indent":[1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":74,"column":1,"offset":7436}}}},{"id":"transformer-remark-markdown-ast-027925bddd41afc8bc0842a9e5e4876e--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Online-terms-better-with-notice'\ntitle: 'Online terms - better with notice'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":91},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In some countries in the world, laws are in place to help protect the consumer against the imposition of unfair contract terms.","position":{"start":{"line":6,"column":1,"offset":93},"end":{"line":6,"column":128,"offset":220},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":93},"end":{"line":6,"column":128,"offset":220},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The rationale behind such laws is ensure that a company cannot take advantage of the fact that a customer is not always in a position to understand standard terms placed in front of them, and is also in a relatively weak bargaining position to make any changes to terms.","position":{"start":{"line":8,"column":1,"offset":222},"end":{"line":8,"column":271,"offset":492},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":222},"end":{"line":8,"column":271,"offset":492},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"At the same time, especially in e-commerce terms, it's important to not present any major hurdles to a consumer's usage of e-commerce. For example, not providing protections would mean that consumers would be more likely (ok, only a little more likely) to wade through terms to make sure there wasn't anything unduly onerous.","position":{"start":{"line":10,"column":1,"offset":494},"end":{"line":10,"column":326,"offset":819},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":494},"end":{"line":10,"column":326,"offset":819},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Consumer protection regulations mean that a customer can be relatively assured that regardless of the terms they sign up to (which are generally unread) because of consumer protection regulations, the terms will either a) be reasonable in the first instance or b) if they do contain unreasonable terms, they will be struck out if a company ever sought to enforce them.","position":{"start":{"line":12,"column":1,"offset":821},"end":{"line":12,"column":369,"offset":1189},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":821},"end":{"line":12,"column":369,"offset":1189},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Although the above protections are in most cases likely to mean that the vast blocks of text that often form online terms will not contain anything nasty, there are steps that a website provider can take to improve their chances of being able to rely on its terms.","position":{"start":{"line":14,"column":1,"offset":1191},"end":{"line":14,"column":265,"offset":1455},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":1191},"end":{"line":14,"column":265,"offset":1455},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example it's important to use plain language in your terms and also to highlight any particularly onerous terms (even if their own right they may be entirely reasonable).","position":{"start":{"line":16,"column":1,"offset":1457},"end":{"line":16,"column":175,"offset":1631},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1457},"end":{"line":16,"column":175,"offset":1631},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"One of the UK's most famous judges, Lord Denning in the case of ","position":{"start":{"line":18,"column":1,"offset":1633},"end":{"line":18,"column":65,"offset":1697},"indent":[]}},{"type":"link","title":null,"url":"http://en.wikipedia.org/wiki/J_Spurling_Ltd_v_Bradshaw","children":[{"type":"text","value":"J Spurling Ltd v Bradshaw","position":{"start":{"line":18,"column":66,"offset":1698},"end":{"line":18,"column":91,"offset":1723},"indent":[]}}],"position":{"start":{"line":18,"column":65,"offset":1697},"end":{"line":18,"column":148,"offset":1780},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":18,"column":148,"offset":1780},"end":{"line":18,"column":149,"offset":1781},"indent":[]}},{"type":"linkReference","identifier":"1956","referenceType":"shortcut","children":[{"type":"text","value":"1956","position":{"start":{"line":18,"column":150,"offset":1782},"end":{"line":18,"column":154,"offset":1786},"indent":[]}}],"position":{"start":{"line":18,"column":149,"offset":1781},"end":{"line":18,"column":155,"offset":1787},"indent":[]}},{"type":"text","value":" EWCA Civ 3 offered a particularly pertinent quote back in 1956 commenting that:","position":{"start":{"line":18,"column":155,"offset":1787},"end":{"line":18,"column":235,"offset":1867},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1633},"end":{"line":18,"column":235,"offset":1867},"indent":[]}},{"type":"html","value":"<div class=\"quote\">\"I quite agree that the more unreasonable a clause is, the greater the notice which must be given of it. Some clauses which I have seen would need to be printed in red ink on the face of the document with a red hand pointing to it before the notice could be held to be sufficient.\"</div>","position":{"start":{"line":20,"column":1,"offset":1869},"end":{"line":20,"column":307,"offset":2175},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With online terms it could be a good idea to highlight to a customer where a particularly onerous term is proposed to be introduced.","position":{"start":{"line":22,"column":1,"offset":2177},"end":{"line":22,"column":133,"offset":2309},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":2177},"end":{"line":22,"column":133,"offset":2309},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With this in mind, I thought it would be interesting to try to use some code to introduce this into some generic terms (Lorem Ipsum in this case). Using ","position":{"start":{"line":24,"column":1,"offset":2311},"end":{"line":24,"column":154,"offset":2464},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/Prinzhorn/skrollr","children":[{"type":"text","value":"Skrollr.js","position":{"start":{"line":24,"column":155,"offset":2465},"end":{"line":24,"column":165,"offset":2475},"indent":[]}}],"position":{"start":{"line":24,"column":154,"offset":2464},"end":{"line":24,"column":204,"offset":2514},"indent":[]}},{"type":"text","value":", I created some functionality so as a user scrolls down the page, highlighted blocks move into view alerting them to particularly onerous terms.","position":{"start":{"line":24,"column":204,"offset":2514},"end":{"line":24,"column":349,"offset":2659},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":2311},"end":{"line":24,"column":349,"offset":2659},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The example can be found ","position":{"start":{"line":26,"column":1,"offset":2661},"end":{"line":26,"column":26,"offset":2686},"indent":[]}},{"type":"link","title":null,"url":"http://legal-terms-example.grabeh.net","children":[{"type":"text","value":"here","position":{"start":{"line":26,"column":27,"offset":2687},"end":{"line":26,"column":31,"offset":2691},"indent":[]}}],"position":{"start":{"line":26,"column":26,"offset":2686},"end":{"line":26,"column":71,"offset":2731},"indent":[]}},{"type":"text","value":". Scrolling down should result in the warning notices appearing (although only on desktop at the moment).","position":{"start":{"line":26,"column":71,"offset":2731},"end":{"line":26,"column":176,"offset":2836},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":2661},"end":{"line":26,"column":176,"offset":2836},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"At the moment, a two column approach is taken and with Skrollr you can use relative positioning to adjust the styling of an element dependent on its position relative to the top and bottom of the viewport. Here's an example for one of the boxes.","position":{"start":{"line":28,"column":1,"offset":2838},"end":{"line":28,"column":246,"offset":3083},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":2838},"end":{"line":28,"column":246,"offset":3083},"indent":[]}},{"type":"code","lang":null,"value":"<div class=\"imp-text\" \ndata-25-top-top=\"opacity: 1; background: rgb(255,247,165); left: 0px;\" \ndata-25-top-bottom=\"opacity: 0; background: rgb(255,255,255); left: 200px;\" \ndata--25-bottom-top=\"opacity: 0; left: 200px; background: rgb(255,255,255);\" \ndata--25-bottom-bottom=\"opacity: 1; left: 0px; background: rgb(255,247,165);\">\nKidney due within 30 days of signature</div>","position":{"start":{"line":30,"column":1,"offset":3085},"end":{"line":35,"column":49,"offset":3482},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In the example by using 'top-top' (top of viewport and top of element) and 'top-bottom' (still top of viewport and bottom of element) and introducing changes in style between the two, scrolling between will smoothly transition between the two styles.","position":{"start":{"line":37,"column":1,"offset":3484},"end":{"line":37,"column":251,"offset":3734},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":3484},"end":{"line":37,"column":251,"offset":3734},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Whilst some of the term used on the page may not quite cut the mustard in terms of being reasonable, the important point to take away is that by highlighting the terms, you're more likely to have provided sufficient notice to the user.","position":{"start":{"line":39,"column":1,"offset":3736},"end":{"line":39,"column":236,"offset":3971},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":3736},"end":{"line":39,"column":236,"offset":3971},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In part, consumer law assumes a user may not read the terms, but if a company takes appropriate steps to notify its users about onerous terms, it is more likely they'll be able to rely on them in future.","position":{"start":{"line":41,"column":1,"offset":3973},"end":{"line":41,"column":204,"offset":4176},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":3973},"end":{"line":41,"column":204,"offset":4176},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":43,"column":1,"offset":4178}}}},{"id":"transformer-remark-markdown-html-ast-4fadd4084a649312b442b977a4ddf3ff--","value":{"type":"root","children":[{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"    971 additions and 3,493 deletions\n"}],"position":{"start":{"line":6,"column":1,"offset":111},"end":{"line":6,"column":42,"offset":152}}}],"position":{"start":{"line":6,"column":1,"offset":111},"end":{"line":6,"column":42,"offset":152}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The above statistic from Github from the repository for one of my apps ","position":{"start":{"line":8,"column":1,"offset":154},"end":{"line":8,"column":72,"offset":225}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/grabbeh/routebop"},"children":[{"type":"text","value":"Routebop","position":{"start":{"line":8,"column":73,"offset":226},"end":{"line":8,"column":81,"offset":234}}}],"position":{"start":{"line":8,"column":72,"offset":225},"end":{"line":8,"column":119,"offset":272}}},{"type":"text","value":" showing the changes to the repo following a few days of editing is gratifying to me","position":{"start":{"line":8,"column":119,"offset":272},"end":{"line":8,"column":203,"offset":356}}},{"type":"raw","value":"<sup id=\"fnref1\">","position":{"start":{"line":8,"column":203,"offset":356},"end":{"line":8,"column":220,"offset":373}}},{"type":"element","tagName":"a","properties":{"href":"#fn1"},"children":[{"type":"text","value":"1","position":{"start":{"line":8,"column":221,"offset":374},"end":{"line":8,"column":222,"offset":375}}}],"position":{"start":{"line":8,"column":220,"offset":373},"end":{"line":8,"column":229,"offset":382}}},{"type":"raw","value":"</sup>","position":{"start":{"line":8,"column":229,"offset":382},"end":{"line":8,"column":235,"offset":388}}},{"type":"text","value":".","position":{"start":{"line":8,"column":235,"offset":388},"end":{"line":8,"column":236,"offset":389}}}],"position":{"start":{"line":8,"column":1,"offset":154},"end":{"line":8,"column":236,"offset":389}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Whilst as a beginner you would normally code to improve or build a new feature, a user of the site would not notice any change to the functionality of the site following the above changes.","position":{"start":{"line":10,"column":1,"offset":391},"end":{"line":10,"column":189,"offset":579}}}],"position":{"start":{"line":10,"column":1,"offset":391},"end":{"line":10,"column":189,"offset":579}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So on the basis that you'd normally change code to alter functionality, what actually changed?","position":{"start":{"line":12,"column":1,"offset":581},"end":{"line":12,"column":95,"offset":675}}}],"position":{"start":{"line":12,"column":1,"offset":581},"end":{"line":12,"column":95,"offset":675}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When I initially built the site because I had a fear of cross-contamination of JS amongst different pages, and because I was (and still am in many ways) a beginner, I decided to place all the JavaScript necessary for each page in the page itself with no sharing of JS between pages at all. As functionality between pages is shared to an extent, this meant that there was a significant amount of duplication","position":{"start":{"line":14,"column":1,"offset":677},"end":{"line":14,"column":407,"offset":1083}}},{"type":"raw","value":"<sup id=\"fnref2\">","position":{"start":{"line":14,"column":407,"offset":1083},"end":{"line":14,"column":424,"offset":1100}}},{"type":"element","tagName":"a","properties":{"href":"#fn2"},"children":[{"type":"text","value":"2","position":{"start":{"line":14,"column":425,"offset":1101},"end":{"line":14,"column":426,"offset":1102}}}],"position":{"start":{"line":14,"column":424,"offset":1100},"end":{"line":14,"column":433,"offset":1109}}},{"type":"raw","value":"</sup>","position":{"start":{"line":14,"column":433,"offset":1109},"end":{"line":14,"column":439,"offset":1115}}},{"type":"text","value":".","position":{"start":{"line":14,"column":439,"offset":1115},"end":{"line":14,"column":440,"offset":1116}}}],"position":{"start":{"line":14,"column":1,"offset":677},"end":{"line":14,"column":440,"offset":1116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However, the extent of duplication meant that there was always a nagging feeling that switching from the JS-per-page approach to one using separate JS files would lead to a much cleaner approach and allow for an easier time in updating functionality in the future.","position":{"start":{"line":16,"column":1,"offset":1118},"end":{"line":16,"column":265,"offset":1382}}}],"position":{"start":{"line":16,"column":1,"offset":1118},"end":{"line":16,"column":265,"offset":1382}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When I decided to refactor the code I first selected the page which I felt had the most functionality that I could potentially share across other pages. Following this, still within the same page I split up functions where I could. For example, one function collects and converts markers and waypoints into a more basic form, POSTs to the server, and then responds with a success message.","position":{"start":{"line":18,"column":1,"offset":1384},"end":{"line":18,"column":389,"offset":1772}}}],"position":{"start":{"line":18,"column":1,"offset":1384},"end":{"line":18,"column":389,"offset":1772}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"On the basis that the POSTing to the server element would be repeated, I split out this functionality and put a small wrapper around it to pass through transaction specific arguments into the function as follows:","position":{"start":{"line":20,"column":1,"offset":1774},"end":{"line":20,"column":213,"offset":1986}}}],"position":{"start":{"line":20,"column":1,"offset":1774},"end":{"line":20,"column":213,"offset":1986}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this.sendToServer = function(postdata, posturl, completefunction){\n$.ajax({\n    url: posturl,\n    type: \"POST\",\n    contentType: \"application/json\",\n    processData: false,\n    data: JSON.stringify(postdata),\n    success: completefunction\n    });\n};\nthis.sendToServer(postdata, \"/show\", function(data){\n    $('#result').html(data.message);\n    });\n};\n"}],"position":{"start":{"line":22,"column":1,"offset":1988},"end":{"line":35,"column":7,"offset":2394}}}],"position":{"start":{"line":22,"column":1,"offset":1988},"end":{"line":35,"column":7,"offset":2394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This way, the function could be re-used passing in different arguments depending on what was necessary in the circumstances. In respect of the 'completefunction' and as per the above I use an anonymous function when the function is actually called to specify what will happen when the POST request is successful (displaying a success message, or processing the data onto a map for example).","position":{"start":{"line":37,"column":1,"offset":2396},"end":{"line":37,"column":391,"offset":2786}}}],"position":{"start":{"line":37,"column":1,"offset":2396},"end":{"line":37,"column":391,"offset":2786}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Following this point, I then started work on a separate JavaScript file switching across functions from the page itself into the JS file. I adopted a rather timid approach to this initially, switching over a function or two, then making reference to them in the HTML file to ensure things were still working.","position":{"start":{"line":39,"column":1,"offset":2788},"end":{"line":39,"column":309,"offset":3096}}}],"position":{"start":{"line":39,"column":1,"offset":2788},"end":{"line":39,"column":309,"offset":3096}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Design patterns you say?","position":{"start":{"line":41,"column":3,"offset":3100},"end":{"line":41,"column":27,"offset":3124}}}],"position":{"start":{"line":41,"column":1,"offset":3098},"end":{"line":41,"column":29,"offset":3126}}}],"position":{"start":{"line":41,"column":1,"offset":3098},"end":{"line":41,"column":29,"offset":3126}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I do have a copy of ","position":{"start":{"line":43,"column":1,"offset":3128},"end":{"line":43,"column":21,"offset":3148}}},{"type":"element","tagName":"a","properties":{"href":"http://addyosmani.com/resources/essentialjsdesignpatterns/book/"},"children":[{"type":"text","value":"Design Patterns","position":{"start":{"line":43,"column":22,"offset":3149},"end":{"line":43,"column":37,"offset":3164}}}],"position":{"start":{"line":43,"column":21,"offset":3148},"end":{"line":43,"column":103,"offset":3230}}},{"type":"text","value":" by Addy Osmani on my bookshelf at home, however, on flipping through the book, I suspect the pattern I've used is somewhere between Constructor and the module pattern.","position":{"start":{"line":43,"column":103,"offset":3230},"end":{"line":43,"column":271,"offset":3398}}}],"position":{"start":{"line":43,"column":1,"offset":3128},"end":{"line":43,"column":271,"offset":3398}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Essentially, this means that to use the JavaScript I create an instance of the Constructor by using the 'new' keyword and then attach that to a variable when opening a particular page. I think in part this is inspired by Google Maps which uses the new keyword when instantiating a new map or map-related item ilke a marker or infowindow.","position":{"start":{"line":45,"column":1,"offset":3400},"end":{"line":45,"column":338,"offset":3737}}}],"position":{"start":{"line":45,"column":1,"offset":3400},"end":{"line":45,"column":338,"offset":3737}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At the same time as creating a public interface using 'new', I also included local variables within the Constructor which are only able to be accessed by public methods on the instance. An example is as follows:","position":{"start":{"line":47,"column":1,"offset":3739},"end":{"line":47,"column":212,"offset":3950}}}],"position":{"start":{"line":47,"column":1,"offset":3739},"end":{"line":47,"column":212,"offset":3950}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function Map(){\n    var mapmarkers = [];\n    this.returnMapMarkers = function(){\n        return mapmarkers;\n    }; \n    this.addMarkersToMap = function(array){\n    // function to place marker on map & push into mapmarkersarray\n    };\n};\n\n// Instantiation\n\nvar map = new Map;\n\nmap.mapmarkers;\n>> undefined\n\nmap.returnMapMarkers()\n>> [ array of markers ]\n"}],"position":{"start":{"line":49,"column":1,"offset":3952},"end":{"line":67,"column":28,"offset":4361}}}],"position":{"start":{"line":49,"column":1,"offset":3952},"end":{"line":67,"column":28,"offset":4361}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this way, the mapmarkers private variable can only be accessed and updated using public methods (as I understand it).","position":{"start":{"line":69,"column":1,"offset":4363},"end":{"line":69,"column":121,"offset":4483}}},{"type":"raw","value":"<sup id=\"fnref3\">","position":{"start":{"line":69,"column":121,"offset":4483},"end":{"line":69,"column":138,"offset":4500}}},{"type":"element","tagName":"a","properties":{"href":"#fn3"},"children":[{"type":"text","value":"3","position":{"start":{"line":69,"column":139,"offset":4501},"end":{"line":69,"column":140,"offset":4502}}}],"position":{"start":{"line":69,"column":138,"offset":4500},"end":{"line":69,"column":147,"offset":4509}}},{"type":"raw","value":"</sup>","position":{"start":{"line":69,"column":147,"offset":4509},"end":{"line":69,"column":153,"offset":4515}}},{"type":"text","value":".","position":{"start":{"line":69,"column":153,"offset":4515},"end":{"line":69,"column":154,"offset":4516}}}],"position":{"start":{"line":69,"column":1,"offset":4363},"end":{"line":69,"column":154,"offset":4516}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Limitations on code re-use","position":{"start":{"line":71,"column":3,"offset":4520},"end":{"line":71,"column":29,"offset":4546}}}],"position":{"start":{"line":71,"column":1,"offset":4518},"end":{"line":71,"column":31,"offset":4548}}}],"position":{"start":{"line":71,"column":1,"offset":4518},"end":{"line":71,"column":31,"offset":4548}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the process of refactoring the code, there were times when in the current state, I couldn't re-use the code across pages. At this point, I had to create new functions which although very similar in nature to existing functions performed slightly differently.","position":{"start":{"line":73,"column":1,"offset":4550},"end":{"line":73,"column":262,"offset":4811}}}],"position":{"start":{"line":73,"column":1,"offset":4550},"end":{"line":73,"column":262,"offset":4811}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This was definitely a lazy way of doing things, and in future, I hope to do more work in stripping down functions into their component parts to ensure a greater ability to re-use functionality.","position":{"start":{"line":75,"column":1,"offset":4813},"end":{"line":75,"column":194,"offset":5006}}}],"position":{"start":{"line":75,"column":1,"offset":4813},"end":{"line":75,"column":194,"offset":5006}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Separation of functionality","position":{"start":{"line":77,"column":3,"offset":5010},"end":{"line":77,"column":30,"offset":5037}}}],"position":{"start":{"line":77,"column":1,"offset":5008},"end":{"line":77,"column":32,"offset":5039}}}],"position":{"start":{"line":77,"column":1,"offset":5008},"end":{"line":77,"column":32,"offset":5039}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition to the main map.js file I also created separate files to cover distinct functionality on the site. This includes image upload handling and geocoding. I think this is a fairly common practice. As part of this, I created a init() function which is then the only function called to add the functionality to the page, as it incorporates calls to all the necessary functions.","position":{"start":{"line":79,"column":1,"offset":5041},"end":{"line":79,"column":383,"offset":5423}}}],"position":{"start":{"line":79,"column":1,"offset":5041},"end":{"line":79,"column":383,"offset":5423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In summary, when it comes to code refactoring, I don't really know what I'm doing. However although the above may not be (i) the most efficient in terms of code re-use or (ii) implement a design pattern correctly, it is definitely a leap forward for me from the JS-per-page approach used previously.","position":{"start":{"line":81,"column":1,"offset":5425},"end":{"line":81,"column":300,"offset":5724}}}],"position":{"start":{"line":81,"column":1,"offset":5425},"end":{"line":81,"column":300,"offset":5724}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In future I hope to use the code I've written to help me improve my usage of design patterns and write better JavaScript generally.","position":{"start":{"line":83,"column":1,"offset":5726},"end":{"line":83,"column":132,"offset":5857}}}],"position":{"start":{"line":83,"column":1,"offset":5726},"end":{"line":83,"column":132,"offset":5857}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"footnotes\">","position":{"start":{"line":85,"column":1,"offset":5859},"end":{"line":85,"column":24,"offset":5882}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":87,"column":1,"offset":5884},"end":{"line":87,"column":6,"offset":5889}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Particularly on the basis that the total repo size was only 20k lines of code before the changes. ","position":{"start":{"line":89,"column":5,"offset":5895},"end":{"line":89,"column":103,"offset":5993}}},{"type":"element","tagName":"a","properties":{"href":"#fnref1"},"children":[{"type":"text","value":"↩","position":{"start":{"line":89,"column":104,"offset":5994},"end":{"line":89,"column":105,"offset":5995}}}],"position":{"start":{"line":89,"column":103,"offset":5993},"end":{"line":89,"column":115,"offset":6005}}}],"position":{"start":{"line":89,"column":5,"offset":5895},"end":{"line":89,"column":115,"offset":6005}}},{"type":"text","value":"\n"}],"position":{"start":{"line":89,"column":1,"offset":5891},"end":{"line":90,"column":1,"offset":6006}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"On the other hand, one slight benefit was that altering JS on one page would only affect the functionality on that page. This form of sand-boxing helped to provide comfort that making changes to the page on the basis that it would not break another page. ","position":{"start":{"line":91,"column":5,"offset":6011},"end":{"line":91,"column":260,"offset":6266}}},{"type":"element","tagName":"a","properties":{"href":"#fnref2"},"children":[{"type":"text","value":"↩","position":{"start":{"line":91,"column":261,"offset":6267},"end":{"line":91,"column":262,"offset":6268}}}],"position":{"start":{"line":91,"column":260,"offset":6266},"end":{"line":91,"column":272,"offset":6278}}}],"position":{"start":{"line":91,"column":5,"offset":6011},"end":{"line":91,"column":272,"offset":6278}}},{"type":"text","value":"\n"}],"position":{"start":{"line":91,"column":1,"offset":6007},"end":{"line":92,"column":1,"offset":6279}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One point that does need addressing is that usually you would define static methods on the prototype of the Constructor rather than directly using 'this'. This is because by using prototype methods are automatically shared on all instances of the constructor, whereas with 'this' each method is defined afresh when a new instance is created with 'new'. I'll be updating this in the future (although in fairness multiple instances are not created on the site (for example only one 'Map' instance is created per page)). ","position":{"start":{"line":93,"column":5,"offset":6284},"end":{"line":93,"column":523,"offset":6802}}},{"type":"element","tagName":"a","properties":{"href":"#fnref3"},"children":[{"type":"text","value":"↩","position":{"start":{"line":93,"column":524,"offset":6803},"end":{"line":93,"column":525,"offset":6804}}}],"position":{"start":{"line":93,"column":523,"offset":6802},"end":{"line":93,"column":535,"offset":6814}}}],"position":{"start":{"line":93,"column":5,"offset":6284},"end":{"line":93,"column":535,"offset":6814}}},{"type":"text","value":"\n"}],"position":{"start":{"line":93,"column":1,"offset":6280},"end":{"line":93,"column":535,"offset":6814}}},{"type":"text","value":"\n"}],"position":{"start":{"line":89,"column":1,"offset":5891},"end":{"line":93,"column":535,"offset":6814}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":95,"column":1,"offset":6816}}}},{"id":"transformer-remark-markdown-html-ast-f18cee0d8ae4ae81f69aa50c42e8efff--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I recently started investigating the murky (at least for me) world of VPSs. I was previously hosting a few pet projects on Nodejitsu but although their service is excellent, the nature of my projects didn't really warrant using the platform.","position":{"start":{"line":6,"column":1,"offset":106},"end":{"line":6,"column":242,"offset":347}}}],"position":{"start":{"line":6,"column":1,"offset":106},"end":{"line":6,"column":242,"offset":347}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At the same time, I was interested in learning more about using linux commands and investigating how straightforward it was for a beginner to get Express apps running on a VPS and accessible via a specified subdomain.","position":{"start":{"line":8,"column":1,"offset":349},"end":{"line":8,"column":218,"offset":566}}}],"position":{"start":{"line":8,"column":1,"offset":349},"end":{"line":8,"column":218,"offset":566}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"http://digitalocean.com"},"children":[{"type":"text","value":"Digital Ocean","position":{"start":{"line":10,"column":2,"offset":569},"end":{"line":10,"column":15,"offset":582}}}],"position":{"start":{"line":10,"column":1,"offset":568},"end":{"line":10,"column":41,"offset":608}}},{"type":"text","value":" provides a basic option at $5 per month and I spun up an instance running Ubuntu 12.04 based in Amsterdam no less.","position":{"start":{"line":10,"column":41,"offset":608},"end":{"line":10,"column":156,"offset":723}}}],"position":{"start":{"line":10,"column":1,"offset":568},"end":{"line":10,"column":156,"offset":723}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You'll access your VPS by using a SSH client. As I'm on Windows I use ","position":{"start":{"line":12,"column":1,"offset":725},"end":{"line":12,"column":71,"offset":795}}},{"type":"element","tagName":"a","properties":{"href":"http://www.chiark.greenend.org.uk/%7Esgtatham/putty/"},"children":[{"type":"text","value":"PuTTY","position":{"start":{"line":12,"column":72,"offset":796},"end":{"line":12,"column":77,"offset":801}}}],"position":{"start":{"line":12,"column":71,"offset":795},"end":{"line":12,"column":132,"offset":856}}},{"type":"text","value":". Through this you'll input your login details for the VPS and you should be able to start on the road to getting your Express app running.","position":{"start":{"line":12,"column":132,"offset":856},"end":{"line":12,"column":271,"offset":995}}}],"position":{"start":{"line":12,"column":1,"offset":725},"end":{"line":12,"column":271,"offset":995}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"http://wiki.nginx.org/Main"},"children":[{"type":"text","value":"Nginx","position":{"start":{"line":14,"column":2,"offset":998},"end":{"line":14,"column":7,"offset":1003}}}],"position":{"start":{"line":14,"column":1,"offset":997},"end":{"line":14,"column":36,"offset":1032}}},{"type":"text","value":" is an open source http/reverse proxy server software and is being increasingly used on the basis that it offers simplified but powerful functionality for running servers in comparison to Apache (as I understand it at least!).","position":{"start":{"line":14,"column":36,"offset":1032},"end":{"line":14,"column":262,"offset":1258}}}],"position":{"start":{"line":14,"column":1,"offset":997},"end":{"line":14,"column":262,"offset":1258}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first steps was to get Nginx running. This was fairly straightforward and I followed the steps in ","position":{"start":{"line":16,"column":1,"offset":1260},"end":{"line":16,"column":103,"offset":1362}}},{"type":"element","tagName":"a","properties":{"href":"http://www.packtpub.com/nginx-http-server/book"},"children":[{"type":"text","value":"Nginx HTTP Server","position":{"start":{"line":16,"column":104,"offset":1363},"end":{"line":16,"column":121,"offset":1380}}}],"position":{"start":{"line":16,"column":103,"offset":1362},"end":{"line":16,"column":170,"offset":1429}}},{"type":"text","value":" by Clement Nedelcu. Nginx runs by using a central configuration file, but you can incorporate other conf files with the simple use of 'include'. On my installation the conf files were located in the following folder /usr/local/nginx/conf/ on the VPS.","position":{"start":{"line":16,"column":170,"offset":1429},"end":{"line":16,"column":421,"offset":1680}}}],"position":{"start":{"line":16,"column":1,"offset":1260},"end":{"line":16,"column":421,"offset":1680}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So following installation I had a basic http server up and running serving a index.html file at grabeh.net (adding a domain through Digital Ocean and updating the nameservers to point at the VPS was simple enough).","position":{"start":{"line":18,"column":1,"offset":1682},"end":{"line":18,"column":215,"offset":1896}}}],"position":{"start":{"line":18,"column":1,"offset":1682},"end":{"line":18,"column":215,"offset":1896}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Installing node.js and your Express app","position":{"start":{"line":20,"column":4,"offset":1901},"end":{"line":20,"column":43,"offset":1940}}}],"position":{"start":{"line":20,"column":3,"offset":1900},"end":{"line":20,"column":44,"offset":1941}}}],"position":{"start":{"line":20,"column":1,"offset":1898},"end":{"line":20,"column":46,"offset":1943}}}],"position":{"start":{"line":20,"column":1,"offset":1898},"end":{"line":20,"column":46,"offset":1943}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The next step was to identify how to get Express apps running on the VPS. Installing node.js itself was obviously key!","position":{"start":{"line":22,"column":1,"offset":1945},"end":{"line":22,"column":119,"offset":2063}}}],"position":{"start":{"line":22,"column":1,"offset":1945},"end":{"line":22,"column":119,"offset":2063}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The most straightforward way I identified was the following:","position":{"start":{"line":24,"column":1,"offset":2065},"end":{"line":24,"column":61,"offset":2125}}}],"position":{"start":{"line":24,"column":1,"offset":2065},"end":{"line":24,"column":61,"offset":2125}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"apt-get install python-software-properties","position":{"start":{"line":26,"column":5,"offset":2131},"end":{"line":26,"column":47,"offset":2173}}}],"position":{"start":{"line":26,"column":1,"offset":2127},"end":{"line":26,"column":47,"offset":2173}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"apt-add-repository ppa:chris-lea/node.js","position":{"start":{"line":27,"column":5,"offset":2178},"end":{"line":27,"column":45,"offset":2218}}}],"position":{"start":{"line":27,"column":1,"offset":2174},"end":{"line":27,"column":45,"offset":2218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"apt-get update","position":{"start":{"line":28,"column":5,"offset":2223},"end":{"line":28,"column":19,"offset":2237}}}],"position":{"start":{"line":28,"column":1,"offset":2219},"end":{"line":28,"column":19,"offset":2237}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"apt-get install nodejs","position":{"start":{"line":29,"column":5,"offset":2242},"end":{"line":29,"column":27,"offset":2264}}}],"position":{"start":{"line":29,"column":1,"offset":2238},"end":{"line":29,"column":27,"offset":2264}}},{"type":"text","value":"\n"}],"position":{"start":{"line":26,"column":1,"offset":2127},"end":{"line":29,"column":27,"offset":2264}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After this point I was able to type in 'node' and get access to the REPL. Typing in 2 + 2 did indeed give me 4 which was a pleasure to see (particularly owing to my deficient maths skills). As a bonus, you'll also get npm for package control.","position":{"start":{"line":31,"column":1,"offset":2266},"end":{"line":31,"column":243,"offset":2508}}}],"position":{"start":{"line":31,"column":1,"offset":2266},"end":{"line":31,"column":243,"offset":2508}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The next step was to get a small Express app running on the VPS. The easiest way I found was to git clone a basic app into the VPS. You can use the one ","position":{"start":{"line":33,"column":1,"offset":2510},"end":{"line":33,"column":153,"offset":2662}}},{"type":"element","tagName":"a","properties":{"href":"http://github.com/Grabbeh/express-hello-world"},"children":[{"type":"text","value":"here","position":{"start":{"line":33,"column":154,"offset":2663},"end":{"line":33,"column":158,"offset":2667}}}],"position":{"start":{"line":33,"column":153,"offset":2662},"end":{"line":33,"column":206,"offset":2715}}},{"type":"text","value":" on Github if you want. (Using apt-get install git-core will give you access to git commands).","position":{"start":{"line":33,"column":206,"offset":2715},"end":{"line":33,"column":300,"offset":2809}}}],"position":{"start":{"line":33,"column":1,"offset":2510},"end":{"line":33,"column":300,"offset":2809}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Then simply 'npm install' to install the Express dependency. After that 'node app' should have the app running on port 3000.","position":{"start":{"line":35,"column":1,"offset":2811},"end":{"line":35,"column":125,"offset":2935}}}],"position":{"start":{"line":35,"column":1,"offset":2811},"end":{"line":35,"column":125,"offset":2935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you will see using node app means the app is running in the foreground which means we cannot do anything else on the command line whilst the app is running. This simply will not do!","position":{"start":{"line":37,"column":1,"offset":2937},"end":{"line":37,"column":185,"offset":3121}}}],"position":{"start":{"line":37,"column":1,"offset":2937},"end":{"line":37,"column":185,"offset":3121}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I recalled a while ago reading about Nodejitsu's Forever tool which allows you to set a node app running in the background. This ","position":{"start":{"line":39,"column":1,"offset":3123},"end":{"line":39,"column":130,"offset":3252}}},{"type":"element","tagName":"a","properties":{"href":"http://blog.nodejitsu.com/keep-a-nodejs-server-up-with-forever"},"children":[{"type":"text","value":"link","position":{"start":{"line":39,"column":131,"offset":3253},"end":{"line":39,"column":135,"offset":3257}}}],"position":{"start":{"line":39,"column":130,"offset":3252},"end":{"line":39,"column":200,"offset":3322}}},{"type":"text","value":" on Nodejitsu's site provides step-by-step instructions, however basically just use 'npm install forever -g' and then in your app's directory you can use 'forever start app.js' and your app will be running in the background. If you're planning on running multiple apps you may want to remain the app.js file to be more descriptive.","position":{"start":{"line":39,"column":200,"offset":3322},"end":{"line":39,"column":531,"offset":3653}}}],"position":{"start":{"line":39,"column":1,"offset":3123},"end":{"line":39,"column":531,"offset":3653}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is because 'forever list' will specify the apps running and for me things got confusing when I was using app.js for all apps.","position":{"start":{"line":41,"column":1,"offset":3655},"end":{"line":41,"column":131,"offset":3785}}}],"position":{"start":{"line":41,"column":1,"offset":3655},"end":{"line":41,"column":131,"offset":3785}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Getting your Express app displaying on a subdomain","position":{"start":{"line":43,"column":4,"offset":3790},"end":{"line":43,"column":54,"offset":3840}}}],"position":{"start":{"line":43,"column":3,"offset":3789},"end":{"line":43,"column":55,"offset":3841}}}],"position":{"start":{"line":43,"column":1,"offset":3787},"end":{"line":43,"column":57,"offset":3843}}}],"position":{"start":{"line":43,"column":1,"offset":3787},"end":{"line":43,"column":57,"offset":3843}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The next step was to determine how to get the app to display via a subdomain on grabeh.net.","position":{"start":{"line":45,"column":1,"offset":3845},"end":{"line":45,"column":92,"offset":3936}}}],"position":{"start":{"line":45,"column":1,"offset":3845},"end":{"line":45,"column":92,"offset":3936}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A brief visit to Stackoverflow showed the way, and it wasn't long before the Nginx 'proxy_pass' and 'upstream' directives were identified as being necessary via this ","position":{"start":{"line":47,"column":1,"offset":3938},"end":{"line":47,"column":167,"offset":4104}}},{"type":"element","tagName":"a","properties":{"href":"http://stackoverflow.com/questions/5009324/node-js-nginx-and-now"},"children":[{"type":"text","value":"Stackoverflow question","position":{"start":{"line":47,"column":168,"offset":4105},"end":{"line":47,"column":190,"offset":4127}}}],"position":{"start":{"line":47,"column":167,"offset":4104},"end":{"line":47,"column":257,"offset":4194}}},{"type":"text","value":".","position":{"start":{"line":47,"column":257,"offset":4194},"end":{"line":47,"column":258,"offset":4195}}}],"position":{"start":{"line":47,"column":1,"offset":3938},"end":{"line":47,"column":258,"offset":4195}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After some tinkering I used the following configuration file to specify port 3000 as the upstream location for the Express app, and then using proxy","position":{"start":{"line":49,"column":1,"offset":4197},"end":{"line":49,"column":149,"offset":4345}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"pass and proxy","position":{"start":{"line":49,"column":150,"offset":4346},"end":{"line":49,"column":164,"offset":4360}}}],"position":{"start":{"line":49,"column":149,"offset":4345},"end":{"line":49,"column":165,"offset":4361}}},{"type":"text","value":"set_... to specify what should happen with requests to, in this case, helloworld.grabeh.net.","position":{"start":{"line":49,"column":165,"offset":4361},"end":{"line":49,"column":257,"offset":4453}}}],"position":{"start":{"line":49,"column":1,"offset":4197},"end":{"line":49,"column":257,"offset":4453}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"      worker_processes 1;\n\n      events {\n        worker_connections 1024;\n      }\n      http {\n\n          include       mime.types;\n          default_type  application/octet-stream;\n          sendfile      on;\n          tcp_nopush    on;\n\n      # specify the location of the Express app you want to serve up\n\n      upstream helloworld {\n        server localhost:3000;\n      }\n\n      # calls to www.grabeh.net will be rewritten to grabeh.net\n\n      server {\n        listen 80;\n          server_name www.grabeh.net *.grabeh.net;\n          rewrite ^(.*) http://grabeh.net$1 permanent;\n      } \n\n      # specify what will happen when a request to helloworld.[your domain] is made. \n      # Here we are proxying the Express app through.\n\n      server {\n        listen 80;\n        server_name helloworld.grabeh.net;\n\n        location / {\n          try_files $uri @helloworld;\n      }\n\n        location @helloworld {\n          proxy_set_header X-Real-IP $remote_addr;\n          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n          proxy_set_header Host $proxy_host;\n          proxy_set_header X-NginX-Proxy true;\n          proxy_pass http://helloworld;\n          }\n      }\n\n      # basic element where we're sending index.html for requests to grabeh.net/\n      server {\n        listen 80; \n        server_name grabeh.net;\n\n        location / {\n          root html/home;\n          index index.html index.htm;\n          }  \n          }\n      }\n"}],"position":{"start":{"line":50,"column":1,"offset":4454},"end":{"line":108,"column":4,"offset":5915}}}],"position":{"start":{"line":50,"column":1,"offset":4454},"end":{"line":108,"column":4,"offset":5915}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you use this you'll obviously have to update the domain name 'grabeh.net' to your own domain.","position":{"start":{"line":109,"column":1,"offset":5916},"end":{"line":109,"column":97,"offset":6012}}}],"position":{"start":{"line":109,"column":1,"offset":5916},"end":{"line":109,"column":97,"offset":6012}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Testing your .conf before sending it live is important. If I'm making any changes to nginx.conf I first use 'cp nginx.conf test.conf' and make changes to test.conf rather than the live file. Testing the file is done by ./nginx -t -c ","position":{"start":{"line":111,"column":1,"offset":6014},"end":{"line":111,"column":234,"offset":6247}}},{"type":"text","value":"["},{"type":"text","value":"location of test.conf","position":{"start":{"line":111,"column":235,"offset":6248},"end":{"line":111,"column":256,"offset":6269}}},{"type":"text","value":"]"},{"type":"text","value":". If tests pass, then using 'mv test.conf nginx.conf' will switch in the new conf for the existing one.","position":{"start":{"line":111,"column":257,"offset":6270},"end":{"line":111,"column":360,"offset":6373}}}],"position":{"start":{"line":111,"column":1,"offset":6014},"end":{"line":111,"column":360,"offset":6373}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After switching in the modified .conf file using './nginx -s reload' should result in 'Hello World' showing when you navigate to 'helloworld.","position":{"start":{"line":113,"column":1,"offset":6375},"end":{"line":113,"column":142,"offset":6516}}},{"type":"text","value":"["},{"type":"text","value":"yourdomain","position":{"start":{"line":113,"column":143,"offset":6517},"end":{"line":113,"column":153,"offset":6527}}},{"type":"text","value":"]"},{"type":"text","value":".","position":{"start":{"line":113,"column":154,"offset":6528},"end":{"line":113,"column":155,"offset":6529}}},{"type":"text","value":"["},{"type":"text","value":"tld","position":{"start":{"line":113,"column":156,"offset":6530},"end":{"line":113,"column":159,"offset":6533}}},{"type":"text","value":"]"},{"type":"text","value":".","position":{"start":{"line":113,"column":160,"offset":6534},"end":{"line":113,"column":161,"offset":6535}}}],"position":{"start":{"line":113,"column":1,"offset":6375},"end":{"line":113,"column":161,"offset":6535}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hopefully the above or at least parts of it are useful. It's always good for me to get thoughts down to help cement my understanding. I'm still getting to grips with Nginx and whilst there was lots of good information on Digital Ocean's site and Stackoverflow of course, there didn't seem to be a full step-by-step guide to the entire process.","position":{"start":{"line":115,"column":1,"offset":6537},"end":{"line":115,"column":344,"offset":6880}}}],"position":{"start":{"line":115,"column":1,"offset":6537},"end":{"line":115,"column":344,"offset":6880}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":117,"column":1,"offset":6882}}}},{"id":"transformer-remark-markdown-html-ast-01f04681e5fedffaf3eb7568ff13d0d1--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Having done a lot of legal drafting in my time and a little ","position":{"start":{"line":6,"column":1,"offset":129},"end":{"line":6,"column":61,"offset":189}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/grabbeh"},"children":[{"type":"text","value":"coding","position":{"start":{"line":6,"column":62,"offset":190},"end":{"line":6,"column":68,"offset":196}}}],"position":{"start":{"line":6,"column":61,"offset":189},"end":{"line":6,"column":97,"offset":225}}},{"type":"text","value":" also, I started to notice a few similarities between the two processes which I thought I'd write about. I also talk about one way in which the two processes diverge.","position":{"start":{"line":6,"column":97,"offset":225},"end":{"line":6,"column":263,"offset":391}}}],"position":{"start":{"line":6,"column":1,"offset":129},"end":{"line":6,"column":263,"offset":391}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Avoiding repetition and keeping things DRY","position":{"start":{"line":8,"column":3,"offset":395},"end":{"line":8,"column":45,"offset":437}}}],"position":{"start":{"line":8,"column":1,"offset":393},"end":{"line":8,"column":47,"offset":439}}}],"position":{"start":{"line":8,"column":1,"offset":393},"end":{"line":8,"column":47,"offset":439}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When drafting legal documents, I'll sometimes find myself repeating a specific phrase or collection of words. To remove this repetition, you can create a defined term and then use the same defined term throughout the agreement.","position":{"start":{"line":10,"column":1,"offset":441},"end":{"line":10,"column":228,"offset":668}}}],"position":{"start":{"line":10,"column":1,"offset":441},"end":{"line":10,"column":228,"offset":668}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example \"Confidential Information\" can be defined and then re-used throughout the agreement (making it as broad or as narrow as you might like, subject to enforceability).","position":{"start":{"line":12,"column":1,"offset":670},"end":{"line":12,"column":176,"offset":845}}}],"position":{"start":{"line":12,"column":1,"offset":670},"end":{"line":12,"column":176,"offset":845}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This could be broadly analogous to using functions to collect together a specific area of functionality which can then be re-used without repeating the original code.","position":{"start":{"line":14,"column":1,"offset":847},"end":{"line":14,"column":167,"offset":1013}}}],"position":{"start":{"line":14,"column":1,"offset":847},"end":{"line":14,"column":167,"offset":1013}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Separation of concerns","position":{"start":{"line":16,"column":3,"offset":1017},"end":{"line":16,"column":25,"offset":1039}}}],"position":{"start":{"line":16,"column":1,"offset":1015},"end":{"line":16,"column":27,"offset":1041}}}],"position":{"start":{"line":16,"column":1,"offset":1015},"end":{"line":16,"column":27,"offset":1041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When you're working in an organisation with agreements that will be re-used frequently and by non-lawyers, it's good to separate out firstly as much as possible content that will need to change each time the document is used, and secondly content that is standard and is therefore unlikely in the first instance to change. Although sending it over to the other side's lawyers is a different matter.","position":{"start":{"line":18,"column":1,"offset":1043},"end":{"line":18,"column":399,"offset":1441}}}],"position":{"start":{"line":18,"column":1,"offset":1043},"end":{"line":18,"column":399,"offset":1441}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This can be done by moving changeable terms (price, delivery schedule, licence period etc) from the main body of the agreement into a schedule. This way when it comes to be re-used the user will only need to update the schedule and will not have to get involved with the main body of the agreement. Overall this hopefully means that the time to get a contract out to the other side is greatly reduced, or at least that's the plan.","position":{"start":{"line":20,"column":1,"offset":1443},"end":{"line":20,"column":431,"offset":1873}}}],"position":{"start":{"line":20,"column":1,"offset":1443},"end":{"line":20,"column":431,"offset":1873}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This has parallels with avoiding the use of CSS and Javascript inline in HTML. If for example you're allowing a user to customise a simple layout, then there isn't necessarily a need to have the user interact with the HTML itself as, depending on the circumstances of course.","position":{"start":{"line":22,"column":1,"offset":1875},"end":{"line":22,"column":276,"offset":2150}}}],"position":{"start":{"line":22,"column":1,"offset":1875},"end":{"line":22,"column":276,"offset":2150}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If everything is inline and a jumble of CSS, JS and HTML I would argue this increases the chances of a particular style update being missed (as is the case with an agreement, where the risk of missing an update to a changeable term is increased if everything is within the body of the agreement).","position":{"start":{"line":24,"column":1,"offset":2152},"end":{"line":24,"column":297,"offset":2448}}}],"position":{"start":{"line":24,"column":1,"offset":2152},"end":{"line":24,"column":297,"offset":2448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Straining the analogy","position":{"start":{"line":26,"column":3,"offset":2452},"end":{"line":26,"column":24,"offset":2473}}}],"position":{"start":{"line":26,"column":1,"offset":2450},"end":{"line":26,"column":26,"offset":2475}}}],"position":{"start":{"line":26,"column":1,"offset":2450},"end":{"line":26,"column":26,"offset":2475}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You could go as far as to say that the main body of an agreement is the view, the schedule with variables is the model, and the definitions section is the controller/router, providing the glue between the model and the view, defining how the terms in the schedule (price, payment terms, work period) are used in the view.","position":{"start":{"line":28,"column":1,"offset":2477},"end":{"line":28,"column":322,"offset":2798}}}],"position":{"start":{"line":28,"column":1,"offset":2477},"end":{"line":28,"column":322,"offset":2798}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/legalmvc.png","alt":null,"title":"It's MVC, but not as we know it, Jim"},"children":[],"position":{"start":{"line":30,"column":1,"offset":2800},"end":{"line":30,"column":58,"offset":2857}}}],"position":{"start":{"line":30,"column":1,"offset":2800},"end":{"line":30,"column":58,"offset":2857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"User feedback","position":{"start":{"line":32,"column":3,"offset":2861},"end":{"line":32,"column":16,"offset":2874}}}],"position":{"start":{"line":32,"column":1,"offset":2859},"end":{"line":32,"column":18,"offset":2876}}}],"position":{"start":{"line":32,"column":1,"offset":2859},"end":{"line":32,"column":18,"offset":2876}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A little trite, but both from a legal and a coding perspective, it's really important to have the results of your efforts reviewed by those who will be actually using the end result. Within my organisation, after I've drafted the document it will go out to the people who asked me to draft it in the first place for comments.","position":{"start":{"line":34,"column":1,"offset":2878},"end":{"line":34,"column":326,"offset":3203}}}],"position":{"start":{"line":34,"column":1,"offset":2878},"end":{"line":34,"column":326,"offset":3203}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As a side-note, whether or not they'll give it a thorough read-through depends a) on the person's dedication to ensuring the terms of the proposed work are accurately reflected in the agreement and b) their trust in the abilities of the legal department!","position":{"start":{"line":36,"column":1,"offset":3205},"end":{"line":36,"column":255,"offset":3459}}}],"position":{"start":{"line":36,"column":1,"offset":3205},"end":{"line":36,"column":255,"offset":3459}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In both cases you'll quickly find out what the important parts are and where improvements are desired, even if perhaps the full extent of the work isn't thoroughly assessed. If you're working for a services-based organisation, the expenses clause is generally the most important aspect of the agreement.","position":{"start":{"line":38,"column":1,"offset":3461},"end":{"line":38,"column":304,"offset":3764}}}],"position":{"start":{"line":38,"column":1,"offset":3461},"end":{"line":38,"column":304,"offset":3764}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Modularity","position":{"start":{"line":40,"column":3,"offset":3768},"end":{"line":40,"column":13,"offset":3778}}}],"position":{"start":{"line":40,"column":1,"offset":3766},"end":{"line":40,"column":15,"offset":3780}}}],"position":{"start":{"line":40,"column":1,"offset":3766},"end":{"line":40,"column":15,"offset":3780}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Most agreements will have a set of standard clauses which you will find in most agreements, like choice of law, limitation of liability, assignment, waiver, and variation. Being able to slot these in and not have to worry about drafting new clauses each time takes time out the drafting process. This leaves time to focus on the elements unique to the agreement.","position":{"start":{"line":42,"column":1,"offset":3782},"end":{"line":42,"column":363,"offset":4144}}}],"position":{"start":{"line":42,"column":1,"offset":3782},"end":{"line":42,"column":363,"offset":4144}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the same way, when coding web applications, you will most likely have standard pieces of functionality like user authentication and file uploads, or frameworks like ","position":{"start":{"line":44,"column":1,"offset":4146},"end":{"line":44,"column":169,"offset":4314}}},{"type":"element","tagName":"a","properties":{"href":"http://foundation.zurb.com/"},"children":[{"type":"text","value":"Foundation","position":{"start":{"line":44,"column":170,"offset":4315},"end":{"line":44,"column":180,"offset":4325}}}],"position":{"start":{"line":44,"column":169,"offset":4314},"end":{"line":44,"column":210,"offset":4355}}},{"type":"text","value":", ","position":{"start":{"line":44,"column":210,"offset":4355},"end":{"line":44,"column":212,"offset":4357}}},{"type":"element","tagName":"a","properties":{"href":"http://getbootstrap.com/"},"children":[{"type":"text","value":"Bootstrap","position":{"start":{"line":44,"column":213,"offset":4358},"end":{"line":44,"column":222,"offset":4367}}}],"position":{"start":{"line":44,"column":212,"offset":4357},"end":{"line":44,"column":249,"offset":4394}}},{"type":"text","value":"and ","position":{"start":{"line":44,"column":249,"offset":4394},"end":{"line":44,"column":253,"offset":4398}}},{"type":"element","tagName":"a","properties":{"href":"http://purecss.io/"},"children":[{"type":"text","value":"Pure.CSS","position":{"start":{"line":44,"column":254,"offset":4399},"end":{"line":44,"column":262,"offset":4407}}}],"position":{"start":{"line":44,"column":253,"offset":4398},"end":{"line":44,"column":283,"offset":4428}}},{"type":"text","value":" for the appearance of an app. Mozilla's Brick and Google's Polymer also open up the possibility of packaging up discrete elements of functionality.","position":{"start":{"line":44,"column":283,"offset":4428},"end":{"line":44,"column":431,"offset":4576}}}],"position":{"start":{"line":44,"column":1,"offset":4146},"end":{"line":44,"column":431,"offset":4576}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"But where do they differ?","position":{"start":{"line":46,"column":3,"offset":4580},"end":{"line":46,"column":28,"offset":4605}}}],"position":{"start":{"line":46,"column":1,"offset":4578},"end":{"line":46,"column":30,"offset":4607}}}],"position":{"start":{"line":46,"column":1,"offset":4578},"end":{"line":46,"column":30,"offset":4607}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It's fair to say there's one pretty glaring way in which the two processes differ. If I want to draft a document I'm much more restricted in the way I can go out and grab existing examples that are free to use.","position":{"start":{"line":48,"column":1,"offset":4609},"end":{"line":48,"column":211,"offset":4819}}}],"position":{"start":{"line":48,"column":1,"offset":4609},"end":{"line":48,"column":211,"offset":4819}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is in stark contract to the many open source options that are available to help a person to quickly incorporate functionality into an app (at least in my experience in using ","position":{"start":{"line":50,"column":1,"offset":4821},"end":{"line":50,"column":180,"offset":5000}}},{"type":"element","tagName":"a","properties":{"href":"http://nodejs.org"},"children":[{"type":"text","value":"Node.js","position":{"start":{"line":50,"column":181,"offset":5001},"end":{"line":50,"column":188,"offset":5008}}}],"position":{"start":{"line":50,"column":180,"offset":5000},"end":{"line":50,"column":208,"offset":5028}}},{"type":"text","value":" and ","position":{"start":{"line":50,"column":208,"offset":5028},"end":{"line":50,"column":213,"offset":5033}}},{"type":"element","tagName":"a","properties":{"href":"http://expressjs.com"},"children":[{"type":"text","value":"Express","position":{"start":{"line":50,"column":214,"offset":5034},"end":{"line":50,"column":221,"offset":5041}}}],"position":{"start":{"line":50,"column":213,"offset":5033},"end":{"line":50,"column":244,"offset":5064}}},{"type":"text","value":").","position":{"start":{"line":50,"column":244,"offset":5064},"end":{"line":50,"column":246,"offset":5066}}}],"position":{"start":{"line":50,"column":1,"offset":4821},"end":{"line":50,"column":246,"offset":5066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Some folks including ","position":{"start":{"line":52,"column":1,"offset":5068},"end":{"line":52,"column":22,"offset":5089}}},{"type":"element","tagName":"a","properties":{"href":"http://www.legalzoom.com"},"children":[{"type":"text","value":"Legal Zoom","position":{"start":{"line":52,"column":23,"offset":5090},"end":{"line":52,"column":33,"offset":5100}}}],"position":{"start":{"line":52,"column":22,"offset":5089},"end":{"line":52,"column":60,"offset":5127}}},{"type":"text","value":" and ","position":{"start":{"line":52,"column":60,"offset":5127},"end":{"line":52,"column":65,"offset":5132}}},{"type":"element","tagName":"a","properties":{"href":"http://www.docracy.com"},"children":[{"type":"text","value":"Docracy","position":{"start":{"line":52,"column":66,"offset":5133},"end":{"line":52,"column":73,"offset":5140}}}],"position":{"start":{"line":52,"column":65,"offset":5132},"end":{"line":52,"column":98,"offset":5165}}},{"type":"text","value":" are taking steps to simplify the process for many users of legal services (in the case of the former and the latter) and to allow lawyers to provide and comment on agreements (in the case of the latter).","position":{"start":{"line":52,"column":98,"offset":5165},"end":{"line":52,"column":302,"offset":5369}}}],"position":{"start":{"line":52,"column":1,"offset":5068},"end":{"line":52,"column":302,"offset":5369}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However at present there isn't a widely-used service like Github where to extend the analogy and in the context of open source code, lawyers from different firms collaborate on improving documents used by all or used by many different people","position":{"start":{"line":54,"column":1,"offset":5371},"end":{"line":54,"column":242,"offset":5612}}},{"type":"raw","value":"<sup id=\"fnref1\">","position":{"start":{"line":54,"column":242,"offset":5612},"end":{"line":54,"column":259,"offset":5629}}},{"type":"element","tagName":"a","properties":{"href":"#fn1"},"children":[{"type":"text","value":"1","position":{"start":{"line":54,"column":260,"offset":5630},"end":{"line":54,"column":261,"offset":5631}}}],"position":{"start":{"line":54,"column":259,"offset":5629},"end":{"line":54,"column":268,"offset":5638}}},{"type":"raw","value":"</sup>","position":{"start":{"line":54,"column":268,"offset":5638},"end":{"line":54,"column":274,"offset":5644}}},{"type":"text","value":" (perhaps an overly broad definition) or lawyers might develop a set of wording internally and decide to release it for general consumption.","position":{"start":{"line":54,"column":274,"offset":5644},"end":{"line":54,"column":414,"offset":5784}}}],"position":{"start":{"line":54,"column":1,"offset":5371},"end":{"line":54,"column":414,"offset":5784}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Whether this will change in the future remains to be seen however, there are good reasons for this reduced participation:","position":{"start":{"line":56,"column":1,"offset":5786},"end":{"line":56,"column":122,"offset":5907}}}],"position":{"start":{"line":56,"column":1,"offset":5786},"end":{"line":56,"column":122,"offset":5907}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"unlike software companies, law firms are less likely to gain goodwill as a result of making available clauses","position":{"start":{"line":58,"column":5,"offset":5913},"end":{"line":58,"column":114,"offset":6022}}}],"position":{"start":{"line":58,"column":1,"offset":5909},"end":{"line":58,"column":114,"offset":6022}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"even standard clauses can need to be changed depending on the specific circumstances of a deal, reducing the benefit of open sourcing them in the first place","position":{"start":{"line":59,"column":5,"offset":6027},"end":{"line":59,"column":162,"offset":6184}}}],"position":{"start":{"line":59,"column":1,"offset":6023},"end":{"line":59,"column":162,"offset":6184}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"confidentiality issues are more likely to be an issue","position":{"start":{"line":60,"column":5,"offset":6189},"end":{"line":60,"column":58,"offset":6242}}}],"position":{"start":{"line":60,"column":1,"offset":6185},"end":{"line":60,"column":58,"offset":6242}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"perhaps most importantly, law firms act for clients who may take umbrage at releasing work (even if completely anonymised) as a third party could still benefit from the work, particularly bespoke drafting","position":{"start":{"line":61,"column":5,"offset":6247},"end":{"line":61,"column":209,"offset":6451}}}],"position":{"start":{"line":61,"column":1,"offset":6243},"end":{"line":61,"column":209,"offset":6451}}},{"type":"text","value":"\n"}],"position":{"start":{"line":58,"column":1,"offset":5909},"end":{"line":61,"column":209,"offset":6451}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I'm not saying that many of these reasons cannot be overcome but at present the above barriers are sufficient to prevent wider participation by lawyers in open sourcing of legal documentation","position":{"start":{"line":63,"column":1,"offset":6453},"end":{"line":63,"column":192,"offset":6644}}},{"type":"raw","value":"<sup id=\"fnref2\">","position":{"start":{"line":63,"column":192,"offset":6644},"end":{"line":63,"column":209,"offset":6661}}},{"type":"element","tagName":"a","properties":{"href":"#fn2"},"children":[{"type":"text","value":"2","position":{"start":{"line":63,"column":210,"offset":6662},"end":{"line":63,"column":211,"offset":6663}}}],"position":{"start":{"line":63,"column":209,"offset":6661},"end":{"line":63,"column":218,"offset":6670}}},{"type":"raw","value":"</sup>","position":{"start":{"line":63,"column":218,"offset":6670},"end":{"line":63,"column":224,"offset":6676}}},{"type":"text","value":".","position":{"start":{"line":63,"column":224,"offset":6676},"end":{"line":63,"column":225,"offset":6677}}}],"position":{"start":{"line":63,"column":1,"offset":6453},"end":{"line":63,"column":225,"offset":6677}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As for the future, it will be interesting to see whether start-ups operating in the legal sector will be able to exert sufficient influence or make it attractive enough for large volumes of lawyers to start doing this.","position":{"start":{"line":65,"column":1,"offset":6679},"end":{"line":65,"column":219,"offset":6897}}}],"position":{"start":{"line":65,"column":1,"offset":6679},"end":{"line":65,"column":219,"offset":6897}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":68,"column":1,"offset":6900},"end":{"line":68,"column":6,"offset":6905}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are movements in certain niche areas where lawyers do collaborate to improve documents to a standard like ","position":{"start":{"line":70,"column":5,"offset":6911},"end":{"line":70,"column":117,"offset":7023}}},{"type":"element","tagName":"a","properties":{"href":"http://www2.isda.org/"},"children":[{"type":"text","value":"ISDA","position":{"start":{"line":70,"column":118,"offset":7024},"end":{"line":70,"column":122,"offset":7028}}}],"position":{"start":{"line":70,"column":117,"offset":7023},"end":{"line":70,"column":146,"offset":7052}}},{"type":"text","value":" (for financial swaps and derivatives) and the ","position":{"start":{"line":70,"column":146,"offset":7052},"end":{"line":70,"column":193,"offset":7099}}},{"type":"element","tagName":"a","properties":{"href":"http://www.jctltd.co.uk/"},"children":[{"type":"text","value":"JCT","position":{"start":{"line":70,"column":194,"offset":7100},"end":{"line":70,"column":197,"offset":7103}}}],"position":{"start":{"line":70,"column":193,"offset":7099},"end":{"line":70,"column":224,"offset":7130}}},{"type":"text","value":" for construction contracts but this is still a relatively closed system and is the exception rather than the rule. ","position":{"start":{"line":70,"column":224,"offset":7130},"end":{"line":70,"column":340,"offset":7246}}},{"type":"element","tagName":"a","properties":{"href":"#fnref1"},"children":[{"type":"text","value":"↩","position":{"start":{"line":70,"column":341,"offset":7247},"end":{"line":70,"column":342,"offset":7248}}}],"position":{"start":{"line":70,"column":340,"offset":7246},"end":{"line":70,"column":352,"offset":7258}}}],"position":{"start":{"line":70,"column":5,"offset":6911},"end":{"line":70,"column":352,"offset":7258}}},{"type":"text","value":"\n"}],"position":{"start":{"line":70,"column":1,"offset":6907},"end":{"line":71,"column":1,"offset":7259}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One counter-example is the ","position":{"start":{"line":72,"column":5,"offset":7264},"end":{"line":72,"column":32,"offset":7291}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/twitter/innovators-patent-agreement/blob/master/innovators-patent-agreement.md"},"children":[{"type":"text","value":"Innovators Patent Agreement","position":{"start":{"line":72,"column":33,"offset":7292},"end":{"line":72,"column":60,"offset":7319}}}],"position":{"start":{"line":72,"column":32,"offset":7291},"end":{"line":72,"column":160,"offset":7419}}},{"type":"text","value":".  ","position":{"start":{"line":72,"column":160,"offset":7419},"end":{"line":72,"column":163,"offset":7422}}},{"type":"element","tagName":"a","properties":{"href":"#fnref2"},"children":[{"type":"text","value":"↩","position":{"start":{"line":72,"column":164,"offset":7423},"end":{"line":72,"column":165,"offset":7424}}}],"position":{"start":{"line":72,"column":163,"offset":7422},"end":{"line":72,"column":175,"offset":7434}}}],"position":{"start":{"line":72,"column":5,"offset":7264},"end":{"line":72,"column":175,"offset":7434}}},{"type":"text","value":"\n"}],"position":{"start":{"line":72,"column":1,"offset":7260},"end":{"line":72,"column":175,"offset":7434}}},{"type":"text","value":"\n"}],"position":{"start":{"line":70,"column":1,"offset":6907},"end":{"line":72,"column":175,"offset":7434}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":74,"column":1,"offset":7436}}}},{"id":"transformer-remark-markdown-html-ast-027925bddd41afc8bc0842a9e5e4876e--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In some countries in the world, laws are in place to help protect the consumer against the imposition of unfair contract terms.","position":{"start":{"line":6,"column":1,"offset":93},"end":{"line":6,"column":128,"offset":220}}}],"position":{"start":{"line":6,"column":1,"offset":93},"end":{"line":6,"column":128,"offset":220}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The rationale behind such laws is ensure that a company cannot take advantage of the fact that a customer is not always in a position to understand standard terms placed in front of them, and is also in a relatively weak bargaining position to make any changes to terms.","position":{"start":{"line":8,"column":1,"offset":222},"end":{"line":8,"column":271,"offset":492}}}],"position":{"start":{"line":8,"column":1,"offset":222},"end":{"line":8,"column":271,"offset":492}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At the same time, especially in e-commerce terms, it's important to not present any major hurdles to a consumer's usage of e-commerce. For example, not providing protections would mean that consumers would be more likely (ok, only a little more likely) to wade through terms to make sure there wasn't anything unduly onerous.","position":{"start":{"line":10,"column":1,"offset":494},"end":{"line":10,"column":326,"offset":819}}}],"position":{"start":{"line":10,"column":1,"offset":494},"end":{"line":10,"column":326,"offset":819}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consumer protection regulations mean that a customer can be relatively assured that regardless of the terms they sign up to (which are generally unread) because of consumer protection regulations, the terms will either a) be reasonable in the first instance or b) if they do contain unreasonable terms, they will be struck out if a company ever sought to enforce them.","position":{"start":{"line":12,"column":1,"offset":821},"end":{"line":12,"column":369,"offset":1189}}}],"position":{"start":{"line":12,"column":1,"offset":821},"end":{"line":12,"column":369,"offset":1189}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Although the above protections are in most cases likely to mean that the vast blocks of text that often form online terms will not contain anything nasty, there are steps that a website provider can take to improve their chances of being able to rely on its terms.","position":{"start":{"line":14,"column":1,"offset":1191},"end":{"line":14,"column":265,"offset":1455}}}],"position":{"start":{"line":14,"column":1,"offset":1191},"end":{"line":14,"column":265,"offset":1455}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example it's important to use plain language in your terms and also to highlight any particularly onerous terms (even if their own right they may be entirely reasonable).","position":{"start":{"line":16,"column":1,"offset":1457},"end":{"line":16,"column":175,"offset":1631}}}],"position":{"start":{"line":16,"column":1,"offset":1457},"end":{"line":16,"column":175,"offset":1631}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One of the UK's most famous judges, Lord Denning in the case of ","position":{"start":{"line":18,"column":1,"offset":1633},"end":{"line":18,"column":65,"offset":1697}}},{"type":"element","tagName":"a","properties":{"href":"http://en.wikipedia.org/wiki/J_Spurling_Ltd_v_Bradshaw"},"children":[{"type":"text","value":"J Spurling Ltd v Bradshaw","position":{"start":{"line":18,"column":66,"offset":1698},"end":{"line":18,"column":91,"offset":1723}}}],"position":{"start":{"line":18,"column":65,"offset":1697},"end":{"line":18,"column":148,"offset":1780}}},{"type":"text","value":" ","position":{"start":{"line":18,"column":148,"offset":1780},"end":{"line":18,"column":149,"offset":1781}}},{"type":"text","value":"["},{"type":"text","value":"1956","position":{"start":{"line":18,"column":150,"offset":1782},"end":{"line":18,"column":154,"offset":1786}}},{"type":"text","value":"]"},{"type":"text","value":" EWCA Civ 3 offered a particularly pertinent quote back in 1956 commenting that:","position":{"start":{"line":18,"column":155,"offset":1787},"end":{"line":18,"column":235,"offset":1867}}}],"position":{"start":{"line":18,"column":1,"offset":1633},"end":{"line":18,"column":235,"offset":1867}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"quote\">\"I quite agree that the more unreasonable a clause is, the greater the notice which must be given of it. Some clauses which I have seen would need to be printed in red ink on the face of the document with a red hand pointing to it before the notice could be held to be sufficient.\"</div>","position":{"start":{"line":20,"column":1,"offset":1869},"end":{"line":20,"column":307,"offset":2175}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With online terms it could be a good idea to highlight to a customer where a particularly onerous term is proposed to be introduced.","position":{"start":{"line":22,"column":1,"offset":2177},"end":{"line":22,"column":133,"offset":2309}}}],"position":{"start":{"line":22,"column":1,"offset":2177},"end":{"line":22,"column":133,"offset":2309}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With this in mind, I thought it would be interesting to try to use some code to introduce this into some generic terms (Lorem Ipsum in this case). Using ","position":{"start":{"line":24,"column":1,"offset":2311},"end":{"line":24,"column":154,"offset":2464}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/Prinzhorn/skrollr"},"children":[{"type":"text","value":"Skrollr.js","position":{"start":{"line":24,"column":155,"offset":2465},"end":{"line":24,"column":165,"offset":2475}}}],"position":{"start":{"line":24,"column":154,"offset":2464},"end":{"line":24,"column":204,"offset":2514}}},{"type":"text","value":", I created some functionality so as a user scrolls down the page, highlighted blocks move into view alerting them to particularly onerous terms.","position":{"start":{"line":24,"column":204,"offset":2514},"end":{"line":24,"column":349,"offset":2659}}}],"position":{"start":{"line":24,"column":1,"offset":2311},"end":{"line":24,"column":349,"offset":2659}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The example can be found ","position":{"start":{"line":26,"column":1,"offset":2661},"end":{"line":26,"column":26,"offset":2686}}},{"type":"element","tagName":"a","properties":{"href":"http://legal-terms-example.grabeh.net"},"children":[{"type":"text","value":"here","position":{"start":{"line":26,"column":27,"offset":2687},"end":{"line":26,"column":31,"offset":2691}}}],"position":{"start":{"line":26,"column":26,"offset":2686},"end":{"line":26,"column":71,"offset":2731}}},{"type":"text","value":". Scrolling down should result in the warning notices appearing (although only on desktop at the moment).","position":{"start":{"line":26,"column":71,"offset":2731},"end":{"line":26,"column":176,"offset":2836}}}],"position":{"start":{"line":26,"column":1,"offset":2661},"end":{"line":26,"column":176,"offset":2836}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At the moment, a two column approach is taken and with Skrollr you can use relative positioning to adjust the styling of an element dependent on its position relative to the top and bottom of the viewport. Here's an example for one of the boxes.","position":{"start":{"line":28,"column":1,"offset":2838},"end":{"line":28,"column":246,"offset":3083}}}],"position":{"start":{"line":28,"column":1,"offset":2838},"end":{"line":28,"column":246,"offset":3083}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<div class=\"imp-text\" \ndata-25-top-top=\"opacity: 1; background: rgb(255,247,165); left: 0px;\" \ndata-25-top-bottom=\"opacity: 0; background: rgb(255,255,255); left: 200px;\" \ndata--25-bottom-top=\"opacity: 0; left: 200px; background: rgb(255,255,255);\" \ndata--25-bottom-bottom=\"opacity: 1; left: 0px; background: rgb(255,247,165);\">\nKidney due within 30 days of signature</div>\n"}],"position":{"start":{"line":30,"column":1,"offset":3085},"end":{"line":35,"column":49,"offset":3482}}}],"position":{"start":{"line":30,"column":1,"offset":3085},"end":{"line":35,"column":49,"offset":3482}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the example by using 'top-top' (top of viewport and top of element) and 'top-bottom' (still top of viewport and bottom of element) and introducing changes in style between the two, scrolling between will smoothly transition between the two styles.","position":{"start":{"line":37,"column":1,"offset":3484},"end":{"line":37,"column":251,"offset":3734}}}],"position":{"start":{"line":37,"column":1,"offset":3484},"end":{"line":37,"column":251,"offset":3734}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Whilst some of the term used on the page may not quite cut the mustard in terms of being reasonable, the important point to take away is that by highlighting the terms, you're more likely to have provided sufficient notice to the user.","position":{"start":{"line":39,"column":1,"offset":3736},"end":{"line":39,"column":236,"offset":3971}}}],"position":{"start":{"line":39,"column":1,"offset":3736},"end":{"line":39,"column":236,"offset":3971}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In part, consumer law assumes a user may not read the terms, but if a company takes appropriate steps to notify its users about onerous terms, it is more likely they'll be able to rely on them in future.","position":{"start":{"line":41,"column":1,"offset":3973},"end":{"line":41,"column":204,"offset":4176}}}],"position":{"start":{"line":41,"column":1,"offset":3973},"end":{"line":41,"column":204,"offset":4176}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":43,"column":1,"offset":4178}}}},{"id":"transformer-remark-markdown-html-4fadd4084a649312b442b977a4ddf3ff--","value":"<pre><code>    971 additions and 3,493 deletions\n</code></pre>\n<p>The above statistic from Github from the repository for one of my apps <a href=\"https://github.com/grabbeh/routebop\">Routebop</a> showing the changes to the repo following a few days of editing is gratifying to me<sup id=\"fnref1\"><a href=\"#fn1\">1</a></sup>.</p>\n<p>Whilst as a beginner you would normally code to improve or build a new feature, a user of the site would not notice any change to the functionality of the site following the above changes.</p>\n<p>So on the basis that you'd normally change code to alter functionality, what actually changed?</p>\n<p>When I initially built the site because I had a fear of cross-contamination of JS amongst different pages, and because I was (and still am in many ways) a beginner, I decided to place all the JavaScript necessary for each page in the page itself with no sharing of JS between pages at all. As functionality between pages is shared to an extent, this meant that there was a significant amount of duplication<sup id=\"fnref2\"><a href=\"#fn2\">2</a></sup>.</p>\n<p>However, the extent of duplication meant that there was always a nagging feeling that switching from the JS-per-page approach to one using separate JS files would lead to a much cleaner approach and allow for an easier time in updating functionality in the future.</p>\n<p>When I decided to refactor the code I first selected the page which I felt had the most functionality that I could potentially share across other pages. Following this, still within the same page I split up functions where I could. For example, one function collects and converts markers and waypoints into a more basic form, POSTs to the server, and then responds with a success message.</p>\n<p>On the basis that the POSTing to the server element would be repeated, I split out this functionality and put a small wrapper around it to pass through transaction specific arguments into the function as follows:</p>\n<pre><code>this.sendToServer = function(postdata, posturl, completefunction){\n$.ajax({\n    url: posturl,\n    type: \"POST\",\n    contentType: \"application/json\",\n    processData: false,\n    data: JSON.stringify(postdata),\n    success: completefunction\n    });\n};\nthis.sendToServer(postdata, \"/show\", function(data){\n    $('#result').html(data.message);\n    });\n};\n</code></pre>\n<p>This way, the function could be re-used passing in different arguments depending on what was necessary in the circumstances. In respect of the 'completefunction' and as per the above I use an anonymous function when the function is actually called to specify what will happen when the POST request is successful (displaying a success message, or processing the data onto a map for example).</p>\n<p>Following this point, I then started work on a separate JavaScript file switching across functions from the page itself into the JS file. I adopted a rather timid approach to this initially, switching over a function or two, then making reference to them in the HTML file to ensure things were still working.</p>\n<p><strong>Design patterns you say?</strong></p>\n<p>I do have a copy of <a href=\"http://addyosmani.com/resources/essentialjsdesignpatterns/book/\">Design Patterns</a> by Addy Osmani on my bookshelf at home, however, on flipping through the book, I suspect the pattern I've used is somewhere between Constructor and the module pattern.</p>\n<p>Essentially, this means that to use the JavaScript I create an instance of the Constructor by using the 'new' keyword and then attach that to a variable when opening a particular page. I think in part this is inspired by Google Maps which uses the new keyword when instantiating a new map or map-related item ilke a marker or infowindow.</p>\n<p>At the same time as creating a public interface using 'new', I also included local variables within the Constructor which are only able to be accessed by public methods on the instance. An example is as follows:</p>\n<pre><code>function Map(){\n    var mapmarkers = [];\n    this.returnMapMarkers = function(){\n        return mapmarkers;\n    }; \n    this.addMarkersToMap = function(array){\n    // function to place marker on map &#x26; push into mapmarkersarray\n    };\n};\n\n// Instantiation\n\nvar map = new Map;\n\nmap.mapmarkers;\n>> undefined\n\nmap.returnMapMarkers()\n>> [ array of markers ]\n</code></pre>\n<p>In this way, the mapmarkers private variable can only be accessed and updated using public methods (as I understand it).<sup id=\"fnref3\"><a href=\"#fn3\">3</a></sup>.</p>\n<p><strong>Limitations on code re-use</strong></p>\n<p>In the process of refactoring the code, there were times when in the current state, I couldn't re-use the code across pages. At this point, I had to create new functions which although very similar in nature to existing functions performed slightly differently.</p>\n<p>This was definitely a lazy way of doing things, and in future, I hope to do more work in stripping down functions into their component parts to ensure a greater ability to re-use functionality.</p>\n<p><strong>Separation of functionality</strong></p>\n<p>In addition to the main map.js file I also created separate files to cover distinct functionality on the site. This includes image upload handling and geocoding. I think this is a fairly common practice. As part of this, I created a init() function which is then the only function called to add the functionality to the page, as it incorporates calls to all the necessary functions.</p>\n<p>In summary, when it comes to code refactoring, I don't really know what I'm doing. However although the above may not be (i) the most efficient in terms of code re-use or (ii) implement a design pattern correctly, it is definitely a leap forward for me from the JS-per-page approach used previously.</p>\n<p>In future I hope to use the code I've written to help me improve my usage of design patterns and write better JavaScript generally.</p>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li>\n<p>Particularly on the basis that the total repo size was only 20k lines of code before the changes. <a href=\"#fnref1\">↩</a></p>\n</li>\n<li>\n<p>On the other hand, one slight benefit was that altering JS on one page would only affect the functionality on that page. This form of sand-boxing helped to provide comfort that making changes to the page on the basis that it would not break another page. <a href=\"#fnref2\">↩</a></p>\n</li>\n<li>\n<p>One point that does need addressing is that usually you would define static methods on the prototype of the Constructor rather than directly using 'this'. This is because by using prototype methods are automatically shared on all instances of the constructor, whereas with 'this' each method is defined afresh when a new instance is created with 'new'. I'll be updating this in the future (although in fairness multiple instances are not created on the site (for example only one 'Map' instance is created per page)). <a href=\"#fnref3\">↩</a></p>\n</li>\n</ol>"},{"id":"transformer-remark-markdown-html-f18cee0d8ae4ae81f69aa50c42e8efff--","value":"<p>I recently started investigating the murky (at least for me) world of VPSs. I was previously hosting a few pet projects on Nodejitsu but although their service is excellent, the nature of my projects didn't really warrant using the platform.</p>\n<p>At the same time, I was interested in learning more about using linux commands and investigating how straightforward it was for a beginner to get Express apps running on a VPS and accessible via a specified subdomain.</p>\n<p><a href=\"http://digitalocean.com\">Digital Ocean</a> provides a basic option at $5 per month and I spun up an instance running Ubuntu 12.04 based in Amsterdam no less.</p>\n<p>You'll access your VPS by using a SSH client. As I'm on Windows I use <a href=\"http://www.chiark.greenend.org.uk/%7Esgtatham/putty/\">PuTTY</a>. Through this you'll input your login details for the VPS and you should be able to start on the road to getting your Express app running.</p>\n<p><a href=\"http://wiki.nginx.org/Main\">Nginx</a> is an open source http/reverse proxy server software and is being increasingly used on the basis that it offers simplified but powerful functionality for running servers in comparison to Apache (as I understand it at least!).</p>\n<p>The first steps was to get Nginx running. This was fairly straightforward and I followed the steps in <a href=\"http://www.packtpub.com/nginx-http-server/book\">Nginx HTTP Server</a> by Clement Nedelcu. Nginx runs by using a central configuration file, but you can incorporate other conf files with the simple use of 'include'. On my installation the conf files were located in the following folder /usr/local/nginx/conf/ on the VPS.</p>\n<p>So following installation I had a basic http server up and running serving a index.html file at grabeh.net (adding a domain through Digital Ocean and updating the nameservers to point at the VPS was simple enough).</p>\n<p><strong><em>Installing node.js and your Express app</em></strong></p>\n<p>The next step was to identify how to get Express apps running on the VPS. Installing node.js itself was obviously key!</p>\n<p>The most straightforward way I identified was the following:</p>\n<ul>\n<li>apt-get install python-software-properties</li>\n<li>apt-add-repository ppa:chris-lea/node.js</li>\n<li>apt-get update</li>\n<li>apt-get install nodejs</li>\n</ul>\n<p>After this point I was able to type in 'node' and get access to the REPL. Typing in 2 + 2 did indeed give me 4 which was a pleasure to see (particularly owing to my deficient maths skills). As a bonus, you'll also get npm for package control.</p>\n<p>The next step was to get a small Express app running on the VPS. The easiest way I found was to git clone a basic app into the VPS. You can use the one <a href=\"http://github.com/Grabbeh/express-hello-world\">here</a> on Github if you want. (Using apt-get install git-core will give you access to git commands).</p>\n<p>Then simply 'npm install' to install the Express dependency. After that 'node app' should have the app running on port 3000.</p>\n<p>As you will see using node app means the app is running in the foreground which means we cannot do anything else on the command line whilst the app is running. This simply will not do!</p>\n<p>I recalled a while ago reading about Nodejitsu's Forever tool which allows you to set a node app running in the background. This <a href=\"http://blog.nodejitsu.com/keep-a-nodejs-server-up-with-forever\">link</a> on Nodejitsu's site provides step-by-step instructions, however basically just use 'npm install forever -g' and then in your app's directory you can use 'forever start app.js' and your app will be running in the background. If you're planning on running multiple apps you may want to remain the app.js file to be more descriptive.</p>\n<p>This is because 'forever list' will specify the apps running and for me things got confusing when I was using app.js for all apps.</p>\n<p><strong><em>Getting your Express app displaying on a subdomain</em></strong></p>\n<p>The next step was to determine how to get the app to display via a subdomain on grabeh.net.</p>\n<p>A brief visit to Stackoverflow showed the way, and it wasn't long before the Nginx 'proxy_pass' and 'upstream' directives were identified as being necessary via this <a href=\"http://stackoverflow.com/questions/5009324/node-js-nginx-and-now\">Stackoverflow question</a>.</p>\n<p>After some tinkering I used the following configuration file to specify port 3000 as the upstream location for the Express app, and then using proxy<em>pass and proxy</em>set_... to specify what should happen with requests to, in this case, helloworld.grabeh.net.</p>\n<pre><code>      worker_processes 1;\n\n      events {\n        worker_connections 1024;\n      }\n      http {\n\n          include       mime.types;\n          default_type  application/octet-stream;\n          sendfile      on;\n          tcp_nopush    on;\n\n      # specify the location of the Express app you want to serve up\n\n      upstream helloworld {\n        server localhost:3000;\n      }\n\n      # calls to www.grabeh.net will be rewritten to grabeh.net\n\n      server {\n        listen 80;\n          server_name www.grabeh.net *.grabeh.net;\n          rewrite ^(.*) http://grabeh.net$1 permanent;\n      } \n\n      # specify what will happen when a request to helloworld.[your domain] is made. \n      # Here we are proxying the Express app through.\n\n      server {\n        listen 80;\n        server_name helloworld.grabeh.net;\n\n        location / {\n          try_files $uri @helloworld;\n      }\n\n        location @helloworld {\n          proxy_set_header X-Real-IP $remote_addr;\n          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n          proxy_set_header Host $proxy_host;\n          proxy_set_header X-NginX-Proxy true;\n          proxy_pass http://helloworld;\n          }\n      }\n\n      # basic element where we're sending index.html for requests to grabeh.net/\n      server {\n        listen 80; \n        server_name grabeh.net;\n\n        location / {\n          root html/home;\n          index index.html index.htm;\n          }  \n          }\n      }\n</code></pre>\n<p>If you use this you'll obviously have to update the domain name 'grabeh.net' to your own domain.</p>\n<p>Testing your .conf before sending it live is important. If I'm making any changes to nginx.conf I first use 'cp nginx.conf test.conf' and make changes to test.conf rather than the live file. Testing the file is done by ./nginx -t -c [location of test.conf]. If tests pass, then using 'mv test.conf nginx.conf' will switch in the new conf for the existing one.</p>\n<p>After switching in the modified .conf file using './nginx -s reload' should result in 'Hello World' showing when you navigate to 'helloworld.[yourdomain].[tld].</p>\n<p>Hopefully the above or at least parts of it are useful. It's always good for me to get thoughts down to help cement my understanding. I'm still getting to grips with Nginx and whilst there was lots of good information on Digital Ocean's site and Stackoverflow of course, there didn't seem to be a full step-by-step guide to the entire process.</p>"},{"id":"transformer-remark-markdown-html-01f04681e5fedffaf3eb7568ff13d0d1--","value":"<p>Having done a lot of legal drafting in my time and a little <a href=\"https://github.com/grabbeh\">coding</a> also, I started to notice a few similarities between the two processes which I thought I'd write about. I also talk about one way in which the two processes diverge.</p>\n<p><strong>Avoiding repetition and keeping things DRY</strong></p>\n<p>When drafting legal documents, I'll sometimes find myself repeating a specific phrase or collection of words. To remove this repetition, you can create a defined term and then use the same defined term throughout the agreement.</p>\n<p>For example \"Confidential Information\" can be defined and then re-used throughout the agreement (making it as broad or as narrow as you might like, subject to enforceability).</p>\n<p>This could be broadly analogous to using functions to collect together a specific area of functionality which can then be re-used without repeating the original code.</p>\n<p><strong>Separation of concerns</strong></p>\n<p>When you're working in an organisation with agreements that will be re-used frequently and by non-lawyers, it's good to separate out firstly as much as possible content that will need to change each time the document is used, and secondly content that is standard and is therefore unlikely in the first instance to change. Although sending it over to the other side's lawyers is a different matter.</p>\n<p>This can be done by moving changeable terms (price, delivery schedule, licence period etc) from the main body of the agreement into a schedule. This way when it comes to be re-used the user will only need to update the schedule and will not have to get involved with the main body of the agreement. Overall this hopefully means that the time to get a contract out to the other side is greatly reduced, or at least that's the plan.</p>\n<p>This has parallels with avoiding the use of CSS and Javascript inline in HTML. If for example you're allowing a user to customise a simple layout, then there isn't necessarily a need to have the user interact with the HTML itself as, depending on the circumstances of course.</p>\n<p>If everything is inline and a jumble of CSS, JS and HTML I would argue this increases the chances of a particular style update being missed (as is the case with an agreement, where the risk of missing an update to a changeable term is increased if everything is within the body of the agreement).</p>\n<p><strong>Straining the analogy</strong></p>\n<p>You could go as far as to say that the main body of an agreement is the view, the schedule with variables is the model, and the definitions section is the controller/router, providing the glue between the model and the view, defining how the terms in the schedule (price, payment terms, work period) are used in the view.</p>\n<p><img src=\"/legalmvc.png\" title=\"It&#x27;s MVC, but not as we know it, Jim\"></p>\n<p><strong>User feedback</strong></p>\n<p>A little trite, but both from a legal and a coding perspective, it's really important to have the results of your efforts reviewed by those who will be actually using the end result. Within my organisation, after I've drafted the document it will go out to the people who asked me to draft it in the first place for comments.</p>\n<p>As a side-note, whether or not they'll give it a thorough read-through depends a) on the person's dedication to ensuring the terms of the proposed work are accurately reflected in the agreement and b) their trust in the abilities of the legal department!</p>\n<p>In both cases you'll quickly find out what the important parts are and where improvements are desired, even if perhaps the full extent of the work isn't thoroughly assessed. If you're working for a services-based organisation, the expenses clause is generally the most important aspect of the agreement.</p>\n<p><strong>Modularity</strong></p>\n<p>Most agreements will have a set of standard clauses which you will find in most agreements, like choice of law, limitation of liability, assignment, waiver, and variation. Being able to slot these in and not have to worry about drafting new clauses each time takes time out the drafting process. This leaves time to focus on the elements unique to the agreement.</p>\n<p>In the same way, when coding web applications, you will most likely have standard pieces of functionality like user authentication and file uploads, or frameworks like <a href=\"http://foundation.zurb.com/\">Foundation</a>, <a href=\"http://getbootstrap.com/\">Bootstrap</a>and <a href=\"http://purecss.io/\">Pure.CSS</a> for the appearance of an app. Mozilla's Brick and Google's Polymer also open up the possibility of packaging up discrete elements of functionality.</p>\n<p><strong>But where do they differ?</strong></p>\n<p>It's fair to say there's one pretty glaring way in which the two processes differ. If I want to draft a document I'm much more restricted in the way I can go out and grab existing examples that are free to use.</p>\n<p>This is in stark contract to the many open source options that are available to help a person to quickly incorporate functionality into an app (at least in my experience in using <a href=\"http://nodejs.org\">Node.js</a> and <a href=\"http://expressjs.com\">Express</a>).</p>\n<p>Some folks including <a href=\"http://www.legalzoom.com\">Legal Zoom</a> and <a href=\"http://www.docracy.com\">Docracy</a> are taking steps to simplify the process for many users of legal services (in the case of the former and the latter) and to allow lawyers to provide and comment on agreements (in the case of the latter).</p>\n<p>However at present there isn't a widely-used service like Github where to extend the analogy and in the context of open source code, lawyers from different firms collaborate on improving documents used by all or used by many different people<sup id=\"fnref1\"><a href=\"#fn1\">1</a></sup> (perhaps an overly broad definition) or lawyers might develop a set of wording internally and decide to release it for general consumption.</p>\n<p>Whether this will change in the future remains to be seen however, there are good reasons for this reduced participation:</p>\n<ul>\n<li>unlike software companies, law firms are less likely to gain goodwill as a result of making available clauses</li>\n<li>even standard clauses can need to be changed depending on the specific circumstances of a deal, reducing the benefit of open sourcing them in the first place</li>\n<li>confidentiality issues are more likely to be an issue</li>\n<li>perhaps most importantly, law firms act for clients who may take umbrage at releasing work (even if completely anonymised) as a third party could still benefit from the work, particularly bespoke drafting</li>\n</ul>\n<p>I'm not saying that many of these reasons cannot be overcome but at present the above barriers are sufficient to prevent wider participation by lawyers in open sourcing of legal documentation<sup id=\"fnref2\"><a href=\"#fn2\">2</a></sup>.</p>\n<p>As for the future, it will be interesting to see whether start-ups operating in the legal sector will be able to exert sufficient influence or make it attractive enough for large volumes of lawyers to start doing this.</p>\n<hr>\n<ol>\n<li>\n<p>There are movements in certain niche areas where lawyers do collaborate to improve documents to a standard like <a href=\"http://www2.isda.org/\">ISDA</a> (for financial swaps and derivatives) and the <a href=\"http://www.jctltd.co.uk/\">JCT</a> for construction contracts but this is still a relatively closed system and is the exception rather than the rule. <a href=\"#fnref1\">↩</a></p>\n</li>\n<li>\n<p>One counter-example is the <a href=\"https://github.com/twitter/innovators-patent-agreement/blob/master/innovators-patent-agreement.md\">Innovators Patent Agreement</a>.  <a href=\"#fnref2\">↩</a></p>\n</li>\n</ol>"},{"id":"transformer-remark-markdown-html-027925bddd41afc8bc0842a9e5e4876e--","value":"<p>In some countries in the world, laws are in place to help protect the consumer against the imposition of unfair contract terms.</p>\n<p>The rationale behind such laws is ensure that a company cannot take advantage of the fact that a customer is not always in a position to understand standard terms placed in front of them, and is also in a relatively weak bargaining position to make any changes to terms.</p>\n<p>At the same time, especially in e-commerce terms, it's important to not present any major hurdles to a consumer's usage of e-commerce. For example, not providing protections would mean that consumers would be more likely (ok, only a little more likely) to wade through terms to make sure there wasn't anything unduly onerous.</p>\n<p>Consumer protection regulations mean that a customer can be relatively assured that regardless of the terms they sign up to (which are generally unread) because of consumer protection regulations, the terms will either a) be reasonable in the first instance or b) if they do contain unreasonable terms, they will be struck out if a company ever sought to enforce them.</p>\n<p>Although the above protections are in most cases likely to mean that the vast blocks of text that often form online terms will not contain anything nasty, there are steps that a website provider can take to improve their chances of being able to rely on its terms.</p>\n<p>For example it's important to use plain language in your terms and also to highlight any particularly onerous terms (even if their own right they may be entirely reasonable).</p>\n<p>One of the UK's most famous judges, Lord Denning in the case of <a href=\"http://en.wikipedia.org/wiki/J_Spurling_Ltd_v_Bradshaw\">J Spurling Ltd v Bradshaw</a> [1956] EWCA Civ 3 offered a particularly pertinent quote back in 1956 commenting that:</p>\n<div class=\"quote\">\"I quite agree that the more unreasonable a clause is, the greater the notice which must be given of it. Some clauses which I have seen would need to be printed in red ink on the face of the document with a red hand pointing to it before the notice could be held to be sufficient.\"</div>\n<p>With online terms it could be a good idea to highlight to a customer where a particularly onerous term is proposed to be introduced.</p>\n<p>With this in mind, I thought it would be interesting to try to use some code to introduce this into some generic terms (Lorem Ipsum in this case). Using <a href=\"https://github.com/Prinzhorn/skrollr\">Skrollr.js</a>, I created some functionality so as a user scrolls down the page, highlighted blocks move into view alerting them to particularly onerous terms.</p>\n<p>The example can be found <a href=\"http://legal-terms-example.grabeh.net\">here</a>. Scrolling down should result in the warning notices appearing (although only on desktop at the moment).</p>\n<p>At the moment, a two column approach is taken and with Skrollr you can use relative positioning to adjust the styling of an element dependent on its position relative to the top and bottom of the viewport. Here's an example for one of the boxes.</p>\n<pre><code>&#x3C;div class=\"imp-text\" \ndata-25-top-top=\"opacity: 1; background: rgb(255,247,165); left: 0px;\" \ndata-25-top-bottom=\"opacity: 0; background: rgb(255,255,255); left: 200px;\" \ndata--25-bottom-top=\"opacity: 0; left: 200px; background: rgb(255,255,255);\" \ndata--25-bottom-bottom=\"opacity: 1; left: 0px; background: rgb(255,247,165);\">\nKidney due within 30 days of signature&#x3C;/div>\n</code></pre>\n<p>In the example by using 'top-top' (top of viewport and top of element) and 'top-bottom' (still top of viewport and bottom of element) and introducing changes in style between the two, scrolling between will smoothly transition between the two styles.</p>\n<p>Whilst some of the term used on the page may not quite cut the mustard in terms of being reasonable, the important point to take away is that by highlighting the terms, you're more likely to have provided sufficient notice to the user.</p>\n<p>In part, consumer law assumes a user may not read the terms, but if a company takes appropriate steps to notify its users about onerous terms, it is more likely they'll be able to rely on them in future.</p>"},{"id":"transformer-remark-markdown-ast-2f630b2a4c1eafe7e9379b3573668d8b--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Steps-to-improve-Unity-Ubuntu-on-Chromebook-Crouton-for-developer-purposes'\ntitle: 'Steps to improve Unity Ubuntu on Chromebook Crouton for developer purposes'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":175},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"I recently bought an Acer C270 Chromebook and having undertaken the straightforward process of using Crouton to install Ubuntu/Unity, I found I had to take a few more steps to make the machine usable for Node.js development.","position":{"start":{"line":6,"column":1,"offset":177},"end":{"line":6,"column":225,"offset":401},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":177},"end":{"line":6,"column":225,"offset":401},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I thought I'd outline the steps below I took. Clearly some steps may not be applicable depending on the preferred setup.","position":{"start":{"line":8,"column":1,"offset":403},"end":{"line":8,"column":121,"offset":523},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":403},"end":{"line":8,"column":121,"offset":523},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Terminal","position":{"start":{"line":10,"column":3,"offset":527},"end":{"line":10,"column":11,"offset":535},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":525},"end":{"line":10,"column":13,"offset":537},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":525},"end":{"line":10,"column":13,"offset":537},"indent":[]}},{"type":"code","lang":null,"value":"sudo apt-get install gnome-terminal","position":{"start":{"line":12,"column":1,"offset":539},"end":{"line":12,"column":40,"offset":578},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Google Chrome","position":{"start":{"line":14,"column":3,"offset":582},"end":{"line":14,"column":16,"offset":595},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":580},"end":{"line":14,"column":18,"offset":597},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":580},"end":{"line":14,"column":18,"offset":597},"indent":[]}},{"type":"code","lang":null,"value":"wget https://dl.google.com/linux/direct/google-chrome-  stable_current_amd64.deb\n\nsudo dpkg -i google-chrome*.deb\n\nsudo apt-get -f install","position":{"start":{"line":16,"column":1,"offset":599},"end":{"line":20,"column":28,"offset":749},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You may need to add '--user-data-dir' to the end of the /usr/bin/google-chrome file also so that Chrome runs.","position":{"start":{"line":22,"column":1,"offset":751},"end":{"line":22,"column":110,"offset":860},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":751},"end":{"line":22,"column":110,"offset":860},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Also 'python -c \"import gnomekeyring;gnomekeyring.change","position":{"start":{"line":24,"column":1,"offset":862},"end":{"line":24,"column":57,"offset":918},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"password","position":{"start":{"line":24,"column":58,"offset":919},"end":{"line":24,"column":66,"offset":927},"indent":[]}}],"position":{"start":{"line":24,"column":57,"offset":918},"end":{"line":24,"column":67,"offset":928},"indent":[]}},{"type":"text","value":"sync('login', 'MYPASSWORD', '');\"' can be used to disable the request for a keyring password.","position":{"start":{"line":24,"column":67,"offset":928},"end":{"line":24,"column":160,"offset":1021},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":862},"end":{"line":24,"column":160,"offset":1021},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Node.js","position":{"start":{"line":26,"column":3,"offset":1025},"end":{"line":26,"column":10,"offset":1032},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1023},"end":{"line":26,"column":12,"offset":1034},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1023},"end":{"line":26,"column":12,"offset":1034},"indent":[]}},{"type":"code","lang":null,"value":"wget http://nodejs.org/dist/v0.10.22/node-v0.10.22.tar.gz\n\ntar -xvzf node-v0.10.22.tar.gz\n\ncd node-v0.10.22\n\napt-get install build-essential g++\n\n./configure\n\nmake\n\nsudo make install\n\nnode -v","position":{"start":{"line":28,"column":1,"offset":1036},"end":{"line":42,"column":12,"offset":1259},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Git","position":{"start":{"line":44,"column":3,"offset":1263},"end":{"line":44,"column":6,"offset":1266},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1261},"end":{"line":44,"column":8,"offset":1268},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1261},"end":{"line":44,"column":8,"offset":1268},"indent":[]}},{"type":"code","lang":null,"value":"sudo apt-get install git","position":{"start":{"line":46,"column":1,"offset":1270},"end":{"line":46,"column":29,"offset":1298},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Fonts","position":{"start":{"line":48,"column":3,"offset":1302},"end":{"line":48,"column":8,"offset":1307},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1300},"end":{"line":48,"column":10,"offset":1309},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1300},"end":{"line":48,"column":10,"offset":1309},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The font on Gnome Terminal was bunched up. This was fixed by installing a new font package as follows:","position":{"start":{"line":50,"column":1,"offset":1311},"end":{"line":50,"column":103,"offset":1413},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1311},"end":{"line":50,"column":103,"offset":1413},"indent":[]}},{"type":"code","lang":null,"value":"sudo apt-get install ttf-ubuntu-font-family","position":{"start":{"line":52,"column":1,"offset":1415},"end":{"line":52,"column":48,"offset":1462},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Sublime Text 2","position":{"start":{"line":54,"column":3,"offset":1466},"end":{"line":54,"column":17,"offset":1480},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1464},"end":{"line":54,"column":19,"offset":1482},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1464},"end":{"line":54,"column":19,"offset":1482},"indent":[]}},{"type":"code","lang":null,"value":"sudo add-apt-repository ppa:webupd8team/sublime-text-2\n\nsudo apt-get update\n\nsudo apt-get install sublime-text","position":{"start":{"line":56,"column":1,"offset":1484},"end":{"line":60,"column":38,"offset":1606},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Switching to Chromebook keyboard","position":{"start":{"line":62,"column":3,"offset":1610},"end":{"line":62,"column":35,"offset":1642},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1608},"end":{"line":62,"column":37,"offset":1644},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1608},"end":{"line":62,"column":37,"offset":1644},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The key mappings in Ubuntu 12.04 are different to the default ones for the Chromebook. I therefore used xmodmap to update/switch around certain keys.","position":{"start":{"line":64,"column":1,"offset":1646},"end":{"line":64,"column":150,"offset":1795},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1646},"end":{"line":64,"column":150,"offset":1795},"indent":[]}},{"type":"code","lang":null,"value":"xmodmap -e \"keycode 94 shift = backslash bar\"\n\nxmodmap -e \"keycode 51 shift = numbersign asciitilde\"\n\nxmodmap -e  \"keycode 11 shift = 2 quotedbl\"\n\nxmodmap -e \"keycode 48 shift = apostrophe at\"","position":{"start":{"line":66,"column":1,"offset":1797},"end":{"line":72,"column":50,"offset":2005},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"I also added a delete key and made the search key into caps lock with the following:","position":{"start":{"line":74,"column":1,"offset":2007},"end":{"line":74,"column":85,"offset":2091},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2007},"end":{"line":74,"column":85,"offset":2091},"indent":[]}},{"type":"code","lang":null,"value":"xmodmap -e \"keycode 22 shift = BackSpace Delete\"\n\nxmodmap -e \"keycode 133 = Caps_Lock\"","position":{"start":{"line":76,"column":1,"offset":2093},"end":{"line":78,"column":41,"offset":2187},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Bear in mind that the above commands are session specific so to persist them you should create a file called '.xinitrc' file in your home directory, with 'xmodmap .Xmodmap' in, then xmodmap -pke > .Xmodmap in same directory to save revised .Xmodmap file in that directory.","position":{"start":{"line":80,"column":1,"offset":2189},"end":{"line":80,"column":273,"offset":2461},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2189},"end":{"line":80,"column":273,"offset":2461},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Alternatively, you can just call .xmodmap ~/Xmodmap on each session startup.","position":{"start":{"line":82,"column":1,"offset":2463},"end":{"line":82,"column":77,"offset":2539},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":2463},"end":{"line":82,"column":77,"offset":2539},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"On remapping the Delete key I couldn't get the Alt + Backspace combination to work so used shift instead.","position":{"start":{"line":84,"column":1,"offset":2541},"end":{"line":84,"column":106,"offset":2646},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":2541},"end":{"line":84,"column":106,"offset":2646},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I also mapped delete in Sublime Text 2 to shift + backspace by editing the existing binding in .sublime-keymap to the following:","position":{"start":{"line":86,"column":1,"offset":2648},"end":{"line":86,"column":129,"offset":2776},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":2648},"end":{"line":86,"column":129,"offset":2776},"indent":[]}},{"type":"code","lang":null,"value":"{ \"keys\": [\"shift+backspace\"], \"command\": \"right_delete\" }","position":{"start":{"line":88,"column":1,"offset":2778},"end":{"line":88,"column":63,"offset":2840},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I'm very happy with the new Chromebook and the above additions have helped no end to make using Unity/Ubuntu via Crouton a good environment for me to develop in (maybe one day I'll master Vim but not today).","position":{"start":{"line":90,"column":1,"offset":2842},"end":{"line":90,"column":208,"offset":3049},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":2842},"end":{"line":90,"column":208,"offset":3049},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":91,"column":1,"offset":3050}}}},{"id":"transformer-remark-markdown-ast-a377a2c4b088dc29ba99fcdbf396b651--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Setting-up-HTTPS-with-Express-Apps-using-Nginx-and-Digital-Ocean'\ntitle: 'Setting up HTTPS with Express Apps using Nginx and Digital Ocean'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":155},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269},"indent":[]}},{"type":"link","title":null,"url":"https://instok.net","children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276},"indent":[]}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297},"indent":[]}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591},"indent":[]}},{"type":"link","title":null,"url":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl","children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610},"indent":[]}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690},"indent":[]}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":206,"offset":709},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"openssl genrsa -out domain.com.key 2048","position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812},"indent":[1,1,1,1]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953},"indent":[]}},{"type":"code","lang":null,"value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem","position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":53,"offset":1095},"indent":[]}},{"type":"link","title":null,"url":"https://konklone.com/post/switch-to-https-now-for-free","children":[{"type":"text","value":"free","position":{"start":{"line":20,"column":54,"offset":1096},"end":{"line":20,"column":58,"offset":1100},"indent":[]}}],"position":{"start":{"line":20,"column":53,"offset":1095},"end":{"line":20,"column":115,"offset":1157},"indent":[]}},{"type":"text","value":"). I used ","position":{"start":{"line":20,"column":115,"offset":1157},"end":{"line":20,"column":125,"offset":1167},"indent":[]}},{"type":"link","title":null,"url":"http://www.namecheap.com","children":[{"type":"text","value":"NameCheap","position":{"start":{"line":20,"column":126,"offset":1168},"end":{"line":20,"column":135,"offset":1177},"indent":[]}}],"position":{"start":{"line":20,"column":125,"offset":1167},"end":{"line":20,"column":162,"offset":1204},"indent":[]}},{"type":"text","value":" as suggested by ","position":{"start":{"line":20,"column":162,"offset":1204},"end":{"line":20,"column":179,"offset":1221},"indent":[]}},{"type":"link","title":null,"url":"https://stripe.com/help/ssl","children":[{"type":"text","value":"Stripe","position":{"start":{"line":20,"column":180,"offset":1222},"end":{"line":20,"column":186,"offset":1228},"indent":[]}}],"position":{"start":{"line":20,"column":179,"offset":1221},"end":{"line":20,"column":216,"offset":1258},"indent":[]}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":20,"column":216,"offset":1258},"end":{"line":20,"column":326,"offset":1368},"indent":[]}}],"position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":326,"offset":1368},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":20,"column":326,"offset":1368},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1369},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":21,"column":188,"offset":1556},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177},"indent":[]}}],"position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"var options = {\n    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: ","position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":32,"column":13,"offset":2427},"indent":[5,5,5,5,5]}},{"type":"linkReference","identifier":"fs.readfilesync('./config/intermediate.pem')","referenceType":"shortcut","children":[{"type":"text","value":"fs.readFileSync('./config/intermediate.pem')","position":{"start":{"line":32,"column":14,"offset":2428},"end":{"line":32,"column":58,"offset":2472},"indent":[]}}],"position":{"start":{"line":32,"column":13,"offset":2427},"end":{"line":32,"column":59,"offset":2473},"indent":[]}},{"type":"text","value":"\n};","position":{"start":{"line":32,"column":59,"offset":2473},"end":{"line":33,"column":7,"offset":2480},"indent":[5]}}],"position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":33,"column":7,"offset":2480},"indent":[5,5,5,5,5,5]}},{"type":"paragraph","children":[{"type":"text","value":"https.createServer(options, app).listen(port of your choosing);","position":{"start":{"line":35,"column":5,"offset":2486},"end":{"line":35,"column":68,"offset":2549},"indent":[]}}],"position":{"start":{"line":35,"column":5,"offset":2486},"end":{"line":35,"column":68,"offset":2549},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":35,"column":68,"offset":2549},"indent":[1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":35,"column":68,"offset":2549},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":37,"column":1,"offset":2551},"end":{"line":37,"column":405,"offset":2955},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":2551},"end":{"line":37,"column":405,"offset":2955},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":39,"column":5,"offset":2961},"end":{"line":39,"column":333,"offset":3289},"indent":[]}}],"position":{"start":{"line":39,"column":5,"offset":2961},"end":{"line":39,"column":333,"offset":3289},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"server {\n   listen 443 ssl default_server;","position":{"start":{"line":41,"column":5,"offset":3295},"end":{"line":42,"column":38,"offset":3341},"indent":[5]}}],"position":{"start":{"line":41,"column":5,"offset":3295},"end":{"line":42,"column":38,"offset":3341},"indent":[5]}},{"type":"paragraph","children":[{"type":"text","value":"   ssl","position":{"start":{"line":44,"column":5,"offset":3347},"end":{"line":44,"column":11,"offset":3353},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"certificate      /path/to/your/app/main.pem;\n   ssl","position":{"start":{"line":44,"column":12,"offset":3354},"end":{"line":45,"column":11,"offset":3409},"indent":[5]}}],"position":{"start":{"line":44,"column":11,"offset":3353},"end":{"line":45,"column":12,"offset":3410},"indent":[5]}},{"type":"text","value":"certificate_key  /path/to/your/app/domain.pem;","position":{"start":{"line":45,"column":12,"offset":3410},"end":{"line":45,"column":58,"offset":3456},"indent":[]}}],"position":{"start":{"line":44,"column":5,"offset":3347},"end":{"line":45,"column":58,"offset":3456},"indent":[5]}},{"type":"paragraph","children":[{"type":"text","value":"}","position":{"start":{"line":47,"column":5,"offset":3462},"end":{"line":47,"column":6,"offset":3463},"indent":[]}}],"position":{"start":{"line":47,"column":5,"offset":3462},"end":{"line":47,"column":6,"offset":3463},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":2957},"end":{"line":48,"column":1,"offset":3464},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":49,"column":5,"offset":3469},"end":{"line":49,"column":48,"offset":3512},"indent":[]}},{"type":"link","title":null,"url":"https://widget.com","children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":49,"column":49,"offset":3513},"end":{"line":49,"column":67,"offset":3531},"indent":[]}}],"position":{"start":{"line":49,"column":48,"offset":3512},"end":{"line":49,"column":88,"offset":3552},"indent":[]}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":49,"column":88,"offset":3552},"end":{"line":49,"column":251,"offset":3715},"indent":[]}}],"position":{"start":{"line":49,"column":5,"offset":3469},"end":{"line":49,"column":251,"offset":3715},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"server {\n    listen 80;\n    server_name ","position":{"start":{"line":51,"column":5,"offset":3721},"end":{"line":53,"column":21,"offset":3769},"indent":[5,5]}},{"type":"link","title":null,"url":"http://widget.com","children":[{"type":"text","value":"http://widget.com","position":{"start":{"line":53,"column":21,"offset":3769},"end":{"line":53,"column":38,"offset":3786},"indent":[]}}],"position":{"start":{"line":53,"column":21,"offset":3769},"end":{"line":53,"column":38,"offset":3786},"indent":[]}},{"type":"text","value":";\n    return 301 ","position":{"start":{"line":53,"column":38,"offset":3786},"end":{"line":54,"column":20,"offset":3807},"indent":[5]}},{"type":"link","title":null,"url":"https://widget.com","children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":54,"column":20,"offset":3807},"end":{"line":54,"column":38,"offset":3825},"indent":[]}}],"position":{"start":{"line":54,"column":20,"offset":3807},"end":{"line":54,"column":38,"offset":3825},"indent":[]}},{"type":"text","value":";\n}","position":{"start":{"line":54,"column":38,"offset":3825},"end":{"line":55,"column":6,"offset":3832},"indent":[5]}}],"position":{"start":{"line":51,"column":5,"offset":3721},"end":{"line":55,"column":6,"offset":3832},"indent":[5,5,5,5]}}],"position":{"start":{"line":49,"column":1,"offset":3465},"end":{"line":55,"column":6,"offset":3832},"indent":[1,1,1,1,1,1]}}],"position":{"start":{"line":39,"column":1,"offset":2957},"end":{"line":55,"column":6,"offset":3832},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":57,"column":1,"offset":3834},"end":{"line":57,"column":132,"offset":3965},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":3834},"end":{"line":57,"column":132,"offset":3965},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":59,"column":1,"offset":3967}}}},{"id":"transformer-remark-markdown-html-ast-2f630b2a4c1eafe7e9379b3573668d8b--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I recently bought an Acer C270 Chromebook and having undertaken the straightforward process of using Crouton to install Ubuntu/Unity, I found I had to take a few more steps to make the machine usable for Node.js development.","position":{"start":{"line":6,"column":1,"offset":177},"end":{"line":6,"column":225,"offset":401}}}],"position":{"start":{"line":6,"column":1,"offset":177},"end":{"line":6,"column":225,"offset":401}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I thought I'd outline the steps below I took. Clearly some steps may not be applicable depending on the preferred setup.","position":{"start":{"line":8,"column":1,"offset":403},"end":{"line":8,"column":121,"offset":523}}}],"position":{"start":{"line":8,"column":1,"offset":403},"end":{"line":8,"column":121,"offset":523}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Terminal","position":{"start":{"line":10,"column":3,"offset":527},"end":{"line":10,"column":11,"offset":535}}}],"position":{"start":{"line":10,"column":1,"offset":525},"end":{"line":10,"column":13,"offset":537}}}],"position":{"start":{"line":10,"column":1,"offset":525},"end":{"line":10,"column":13,"offset":537}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sudo apt-get install gnome-terminal\n"}],"position":{"start":{"line":12,"column":1,"offset":539},"end":{"line":12,"column":40,"offset":578}}}],"position":{"start":{"line":12,"column":1,"offset":539},"end":{"line":12,"column":40,"offset":578}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Google Chrome","position":{"start":{"line":14,"column":3,"offset":582},"end":{"line":14,"column":16,"offset":595}}}],"position":{"start":{"line":14,"column":1,"offset":580},"end":{"line":14,"column":18,"offset":597}}}],"position":{"start":{"line":14,"column":1,"offset":580},"end":{"line":14,"column":18,"offset":597}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wget https://dl.google.com/linux/direct/google-chrome-  stable_current_amd64.deb\n\nsudo dpkg -i google-chrome*.deb\n\nsudo apt-get -f install\n"}],"position":{"start":{"line":16,"column":1,"offset":599},"end":{"line":20,"column":28,"offset":749}}}],"position":{"start":{"line":16,"column":1,"offset":599},"end":{"line":20,"column":28,"offset":749}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You may need to add '--user-data-dir' to the end of the /usr/bin/google-chrome file also so that Chrome runs.","position":{"start":{"line":22,"column":1,"offset":751},"end":{"line":22,"column":110,"offset":860}}}],"position":{"start":{"line":22,"column":1,"offset":751},"end":{"line":22,"column":110,"offset":860}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Also 'python -c \"import gnomekeyring;gnomekeyring.change","position":{"start":{"line":24,"column":1,"offset":862},"end":{"line":24,"column":57,"offset":918}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"password","position":{"start":{"line":24,"column":58,"offset":919},"end":{"line":24,"column":66,"offset":927}}}],"position":{"start":{"line":24,"column":57,"offset":918},"end":{"line":24,"column":67,"offset":928}}},{"type":"text","value":"sync('login', 'MYPASSWORD', '');\"' can be used to disable the request for a keyring password.","position":{"start":{"line":24,"column":67,"offset":928},"end":{"line":24,"column":160,"offset":1021}}}],"position":{"start":{"line":24,"column":1,"offset":862},"end":{"line":24,"column":160,"offset":1021}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Node.js","position":{"start":{"line":26,"column":3,"offset":1025},"end":{"line":26,"column":10,"offset":1032}}}],"position":{"start":{"line":26,"column":1,"offset":1023},"end":{"line":26,"column":12,"offset":1034}}}],"position":{"start":{"line":26,"column":1,"offset":1023},"end":{"line":26,"column":12,"offset":1034}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wget http://nodejs.org/dist/v0.10.22/node-v0.10.22.tar.gz\n\ntar -xvzf node-v0.10.22.tar.gz\n\ncd node-v0.10.22\n\napt-get install build-essential g++\n\n./configure\n\nmake\n\nsudo make install\n\nnode -v\n"}],"position":{"start":{"line":28,"column":1,"offset":1036},"end":{"line":42,"column":12,"offset":1259}}}],"position":{"start":{"line":28,"column":1,"offset":1036},"end":{"line":42,"column":12,"offset":1259}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Git","position":{"start":{"line":44,"column":3,"offset":1263},"end":{"line":44,"column":6,"offset":1266}}}],"position":{"start":{"line":44,"column":1,"offset":1261},"end":{"line":44,"column":8,"offset":1268}}}],"position":{"start":{"line":44,"column":1,"offset":1261},"end":{"line":44,"column":8,"offset":1268}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sudo apt-get install git\n"}],"position":{"start":{"line":46,"column":1,"offset":1270},"end":{"line":46,"column":29,"offset":1298}}}],"position":{"start":{"line":46,"column":1,"offset":1270},"end":{"line":46,"column":29,"offset":1298}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Fonts","position":{"start":{"line":48,"column":3,"offset":1302},"end":{"line":48,"column":8,"offset":1307}}}],"position":{"start":{"line":48,"column":1,"offset":1300},"end":{"line":48,"column":10,"offset":1309}}}],"position":{"start":{"line":48,"column":1,"offset":1300},"end":{"line":48,"column":10,"offset":1309}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The font on Gnome Terminal was bunched up. This was fixed by installing a new font package as follows:","position":{"start":{"line":50,"column":1,"offset":1311},"end":{"line":50,"column":103,"offset":1413}}}],"position":{"start":{"line":50,"column":1,"offset":1311},"end":{"line":50,"column":103,"offset":1413}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sudo apt-get install ttf-ubuntu-font-family\n"}],"position":{"start":{"line":52,"column":1,"offset":1415},"end":{"line":52,"column":48,"offset":1462}}}],"position":{"start":{"line":52,"column":1,"offset":1415},"end":{"line":52,"column":48,"offset":1462}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Sublime Text 2","position":{"start":{"line":54,"column":3,"offset":1466},"end":{"line":54,"column":17,"offset":1480}}}],"position":{"start":{"line":54,"column":1,"offset":1464},"end":{"line":54,"column":19,"offset":1482}}}],"position":{"start":{"line":54,"column":1,"offset":1464},"end":{"line":54,"column":19,"offset":1482}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sudo add-apt-repository ppa:webupd8team/sublime-text-2\n\nsudo apt-get update\n\nsudo apt-get install sublime-text\n"}],"position":{"start":{"line":56,"column":1,"offset":1484},"end":{"line":60,"column":38,"offset":1606}}}],"position":{"start":{"line":56,"column":1,"offset":1484},"end":{"line":60,"column":38,"offset":1606}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Switching to Chromebook keyboard","position":{"start":{"line":62,"column":3,"offset":1610},"end":{"line":62,"column":35,"offset":1642}}}],"position":{"start":{"line":62,"column":1,"offset":1608},"end":{"line":62,"column":37,"offset":1644}}}],"position":{"start":{"line":62,"column":1,"offset":1608},"end":{"line":62,"column":37,"offset":1644}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The key mappings in Ubuntu 12.04 are different to the default ones for the Chromebook. I therefore used xmodmap to update/switch around certain keys.","position":{"start":{"line":64,"column":1,"offset":1646},"end":{"line":64,"column":150,"offset":1795}}}],"position":{"start":{"line":64,"column":1,"offset":1646},"end":{"line":64,"column":150,"offset":1795}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"xmodmap -e \"keycode 94 shift = backslash bar\"\n\nxmodmap -e \"keycode 51 shift = numbersign asciitilde\"\n\nxmodmap -e  \"keycode 11 shift = 2 quotedbl\"\n\nxmodmap -e \"keycode 48 shift = apostrophe at\"\n"}],"position":{"start":{"line":66,"column":1,"offset":1797},"end":{"line":72,"column":50,"offset":2005}}}],"position":{"start":{"line":66,"column":1,"offset":1797},"end":{"line":72,"column":50,"offset":2005}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I also added a delete key and made the search key into caps lock with the following:","position":{"start":{"line":74,"column":1,"offset":2007},"end":{"line":74,"column":85,"offset":2091}}}],"position":{"start":{"line":74,"column":1,"offset":2007},"end":{"line":74,"column":85,"offset":2091}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"xmodmap -e \"keycode 22 shift = BackSpace Delete\"\n\nxmodmap -e \"keycode 133 = Caps_Lock\"\n"}],"position":{"start":{"line":76,"column":1,"offset":2093},"end":{"line":78,"column":41,"offset":2187}}}],"position":{"start":{"line":76,"column":1,"offset":2093},"end":{"line":78,"column":41,"offset":2187}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Bear in mind that the above commands are session specific so to persist them you should create a file called '.xinitrc' file in your home directory, with 'xmodmap .Xmodmap' in, then xmodmap -pke > .Xmodmap in same directory to save revised .Xmodmap file in that directory.","position":{"start":{"line":80,"column":1,"offset":2189},"end":{"line":80,"column":273,"offset":2461}}}],"position":{"start":{"line":80,"column":1,"offset":2189},"end":{"line":80,"column":273,"offset":2461}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Alternatively, you can just call .xmodmap ~/Xmodmap on each session startup.","position":{"start":{"line":82,"column":1,"offset":2463},"end":{"line":82,"column":77,"offset":2539}}}],"position":{"start":{"line":82,"column":1,"offset":2463},"end":{"line":82,"column":77,"offset":2539}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"On remapping the Delete key I couldn't get the Alt + Backspace combination to work so used shift instead.","position":{"start":{"line":84,"column":1,"offset":2541},"end":{"line":84,"column":106,"offset":2646}}}],"position":{"start":{"line":84,"column":1,"offset":2541},"end":{"line":84,"column":106,"offset":2646}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I also mapped delete in Sublime Text 2 to shift + backspace by editing the existing binding in .sublime-keymap to the following:","position":{"start":{"line":86,"column":1,"offset":2648},"end":{"line":86,"column":129,"offset":2776}}}],"position":{"start":{"line":86,"column":1,"offset":2648},"end":{"line":86,"column":129,"offset":2776}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"{ \"keys\": [\"shift+backspace\"], \"command\": \"right_delete\" }\n"}],"position":{"start":{"line":88,"column":1,"offset":2778},"end":{"line":88,"column":63,"offset":2840}}}],"position":{"start":{"line":88,"column":1,"offset":2778},"end":{"line":88,"column":63,"offset":2840}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I'm very happy with the new Chromebook and the above additions have helped no end to make using Unity/Ubuntu via Crouton a good environment for me to develop in (maybe one day I'll master Vim but not today).","position":{"start":{"line":90,"column":1,"offset":2842},"end":{"line":90,"column":208,"offset":3049}}}],"position":{"start":{"line":90,"column":1,"offset":2842},"end":{"line":90,"column":208,"offset":3049}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":91,"column":1,"offset":3050}}}},{"id":"transformer-remark-markdown-html-ast-a377a2c4b088dc29ba99fcdbf396b651--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269}}},{"type":"element","tagName":"a","properties":{"href":"https://instok.net"},"children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276}}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297}}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407}}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591}}},{"type":"element","tagName":"a","properties":{"href":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl"},"children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610}}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690}}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709}}}],"position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":206,"offset":709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"openssl genrsa -out domain.com.key 2048","position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754}}}],"position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812}}}],"position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953}}}],"position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n"}],"position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041}}}],"position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":53,"offset":1095}}},{"type":"element","tagName":"a","properties":{"href":"https://konklone.com/post/switch-to-https-now-for-free"},"children":[{"type":"text","value":"free","position":{"start":{"line":20,"column":54,"offset":1096},"end":{"line":20,"column":58,"offset":1100}}}],"position":{"start":{"line":20,"column":53,"offset":1095},"end":{"line":20,"column":115,"offset":1157}}},{"type":"text","value":"). I used ","position":{"start":{"line":20,"column":115,"offset":1157},"end":{"line":20,"column":125,"offset":1167}}},{"type":"element","tagName":"a","properties":{"href":"http://www.namecheap.com"},"children":[{"type":"text","value":"NameCheap","position":{"start":{"line":20,"column":126,"offset":1168},"end":{"line":20,"column":135,"offset":1177}}}],"position":{"start":{"line":20,"column":125,"offset":1167},"end":{"line":20,"column":162,"offset":1204}}},{"type":"text","value":" as suggested by ","position":{"start":{"line":20,"column":162,"offset":1204},"end":{"line":20,"column":179,"offset":1221}}},{"type":"element","tagName":"a","properties":{"href":"https://stripe.com/help/ssl"},"children":[{"type":"text","value":"Stripe","position":{"start":{"line":20,"column":180,"offset":1222},"end":{"line":20,"column":186,"offset":1228}}}],"position":{"start":{"line":20,"column":179,"offset":1221},"end":{"line":20,"column":216,"offset":1258}}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":20,"column":216,"offset":1258},"end":{"line":20,"column":326,"offset":1368}}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":20,"column":326,"offset":1368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556}}}],"position":{"start":{"line":21,"column":1,"offset":1369},"end":{"line":21,"column":188,"offset":1556}}},{"type":"text","value":"\n"}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":21,"column":188,"offset":1556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782}}}],"position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177}}}],"position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"var options = {\n// The RSA private key generated above\nkey: fs.readFileSync('./config/rsakey.pem'),\n// The certicates sent to you by the certificate issuer\ncert: fs.readFileSync('./config/main.pem'),\nca: ","position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":32,"column":13,"offset":2427}}},{"type":"text","value":"["},{"type":"text","value":"fs.readFileSync('./config/intermediate.pem')","position":{"start":{"line":32,"column":14,"offset":2428},"end":{"line":32,"column":58,"offset":2472}}},{"type":"text","value":"]"},{"type":"text","value":"\n};","position":{"start":{"line":32,"column":59,"offset":2473},"end":{"line":33,"column":7,"offset":2480}}}],"position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":33,"column":7,"offset":2480}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"https.createServer(options, app).listen(port of your choosing);","position":{"start":{"line":35,"column":5,"offset":2486},"end":{"line":35,"column":68,"offset":2549}}}],"position":{"start":{"line":35,"column":5,"offset":2486},"end":{"line":35,"column":68,"offset":2549}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":35,"column":68,"offset":2549}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":35,"column":68,"offset":2549}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":37,"column":1,"offset":2551},"end":{"line":37,"column":405,"offset":2955}}}],"position":{"start":{"line":37,"column":1,"offset":2551},"end":{"line":37,"column":405,"offset":2955}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":39,"column":5,"offset":2961},"end":{"line":39,"column":333,"offset":3289}}}],"position":{"start":{"line":39,"column":5,"offset":2961},"end":{"line":39,"column":333,"offset":3289}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"server {\nlisten 443 ssl default_server;","position":{"start":{"line":41,"column":5,"offset":3295},"end":{"line":42,"column":38,"offset":3341}}}],"position":{"start":{"line":41,"column":5,"offset":3295},"end":{"line":42,"column":38,"offset":3341}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   ssl","position":{"start":{"line":44,"column":5,"offset":3347},"end":{"line":44,"column":11,"offset":3353}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"certificate      /path/to/your/app/main.pem;\nssl","position":{"start":{"line":44,"column":12,"offset":3354},"end":{"line":45,"column":11,"offset":3409}}}],"position":{"start":{"line":44,"column":11,"offset":3353},"end":{"line":45,"column":12,"offset":3410}}},{"type":"text","value":"certificate_key  /path/to/your/app/domain.pem;","position":{"start":{"line":45,"column":12,"offset":3410},"end":{"line":45,"column":58,"offset":3456}}}],"position":{"start":{"line":44,"column":5,"offset":3347},"end":{"line":45,"column":58,"offset":3456}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"}","position":{"start":{"line":47,"column":5,"offset":3462},"end":{"line":47,"column":6,"offset":3463}}}],"position":{"start":{"line":47,"column":5,"offset":3462},"end":{"line":47,"column":6,"offset":3463}}},{"type":"text","value":"\n"}],"position":{"start":{"line":39,"column":1,"offset":2957},"end":{"line":48,"column":1,"offset":3464}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":49,"column":5,"offset":3469},"end":{"line":49,"column":48,"offset":3512}}},{"type":"element","tagName":"a","properties":{"href":"https://widget.com"},"children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":49,"column":49,"offset":3513},"end":{"line":49,"column":67,"offset":3531}}}],"position":{"start":{"line":49,"column":48,"offset":3512},"end":{"line":49,"column":88,"offset":3552}}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":49,"column":88,"offset":3552},"end":{"line":49,"column":251,"offset":3715}}}],"position":{"start":{"line":49,"column":5,"offset":3469},"end":{"line":49,"column":251,"offset":3715}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"server {\nlisten 80;\nserver_name ","position":{"start":{"line":51,"column":5,"offset":3721},"end":{"line":53,"column":21,"offset":3769}}},{"type":"element","tagName":"a","properties":{"href":"http://widget.com"},"children":[{"type":"text","value":"http://widget.com","position":{"start":{"line":53,"column":21,"offset":3769},"end":{"line":53,"column":38,"offset":3786}}}],"position":{"start":{"line":53,"column":21,"offset":3769},"end":{"line":53,"column":38,"offset":3786}}},{"type":"text","value":";\nreturn 301 ","position":{"start":{"line":53,"column":38,"offset":3786},"end":{"line":54,"column":20,"offset":3807}}},{"type":"element","tagName":"a","properties":{"href":"https://widget.com"},"children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":54,"column":20,"offset":3807},"end":{"line":54,"column":38,"offset":3825}}}],"position":{"start":{"line":54,"column":20,"offset":3807},"end":{"line":54,"column":38,"offset":3825}}},{"type":"text","value":";\n}","position":{"start":{"line":54,"column":38,"offset":3825},"end":{"line":55,"column":6,"offset":3832}}}],"position":{"start":{"line":51,"column":5,"offset":3721},"end":{"line":55,"column":6,"offset":3832}}},{"type":"text","value":"\n"}],"position":{"start":{"line":49,"column":1,"offset":3465},"end":{"line":55,"column":6,"offset":3832}}},{"type":"text","value":"\n"}],"position":{"start":{"line":39,"column":1,"offset":2957},"end":{"line":55,"column":6,"offset":3832}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":57,"column":1,"offset":3834},"end":{"line":57,"column":132,"offset":3965}}}],"position":{"start":{"line":57,"column":1,"offset":3834},"end":{"line":57,"column":132,"offset":3965}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":59,"column":1,"offset":3967}}}},{"id":"transformer-remark-markdown-html-2f630b2a4c1eafe7e9379b3573668d8b--","value":"<p>I recently bought an Acer C270 Chromebook and having undertaken the straightforward process of using Crouton to install Ubuntu/Unity, I found I had to take a few more steps to make the machine usable for Node.js development.</p>\n<p>I thought I'd outline the steps below I took. Clearly some steps may not be applicable depending on the preferred setup.</p>\n<p><strong>Terminal</strong></p>\n<pre><code>sudo apt-get install gnome-terminal\n</code></pre>\n<p><strong>Google Chrome</strong></p>\n<pre><code>wget https://dl.google.com/linux/direct/google-chrome-  stable_current_amd64.deb\n\nsudo dpkg -i google-chrome*.deb\n\nsudo apt-get -f install\n</code></pre>\n<p>You may need to add '--user-data-dir' to the end of the /usr/bin/google-chrome file also so that Chrome runs.</p>\n<p>Also 'python -c \"import gnomekeyring;gnomekeyring.change<em>password</em>sync('login', 'MYPASSWORD', '');\"' can be used to disable the request for a keyring password.</p>\n<p><strong>Node.js</strong></p>\n<pre><code>wget http://nodejs.org/dist/v0.10.22/node-v0.10.22.tar.gz\n\ntar -xvzf node-v0.10.22.tar.gz\n\ncd node-v0.10.22\n\napt-get install build-essential g++\n\n./configure\n\nmake\n\nsudo make install\n\nnode -v\n</code></pre>\n<p><strong>Git</strong></p>\n<pre><code>sudo apt-get install git\n</code></pre>\n<p><strong>Fonts</strong></p>\n<p>The font on Gnome Terminal was bunched up. This was fixed by installing a new font package as follows:</p>\n<pre><code>sudo apt-get install ttf-ubuntu-font-family\n</code></pre>\n<p><strong>Sublime Text 2</strong></p>\n<pre><code>sudo add-apt-repository ppa:webupd8team/sublime-text-2\n\nsudo apt-get update\n\nsudo apt-get install sublime-text\n</code></pre>\n<p><strong>Switching to Chromebook keyboard</strong></p>\n<p>The key mappings in Ubuntu 12.04 are different to the default ones for the Chromebook. I therefore used xmodmap to update/switch around certain keys.</p>\n<pre><code>xmodmap -e \"keycode 94 shift = backslash bar\"\n\nxmodmap -e \"keycode 51 shift = numbersign asciitilde\"\n\nxmodmap -e  \"keycode 11 shift = 2 quotedbl\"\n\nxmodmap -e \"keycode 48 shift = apostrophe at\"\n</code></pre>\n<p>I also added a delete key and made the search key into caps lock with the following:</p>\n<pre><code>xmodmap -e \"keycode 22 shift = BackSpace Delete\"\n\nxmodmap -e \"keycode 133 = Caps_Lock\"\n</code></pre>\n<p>Bear in mind that the above commands are session specific so to persist them you should create a file called '.xinitrc' file in your home directory, with 'xmodmap .Xmodmap' in, then xmodmap -pke > .Xmodmap in same directory to save revised .Xmodmap file in that directory.</p>\n<p>Alternatively, you can just call .xmodmap ~/Xmodmap on each session startup.</p>\n<p>On remapping the Delete key I couldn't get the Alt + Backspace combination to work so used shift instead.</p>\n<p>I also mapped delete in Sublime Text 2 to shift + backspace by editing the existing binding in .sublime-keymap to the following:</p>\n<pre><code>{ \"keys\": [\"shift+backspace\"], \"command\": \"right_delete\" }\n</code></pre>\n<p>I'm very happy with the new Chromebook and the above additions have helped no end to make using Unity/Ubuntu via Crouton a good environment for me to develop in (maybe one day I'll master Vim but not today).</p>"},{"id":"transformer-remark-markdown-html-a377a2c4b088dc29ba99fcdbf396b651--","value":"<p>This is a quick list of the steps I took to get https up and running with a new app I've been working on called <a href=\"https://instok.net\">Instok</a>. Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.</p>\n<p>Without further ado, the steps are as follows (which are provided mainly as an aide memoire):</p>\n<ul>\n<li>\n<p>Using OpenSSL, generate an RSA private key and a certificate signing request using <a href=\"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl\">these instructions</a> (excerpted below).</p>\n<p>openssl genrsa -out domain.com.key 2048</p>\n<p>openssl req -new -key domain.com.key -out domain.csr</p>\n</li>\n</ul>\n<p>If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).</p>\n<pre><code>openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n</code></pre>\n<ul>\n<li>Purchase a security certificate (or get one for <a href=\"https://konklone.com/post/switch-to-https-now-for-free\">free</a>). I used <a href=\"http://www.namecheap.com\">NameCheap</a> as suggested by <a href=\"https://stripe.com/help/ssl\">Stripe</a>. As part of the process, you will need to submit the certificate signing request generated in the above step.</li>\n<li>Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.</li>\n</ul>\n<p>In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.</p>\n<ul>\n<li>\n<p>Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.</p>\n<p>var options = {\n// The RSA private key generated above\nkey: fs.readFileSync('./config/rsakey.pem'),\n// The certicates sent to you by the certificate issuer\ncert: fs.readFileSync('./config/main.pem'),\nca: [fs.readFileSync('./config/intermediate.pem')]\n};</p>\n<p>https.createServer(options, app).listen(port of your choosing);</p>\n</li>\n</ul>\n<p>One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.</p>\n<ul>\n<li>\n<p>Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.</p>\n<p>server {\nlisten 443 ssl default_server;</p>\n<p>   ssl<em>certificate      /path/to/your/app/main.pem;\nssl</em>certificate_key  /path/to/your/app/domain.pem;</p>\n<p>}</p>\n</li>\n<li>\n<p>Once you reload the conf file, requests to <a href=\"https://widget.com\">https://widget.com</a> should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:</p>\n<p>server {\nlisten 80;\nserver_name <a href=\"http://widget.com\">http://widget.com</a>;\nreturn 301 <a href=\"https://widget.com\">https://widget.com</a>;\n}</p>\n</li>\n</ul>\n<p>All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.</p>"},{"id":"transformer-remark-markdown-ast-846657505a165da084fe0c050f9249d7--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Refactoring-from-jQuery-to-Angular.js'\ntitle: 'Refactoring from jQuery to Angular'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":98},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"I recently transferred a site recently written predominantly using jQuery to Angular. The site is ","position":{"start":{"line":7,"column":1,"offset":101},"end":{"line":7,"column":99,"offset":199},"indent":[]}},{"type":"link","title":null,"url":"http://geophoto.grabeh.net","children":[{"type":"text","value":"Geophoto","position":{"start":{"line":7,"column":100,"offset":200},"end":{"line":7,"column":108,"offset":208},"indent":[]}}],"position":{"start":{"line":7,"column":99,"offset":199},"end":{"line":7,"column":137,"offset":237},"indent":[]}},{"type":"text","value":" and simply allows a user to be shown photos of a particular place. The user can click on a map, provide a location or let the browser geolocate them.","position":{"start":{"line":7,"column":137,"offset":237},"end":{"line":7,"column":287,"offset":387},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":101},"end":{"line":7,"column":287,"offset":387},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I am the first to admit that the jQuery I had written previously was a bit of a jumble to say the least, having no real structure. Consequently it would be untruthful to say I was translating finely-tuned jQuery code to Angular and that jQuery was some kind of evil bogeyman to be expunged at all costs! If anything I am the bogeyman for being allowed to write jQuery in such an abominable manner!","position":{"start":{"line":9,"column":1,"offset":389},"end":{"line":9,"column":398,"offset":786},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":389},"end":{"line":9,"column":398,"offset":786},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"jQuery can to an extent be moulded into whatever framework you want (to an extent!) but for a relative beginner the enforced compartmentalisation imposed by Angular has definitely helped me to produce code which I hope is cleaner and more straightforward to extend in the future.","position":{"start":{"line":11,"column":1,"offset":788},"end":{"line":11,"column":280,"offset":1067},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":788},"end":{"line":11,"column":280,"offset":1067},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are a few issues that I faced in transferring but overall it was a relatively smooth experience. Although this is attributable in part to my experience in building another site with related functionality.","position":{"start":{"line":13,"column":1,"offset":1069},"end":{"line":13,"column":211,"offset":1279},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":1069},"end":{"line":13,"column":211,"offset":1279},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Google maps","position":{"start":{"line":15,"column":3,"offset":1283},"end":{"line":15,"column":14,"offset":1294},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":1281},"end":{"line":15,"column":16,"offset":1296},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":1281},"end":{"line":15,"column":16,"offset":1296},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To recreate Google maps in Angular I simply wrapped all the necessary functionality in a Google maps-specific directive. However to limit the amount of functionality that interacted with the map, I had the directive $.broadcast out the necessary information to the parent controller.","position":{"start":{"line":17,"column":1,"offset":1298},"end":{"line":17,"column":284,"offset":1581},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":1298},"end":{"line":17,"column":284,"offset":1581},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"That way the controller could simply take that data and use it, without getting too involved with the map directive:","position":{"start":{"line":19,"column":1,"offset":1583},"end":{"line":19,"column":117,"offset":1699},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":1583},"end":{"line":19,"column":117,"offset":1699},"indent":[]}},{"type":"code","lang":"javascript","value":"    $.$on('coords.change', function(e, l){     \n        flickr.search({ \n            lat: l.lat, \n            lon: l.lon, \n            tags: $.tag, \n            licenses: returnSelectedBoxesFilter($scope.licenses) })\n            .success(function(data){\n                $.arrayOfPhotos = data;\n            })\n            .error(function(err){\n                console.log(err)\n        })\n    })","position":{"start":{"line":20,"column":1,"offset":1700},"end":{"line":34,"column":4,"offset":2111},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"multiple select boxes","position":{"start":{"line":35,"column":3,"offset":2114},"end":{"line":35,"column":24,"offset":2135},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":2112},"end":{"line":35,"column":26,"offset":2137},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":2112},"end":{"line":35,"column":26,"offset":2137},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I use a range of select boxes in the app to allow the user to specify a range of licences applicable to their search. With jQuery I iterated over the boxes and extracted the selected ones to go to the server (Flickr's API takes an array of numbers corresponding to the different licences). The select boxes were then manually referenced in the HTML.","position":{"start":{"line":37,"column":1,"offset":2139},"end":{"line":37,"column":350,"offset":2488},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":2139},"end":{"line":37,"column":350,"offset":2488},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In Angular the process is similar however, I extracted out the data for each licence (name, type) into the related controller, and then used an ng-repeat in the HTML itself. This results in cleaner HTML plus by specifying a model for each box, Angular automatically keeps track of which boxes are updated.","position":{"start":{"line":39,"column":1,"offset":2490},"end":{"line":39,"column":306,"offset":2795},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":2490},"end":{"line":39,"column":306,"offset":2795},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Then to extract the licences, a custom $filter is used in the controller to then return the above-mentioned array. Overall the presence of filters encourages you to switch data manipulation away from the controller and thus helping you reduce the amount of code in your controller (this is a good thing because often controllers can be a dumping ground for everything that's not in your HTML views).","position":{"start":{"line":41,"column":1,"offset":2797},"end":{"line":41,"column":400,"offset":3196},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":2797},"end":{"line":41,"column":400,"offset":3196},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"geocoder services","position":{"start":{"line":43,"column":3,"offset":3200},"end":{"line":43,"column":20,"offset":3217},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":3198},"end":{"line":43,"column":22,"offset":3219},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":3198},"end":{"line":43,"column":22,"offset":3219},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When the user inputs a physical location, the app geocodes this and returns coordinates so a marker can be placed on the map. Conversely to provide a physical address when the user clicks the map, the coordinates are reverse-geocoded.","position":{"start":{"line":45,"column":1,"offset":3221},"end":{"line":45,"column":235,"offset":3455},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":3221},"end":{"line":45,"column":235,"offset":3455},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In both jQuery and Angular I use Google's geocoder service. With the latter however this has been extracted into a separate service which can then be injected into the controller.","position":{"start":{"line":47,"column":1,"offset":3457},"end":{"line":47,"column":180,"offset":3636},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":3457},"end":{"line":47,"column":180,"offset":3636},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As part of creating the service, I became more acquainted with promises and the $q functionality that Angular uses for promises. Although I'd used $http before, as it returns a promise automatically, I hadn't used $q before (although you can still use $q as part of $http for additional validation).","position":{"start":{"line":49,"column":1,"offset":3638},"end":{"line":49,"column":300,"offset":3937},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":3638},"end":{"line":49,"column":300,"offset":3937},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using promises in services basically allows you to create a 'thennable' methods. When the method is called it will have a 'then' method to which you can provide two functions as arguments. The first what will happen in the event of a successful resolution (i.e. exposing the returned data), and the second in the event of a failed call (showing a suitable error message for example).","position":{"start":{"line":51,"column":1,"offset":3939},"end":{"line":51,"column":384,"offset":4322},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":3939},"end":{"line":51,"column":384,"offset":4322},"indent":[]}},{"type":"code","lang":null,"value":".factory('geoCoder', ['$q', function($q){\n         geocoder = new google.maps.Geocoder();\n          geocodeAddress: function(address){\n                 var deferred = $q.defer();\n                 geocoder.geocode({\n                    address: address\n                 }, function(results, status){\n                    if (status == google.maps.GeocoderStatus.OK){\n                        return deferred.resolve(results);\n                    }\n                    return deferred.reject();\n                 })\n                 return deferred.promise;\n            }\n        }\n        return geoCoder;\n    }])","position":{"start":{"line":53,"column":1,"offset":4324},"end":{"line":69,"column":12,"offset":5001},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"geolocation via $window","position":{"start":{"line":71,"column":3,"offset":5005},"end":{"line":71,"column":26,"offset":5028},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":5003},"end":{"line":71,"column":28,"offset":5030},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":5003},"end":{"line":71,"column":28,"offset":5030},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Rather than relying on window for HTML5 geolocation, I found you can use $window for this functionality which provides a suitable namespace rather than a global definition.","position":{"start":{"line":73,"column":1,"offset":5032},"end":{"line":73,"column":173,"offset":5204},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":5032},"end":{"line":73,"column":173,"offset":5204},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"mg-paginator","position":{"start":{"line":75,"column":3,"offset":5208},"end":{"line":75,"column":15,"offset":5220},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":5206},"end":{"line":75,"column":17,"offset":5222},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":5206},"end":{"line":75,"column":17,"offset":5222},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Due to Flickr's terms of service, you can only display up to 30 photos per page. This meant that I had to create code to paginate the array of photo objects returned from the server.","position":{"start":{"line":77,"column":1,"offset":5224},"end":{"line":77,"column":183,"offset":5406},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":5224},"end":{"line":77,"column":183,"offset":5406},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Although I got this done in jQuery, the code in Angular is much cleaner. Again, this may well be because from my study of Angular I have learnt cleaner ways of doing things. In jQuery for example in order to remove a 'Previous' button if at the start of an array, I tested the length of the array then removed the text of the button.","position":{"start":{"line":79,"column":1,"offset":5408},"end":{"line":79,"column":334,"offset":5741},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":5408},"end":{"line":79,"column":334,"offset":5741},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With Angular, I now use a function directly in the HTML linked to the ng-hide directive.","position":{"start":{"line":81,"column":1,"offset":5743},"end":{"line":81,"column":89,"offset":5831},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":5743},"end":{"line":81,"column":89,"offset":5831},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Additionally with Angular I was able to move the paginator specific code into a separate directive which makes the underlying HTML a little cleaner. I am still working out how to make the directive more reusable but having an isolated scope on the directive is certainly a move in the right direction (isolated scope means that your directive is not reliant on any parent scopes and only specific data/functions can be passed in via attributes on your directive (at least that is my understanding!)).","position":{"start":{"line":83,"column":1,"offset":5833},"end":{"line":83,"column":501,"offset":6333},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":5833},"end":{"line":83,"column":501,"offset":6333},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"ng-pluralise","position":{"start":{"line":85,"column":3,"offset":6337},"end":{"line":85,"column":15,"offset":6349},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":6335},"end":{"line":85,"column":17,"offset":6351},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":6335},"end":{"line":85,"column":17,"offset":6351},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Previously I worked directly with the DOM manipulating it dependent on the number of items in an array via conditional statements.","position":{"start":{"line":87,"column":1,"offset":6353},"end":{"line":87,"column":131,"offset":6483},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":6353},"end":{"line":87,"column":131,"offset":6483},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Ng-pluralise in its simplest form is a directive which allows you to map statements for the DOM to the length of an array, in the HTML code itself. This meant I could do away with direct manipulation and makes for a much cleaner way of doing things.","position":{"start":{"line":89,"column":1,"offset":6485},"end":{"line":89,"column":250,"offset":6734},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":6485},"end":{"line":89,"column":250,"offset":6734},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"ng-repeat and automatic updating","position":{"start":{"line":91,"column":3,"offset":6738},"end":{"line":91,"column":35,"offset":6770},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":6736},"end":{"line":91,"column":37,"offset":6772},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":6736},"end":{"line":91,"column":37,"offset":6772},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The app shows a list of places where users have searched for photos. Previously when each location was provided it would be added to the DOM manually.","position":{"start":{"line":93,"column":1,"offset":6774},"end":{"line":93,"column":151,"offset":6924},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":6774},"end":{"line":93,"column":151,"offset":6924},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With Angular I can push the location into a controller-based array and then use ng-repeat in the HTML itself, spitting out an element for each location. Because of the link to the controller the ng-repeat will update automatically when new locations are pushed into the array.","position":{"start":{"line":95,"column":1,"offset":6926},"end":{"line":95,"column":277,"offset":7202},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":6926},"end":{"line":95,"column":277,"offset":7202},"indent":[]}},{"type":"code","lang":null,"value":"geoCoder.reverseGeocode(new google.maps.LatLng(l.lat, l.lon)).then(function(data){\n      $.locations.push(data[0].formatted_address);\n})","position":{"start":{"line":97,"column":1,"offset":7204},"end":{"line":99,"column":7,"offset":7352},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Conclusion","position":{"start":{"line":101,"column":3,"offset":7356},"end":{"line":101,"column":13,"offset":7366},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":7354},"end":{"line":101,"column":15,"offset":7368},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":7354},"end":{"line":101,"column":15,"offset":7368},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The code can be viewed in full ","position":{"start":{"line":103,"column":1,"offset":7370},"end":{"line":103,"column":32,"offset":7401},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/grabbeh/geophoto","children":[{"type":"text","value":"here on Github","position":{"start":{"line":103,"column":33,"offset":7402},"end":{"line":103,"column":47,"offset":7416},"indent":[]}}],"position":{"start":{"line":103,"column":32,"offset":7401},"end":{"line":103,"column":85,"offset":7454},"indent":[]}},{"type":"text","value":". Whilst the overall length may not have changed, the structure has improved dramatically in my view.","position":{"start":{"line":103,"column":85,"offset":7454},"end":{"line":103,"column":186,"offset":7555},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":7370},"end":{"line":103,"column":186,"offset":7555},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":105,"column":1,"offset":7557}}}},{"id":"transformer-remark-markdown-ast-b1eaa845b7af3183eff02b69d06569d5--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/The-journey-from-curious-outsider-to-beginner'\ntitle: 'The Journey from curious outside to beginner'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":116},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Starting something completely new creates a whole load of different feelings. Hesitancy, fear, excitement and definitely for me the sense of being a little overwhelmed by it all (sometimes that's just getting out of bed in the morning).","position":{"start":{"line":7,"column":1,"offset":119},"end":{"line":7,"column":237,"offset":355},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":119},"end":{"line":7,"column":237,"offset":355},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The only way to keep me going is to try to make sure the positive emotions and benefits outweigh the negative feelings that can come with trying your hand at something new.","position":{"start":{"line":9,"column":1,"offset":357},"end":{"line":9,"column":173,"offset":529},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":357},"end":{"line":9,"column":173,"offset":529},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You might say I'm a little late to web development at 31","position":{"start":{"line":11,"column":1,"offset":531},"end":{"line":11,"column":57,"offset":587},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":11,"column":57,"offset":587},"end":{"line":11,"column":59,"offset":589},"indent":[]}},{"type":"text","value":" In some ways, I don't know why it took me so long to begin to ponder the mysteries of the internet, how everything fits together, and how the sites I see everyday are created. But life can have a habit of distracting you from interests, especially when you've got a full-time job.","position":{"start":{"line":11,"column":59,"offset":589},"end":{"line":11,"column":340,"offset":870},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":531},"end":{"line":11,"column":340,"offset":870},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It was only back in 2009 that I picked up a copy of ","position":{"start":{"line":13,"column":1,"offset":872},"end":{"line":13,"column":53,"offset":924},"indent":[]}},{"type":"link","title":null,"url":"http://www.amazon.co.uk/HTML-XHTML-All-Reference-Dummies/dp/0470186275","children":[{"type":"text","value":"HTML, XHTML and CSS for dummies","position":{"start":{"line":13,"column":54,"offset":925},"end":{"line":13,"column":85,"offset":956},"indent":[]}}],"position":{"start":{"line":13,"column":53,"offset":924},"end":{"line":13,"column":158,"offset":1029},"indent":[]}},{"type":"text","value":". I worked through the sections in the title, but when I got to a section on PHP, I got stuck. I wasn't able to work out what was going on with the simple concept of booleans.","position":{"start":{"line":13,"column":158,"offset":1029},"end":{"line":13,"column":333,"offset":1204},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":872},"end":{"line":13,"column":333,"offset":1204},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I think I just wasn't able to get to a place where the positive emotions and excitement at learning outweighed by negative feelings at feeling intellectually inadequate. I just gave up. So although I was pleased that I'd put together a few static sites with html and css, I hadn't made much progress on learning how to create sites with any functionality.","position":{"start":{"line":15,"column":1,"offset":1206},"end":{"line":15,"column":356,"offset":1561},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":1206},"end":{"line":15,"column":356,"offset":1561},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It was a few years later, in 2011 when the interest in learning more about building sites rose above the other clutter in my brain. I bought a copy of Beginning Ruby(","position":{"start":{"line":17,"column":1,"offset":1563},"end":{"line":17,"column":167,"offset":1729},"indent":[]}},{"type":"link","title":null,"url":"http://beginningruby.org/","children":[{"type":"text","value":"http://beginningruby.org/","position":{"start":{"line":17,"column":168,"offset":1730},"end":{"line":17,"column":193,"offset":1755},"indent":[]}}],"position":{"start":{"line":17,"column":167,"offset":1729},"end":{"line":17,"column":221,"offset":1783},"indent":[]}},{"type":"text","value":") by Peter Cooper.","position":{"start":{"line":17,"column":221,"offset":1783},"end":{"line":17,"column":239,"offset":1801},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":1563},"end":{"line":17,"column":239,"offset":1801},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"However, I didn't have anything to hang my learnings on, to say 'I want to do this, so what specifically do I need to learn to do that?' Although I was working my way through the book, it wasn't grabbing my interest as much as I'd hoped.","position":{"start":{"line":19,"column":1,"offset":1803},"end":{"line":19,"column":238,"offset":2040},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":1803},"end":{"line":19,"column":238,"offset":2040},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This was absolutely a failing on my part. At the end of a day at work or even during brief bouts of unemployment, I didn't have the drive to always open the book and keep on reading. Again, the sense of being all a bit overwhelmed took over. 'Where am I going with this? What is the point of it all?' Without any real pre-defined goal, it was too easy for me to get distracted to name but one.","position":{"start":{"line":21,"column":1,"offset":2042},"end":{"line":21,"column":394,"offset":2435},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":2042},"end":{"line":21,"column":394,"offset":2435},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Moving forward again, it was back in early 2012 that my curiosity was piqued when I read about node.js. I think it was probably the lazy person in me that was interested to read about node.js. I was aware of JavaScript on the client being used to supplement html so it was interesting to read about node.js and JS on the server.","position":{"start":{"line":23,"column":1,"offset":2437},"end":{"line":23,"column":329,"offset":2765},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":2437},"end":{"line":23,"column":329,"offset":2765},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"At the same time, ","position":{"start":{"line":25,"column":1,"offset":2767},"end":{"line":25,"column":19,"offset":2785},"indent":[]}},{"type":"link","title":null,"url":"http://codecademy.com","children":[{"type":"text","value":"Code Academy","position":{"start":{"line":25,"column":20,"offset":2786},"end":{"line":25,"column":32,"offset":2798},"indent":[]}}],"position":{"start":{"line":25,"column":19,"offset":2785},"end":{"line":25,"column":56,"offset":2822},"indent":[]}},{"type":"text","value":" was launched with free courses on how to learn JavaScript. The carrot technique worked well for me in terms of the drip-feed of rewards (thoughts of rats in a maze being rewarded for successfully navigating a maze spring to mind).","position":{"start":{"line":25,"column":56,"offset":2822},"end":{"line":25,"column":287,"offset":3053},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":2767},"end":{"line":25,"column":287,"offset":3053},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Still, although I steamed through lots of the courses, for me there still seemed to be a disconnect between the exercises on Code Academy and sites that I used everyday.","position":{"start":{"line":27,"column":1,"offset":3055},"end":{"line":27,"column":170,"offset":3224},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":3055},"end":{"line":27,"column":170,"offset":3224},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"My reading of the sacred texts of JS in the form of ","position":{"start":{"line":29,"column":1,"offset":3226},"end":{"line":29,"column":53,"offset":3278},"indent":[]}},{"type":"link","title":null,"url":"http://www.crockford.com","children":[{"type":"text","value":"Douglas Crockford's JavaScript: The Good Parts","position":{"start":{"line":29,"column":54,"offset":3279},"end":{"line":29,"column":100,"offset":3325},"indent":[]}}],"position":{"start":{"line":29,"column":53,"offset":3278},"end":{"line":29,"column":127,"offset":3352},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":29,"column":127,"offset":3352},"end":{"line":29,"column":132,"offset":3357},"indent":[]}},{"type":"link","title":null,"url":"http://marijnhaverbeke.nl","children":[{"type":"text","value":"Martijn Haverbeke's Eloquent Javascript","position":{"start":{"line":29,"column":133,"offset":3358},"end":{"line":29,"column":172,"offset":3397},"indent":[]}}],"position":{"start":{"line":29,"column":132,"offset":3357},"end":{"line":29,"column":200,"offset":3425},"indent":[]}},{"type":"text","value":" also left me feeling a little overwhelmed and lost on how to actually build something.","position":{"start":{"line":29,"column":200,"offset":3425},"end":{"line":29,"column":287,"offset":3512},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":3226},"end":{"line":29,"column":287,"offset":3512},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I think overall, the excitement of learning was still tempered by the feeling of separation from any tangible feeling of doing anything worthwhile and getting closer to building something worthwhile.","position":{"start":{"line":31,"column":1,"offset":3514},"end":{"line":31,"column":200,"offset":3713},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":3514},"end":{"line":31,"column":200,"offset":3713},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I think the key point that's been missing from the above is the idea that to keep you learning, you need a project to focus on (I appreciate this may be a trite observation!).","position":{"start":{"line":33,"column":1,"offset":3715},"end":{"line":33,"column":176,"offset":3890},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":3715},"end":{"line":33,"column":176,"offset":3890},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Although I'd had ideas over the years, I think they were perhaps on too grand a scale to make me think they were achievable. I'm not talking about manned missions to Mars here, more sites with a complexity too great for me to even begin to figure out where to start!.","position":{"start":{"line":35,"column":1,"offset":3892},"end":{"line":35,"column":268,"offset":4159},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":3892},"end":{"line":35,"column":268,"offset":4159},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So what enabled me to make the leap from the theory of JavaScript to building ","position":{"start":{"line":37,"column":1,"offset":4161},"end":{"line":37,"column":79,"offset":4239},"indent":[]}},{"type":"link","title":null,"url":"http://routebop.grabeh.net","children":[{"type":"text","value":"Routebop","position":{"start":{"line":37,"column":80,"offset":4240},"end":{"line":37,"column":88,"offset":4248},"indent":[]}}],"position":{"start":{"line":37,"column":79,"offset":4239},"end":{"line":37,"column":117,"offset":4277},"indent":[]}},{"type":"text","value":" (admittedly still a work in progress) site or ","position":{"start":{"line":37,"column":117,"offset":4277},"end":{"line":37,"column":164,"offset":4324},"indent":[]}},{"type":"link","title":null,"url":"http://geoflickr.jit.su","children":[{"type":"text","value":"Geoflickr","position":{"start":{"line":37,"column":165,"offset":4325},"end":{"line":37,"column":174,"offset":4334},"indent":[]}}],"position":{"start":{"line":37,"column":164,"offset":4324},"end":{"line":37,"column":200,"offset":4360},"indent":[]}},{"type":"text","value":"? I think it was mainly getting some ideas in the first place. Something which I could actually home in on and work towards achieving, with small steps so I could break down the code that was needed into smaller pieces.","position":{"start":{"line":37,"column":200,"offset":4360},"end":{"line":37,"column":419,"offset":4579},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":4161},"end":{"line":37,"column":419,"offset":4579},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The feeling of actually putting together some basic code and getting it to (eventually) work was incredible, punching-the-air worthy. Of course there was frustration and the negative feelings of sometimes wondering what the hell I was doing even trying to learn, but that was outweighed by the excitement.","position":{"start":{"line":39,"column":1,"offset":4581},"end":{"line":39,"column":306,"offset":4886},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":4581},"end":{"line":39,"column":306,"offset":4886},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"On a basic level, I'd got to a place where the positive emotions and feelings of achievement were far outweighing the negativity.","position":{"start":{"line":41,"column":1,"offset":4888},"end":{"line":41,"column":130,"offset":5017},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":4888},"end":{"line":41,"column":130,"offset":5017},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As to my overall progress, I think it's fair to say that excitement at managing to cobble something together can turn into a feeling of apathy as you realise that what you've created isn't particularly complex. Clearly as a person's understanding of a subject increases, what were once mind-blowing discoveries can turn into simplistic concepts which lose their luster, at least in my case.","position":{"start":{"line":43,"column":1,"offset":5019},"end":{"line":43,"column":391,"offset":5409},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":5019},"end":{"line":43,"column":391,"offset":5409},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, whereas once I was excited at putting together Routebop, now all I see it as is simplistic manipulation of data using a basic CRUD interface.","position":{"start":{"line":45,"column":1,"offset":5411},"end":{"line":45,"column":155,"offset":5565},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":5411},"end":{"line":45,"column":155,"offset":5565},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Whilst there's much to be said for putting together code that just works, I'm fairly certain mine doesn't conform to any design patterns, is not particularly maintainable nor (intentionally at least) makes use of closures, inheritance or with other concepts associated with well-written JavaScript. To an extent, accomplishments that were once exciting, are now just evidence that I haven't been able to grasp the more complex aspects of JavaScript.","position":{"start":{"line":47,"column":1,"offset":5567},"end":{"line":47,"column":450,"offset":6016},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":5567},"end":{"line":47,"column":450,"offset":6016},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Having said that, it's better to be in a position where you're pushing yourself to improve rather than resting on your laurels. To this end, I'm trying to learn more about JS frameworks for the client-side and incorporate libraries such as Caolan's ","position":{"start":{"line":49,"column":1,"offset":6018},"end":{"line":49,"column":250,"offset":6267},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/caolan/async","children":[{"type":"text","value":"async","position":{"start":{"line":49,"column":251,"offset":6268},"end":{"line":49,"column":256,"offset":6273},"indent":[]}}],"position":{"start":{"line":49,"column":250,"offset":6267},"end":{"line":49,"column":290,"offset":6307},"indent":[]}},{"type":"text","value":" on the server-side.","position":{"start":{"line":49,"column":290,"offset":6307},"end":{"line":49,"column":310,"offset":6327},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":6018},"end":{"line":49,"column":310,"offset":6327},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Eventually, maybe some time in the future, I can make the leap from beginner to someone conversant with the more advanced features of JavaScript.","position":{"start":{"line":51,"column":1,"offset":6329},"end":{"line":51,"column":146,"offset":6474},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":6329},"end":{"line":51,"column":146,"offset":6474},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The code for Routebop and Geoflickr can be found ","position":{"start":{"line":53,"column":1,"offset":6476},"end":{"line":53,"column":50,"offset":6525},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/Grabbeh/routebop","children":[{"type":"text","value":"here","position":{"start":{"line":53,"column":51,"offset":6526},"end":{"line":53,"column":55,"offset":6530},"indent":[]}}],"position":{"start":{"line":53,"column":50,"offset":6525},"end":{"line":53,"column":93,"offset":6568},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":53,"column":93,"offset":6568},"end":{"line":53,"column":98,"offset":6573},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/Grabbeh/geoflickr","children":[{"type":"text","value":"here","position":{"start":{"line":53,"column":99,"offset":6574},"end":{"line":53,"column":103,"offset":6578},"indent":[]}}],"position":{"start":{"line":53,"column":98,"offset":6573},"end":{"line":53,"column":142,"offset":6617},"indent":[]}},{"type":"text","value":" for the curious. Pull requests are welcome :)","position":{"start":{"line":53,"column":142,"offset":6617},"end":{"line":53,"column":188,"offset":6663},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":6476},"end":{"line":53,"column":188,"offset":6663},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":55,"column":1,"offset":6665}}}},{"id":"transformer-remark-markdown-html-ast-846657505a165da084fe0c050f9249d7--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I recently transferred a site recently written predominantly using jQuery to Angular. The site is ","position":{"start":{"line":7,"column":1,"offset":101},"end":{"line":7,"column":99,"offset":199}}},{"type":"element","tagName":"a","properties":{"href":"http://geophoto.grabeh.net"},"children":[{"type":"text","value":"Geophoto","position":{"start":{"line":7,"column":100,"offset":200},"end":{"line":7,"column":108,"offset":208}}}],"position":{"start":{"line":7,"column":99,"offset":199},"end":{"line":7,"column":137,"offset":237}}},{"type":"text","value":" and simply allows a user to be shown photos of a particular place. The user can click on a map, provide a location or let the browser geolocate them.","position":{"start":{"line":7,"column":137,"offset":237},"end":{"line":7,"column":287,"offset":387}}}],"position":{"start":{"line":7,"column":1,"offset":101},"end":{"line":7,"column":287,"offset":387}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I am the first to admit that the jQuery I had written previously was a bit of a jumble to say the least, having no real structure. Consequently it would be untruthful to say I was translating finely-tuned jQuery code to Angular and that jQuery was some kind of evil bogeyman to be expunged at all costs! If anything I am the bogeyman for being allowed to write jQuery in such an abominable manner!","position":{"start":{"line":9,"column":1,"offset":389},"end":{"line":9,"column":398,"offset":786}}}],"position":{"start":{"line":9,"column":1,"offset":389},"end":{"line":9,"column":398,"offset":786}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"jQuery can to an extent be moulded into whatever framework you want (to an extent!) but for a relative beginner the enforced compartmentalisation imposed by Angular has definitely helped me to produce code which I hope is cleaner and more straightforward to extend in the future.","position":{"start":{"line":11,"column":1,"offset":788},"end":{"line":11,"column":280,"offset":1067}}}],"position":{"start":{"line":11,"column":1,"offset":788},"end":{"line":11,"column":280,"offset":1067}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are a few issues that I faced in transferring but overall it was a relatively smooth experience. Although this is attributable in part to my experience in building another site with related functionality.","position":{"start":{"line":13,"column":1,"offset":1069},"end":{"line":13,"column":211,"offset":1279}}}],"position":{"start":{"line":13,"column":1,"offset":1069},"end":{"line":13,"column":211,"offset":1279}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Google maps","position":{"start":{"line":15,"column":3,"offset":1283},"end":{"line":15,"column":14,"offset":1294}}}],"position":{"start":{"line":15,"column":1,"offset":1281},"end":{"line":15,"column":16,"offset":1296}}}],"position":{"start":{"line":15,"column":1,"offset":1281},"end":{"line":15,"column":16,"offset":1296}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To recreate Google maps in Angular I simply wrapped all the necessary functionality in a Google maps-specific directive. However to limit the amount of functionality that interacted with the map, I had the directive $.broadcast out the necessary information to the parent controller.","position":{"start":{"line":17,"column":1,"offset":1298},"end":{"line":17,"column":284,"offset":1581}}}],"position":{"start":{"line":17,"column":1,"offset":1298},"end":{"line":17,"column":284,"offset":1581}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"That way the controller could simply take that data and use it, without getting too involved with the map directive:","position":{"start":{"line":19,"column":1,"offset":1583},"end":{"line":19,"column":117,"offset":1699}}}],"position":{"start":{"line":19,"column":1,"offset":1583},"end":{"line":19,"column":117,"offset":1699}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"    $.$on('coords.change', function(e, l){     \n        flickr.search({ \n            lat: l.lat, \n            lon: l.lon, \n            tags: $.tag, \n            licenses: returnSelectedBoxesFilter($scope.licenses) })\n            .success(function(data){\n                $.arrayOfPhotos = data;\n            })\n            .error(function(err){\n                console.log(err)\n        })\n    })\n"}],"position":{"start":{"line":20,"column":1,"offset":1700},"end":{"line":34,"column":4,"offset":2111}}}],"position":{"start":{"line":20,"column":1,"offset":1700},"end":{"line":34,"column":4,"offset":2111}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"multiple select boxes","position":{"start":{"line":35,"column":3,"offset":2114},"end":{"line":35,"column":24,"offset":2135}}}],"position":{"start":{"line":35,"column":1,"offset":2112},"end":{"line":35,"column":26,"offset":2137}}}],"position":{"start":{"line":35,"column":1,"offset":2112},"end":{"line":35,"column":26,"offset":2137}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I use a range of select boxes in the app to allow the user to specify a range of licences applicable to their search. With jQuery I iterated over the boxes and extracted the selected ones to go to the server (Flickr's API takes an array of numbers corresponding to the different licences). The select boxes were then manually referenced in the HTML.","position":{"start":{"line":37,"column":1,"offset":2139},"end":{"line":37,"column":350,"offset":2488}}}],"position":{"start":{"line":37,"column":1,"offset":2139},"end":{"line":37,"column":350,"offset":2488}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Angular the process is similar however, I extracted out the data for each licence (name, type) into the related controller, and then used an ng-repeat in the HTML itself. This results in cleaner HTML plus by specifying a model for each box, Angular automatically keeps track of which boxes are updated.","position":{"start":{"line":39,"column":1,"offset":2490},"end":{"line":39,"column":306,"offset":2795}}}],"position":{"start":{"line":39,"column":1,"offset":2490},"end":{"line":39,"column":306,"offset":2795}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Then to extract the licences, a custom $filter is used in the controller to then return the above-mentioned array. Overall the presence of filters encourages you to switch data manipulation away from the controller and thus helping you reduce the amount of code in your controller (this is a good thing because often controllers can be a dumping ground for everything that's not in your HTML views).","position":{"start":{"line":41,"column":1,"offset":2797},"end":{"line":41,"column":400,"offset":3196}}}],"position":{"start":{"line":41,"column":1,"offset":2797},"end":{"line":41,"column":400,"offset":3196}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"geocoder services","position":{"start":{"line":43,"column":3,"offset":3200},"end":{"line":43,"column":20,"offset":3217}}}],"position":{"start":{"line":43,"column":1,"offset":3198},"end":{"line":43,"column":22,"offset":3219}}}],"position":{"start":{"line":43,"column":1,"offset":3198},"end":{"line":43,"column":22,"offset":3219}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When the user inputs a physical location, the app geocodes this and returns coordinates so a marker can be placed on the map. Conversely to provide a physical address when the user clicks the map, the coordinates are reverse-geocoded.","position":{"start":{"line":45,"column":1,"offset":3221},"end":{"line":45,"column":235,"offset":3455}}}],"position":{"start":{"line":45,"column":1,"offset":3221},"end":{"line":45,"column":235,"offset":3455}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In both jQuery and Angular I use Google's geocoder service. With the latter however this has been extracted into a separate service which can then be injected into the controller.","position":{"start":{"line":47,"column":1,"offset":3457},"end":{"line":47,"column":180,"offset":3636}}}],"position":{"start":{"line":47,"column":1,"offset":3457},"end":{"line":47,"column":180,"offset":3636}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As part of creating the service, I became more acquainted with promises and the $q functionality that Angular uses for promises. Although I'd used $http before, as it returns a promise automatically, I hadn't used $q before (although you can still use $q as part of $http for additional validation).","position":{"start":{"line":49,"column":1,"offset":3638},"end":{"line":49,"column":300,"offset":3937}}}],"position":{"start":{"line":49,"column":1,"offset":3638},"end":{"line":49,"column":300,"offset":3937}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using promises in services basically allows you to create a 'thennable' methods. When the method is called it will have a 'then' method to which you can provide two functions as arguments. The first what will happen in the event of a successful resolution (i.e. exposing the returned data), and the second in the event of a failed call (showing a suitable error message for example).","position":{"start":{"line":51,"column":1,"offset":3939},"end":{"line":51,"column":384,"offset":4322}}}],"position":{"start":{"line":51,"column":1,"offset":3939},"end":{"line":51,"column":384,"offset":4322}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".factory('geoCoder', ['$q', function($q){\n         geocoder = new google.maps.Geocoder();\n          geocodeAddress: function(address){\n                 var deferred = $q.defer();\n                 geocoder.geocode({\n                    address: address\n                 }, function(results, status){\n                    if (status == google.maps.GeocoderStatus.OK){\n                        return deferred.resolve(results);\n                    }\n                    return deferred.reject();\n                 })\n                 return deferred.promise;\n            }\n        }\n        return geoCoder;\n    }])\n"}],"position":{"start":{"line":53,"column":1,"offset":4324},"end":{"line":69,"column":12,"offset":5001}}}],"position":{"start":{"line":53,"column":1,"offset":4324},"end":{"line":69,"column":12,"offset":5001}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"geolocation via $window","position":{"start":{"line":71,"column":3,"offset":5005},"end":{"line":71,"column":26,"offset":5028}}}],"position":{"start":{"line":71,"column":1,"offset":5003},"end":{"line":71,"column":28,"offset":5030}}}],"position":{"start":{"line":71,"column":1,"offset":5003},"end":{"line":71,"column":28,"offset":5030}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Rather than relying on window for HTML5 geolocation, I found you can use $window for this functionality which provides a suitable namespace rather than a global definition.","position":{"start":{"line":73,"column":1,"offset":5032},"end":{"line":73,"column":173,"offset":5204}}}],"position":{"start":{"line":73,"column":1,"offset":5032},"end":{"line":73,"column":173,"offset":5204}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"mg-paginator","position":{"start":{"line":75,"column":3,"offset":5208},"end":{"line":75,"column":15,"offset":5220}}}],"position":{"start":{"line":75,"column":1,"offset":5206},"end":{"line":75,"column":17,"offset":5222}}}],"position":{"start":{"line":75,"column":1,"offset":5206},"end":{"line":75,"column":17,"offset":5222}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Due to Flickr's terms of service, you can only display up to 30 photos per page. This meant that I had to create code to paginate the array of photo objects returned from the server.","position":{"start":{"line":77,"column":1,"offset":5224},"end":{"line":77,"column":183,"offset":5406}}}],"position":{"start":{"line":77,"column":1,"offset":5224},"end":{"line":77,"column":183,"offset":5406}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Although I got this done in jQuery, the code in Angular is much cleaner. Again, this may well be because from my study of Angular I have learnt cleaner ways of doing things. In jQuery for example in order to remove a 'Previous' button if at the start of an array, I tested the length of the array then removed the text of the button.","position":{"start":{"line":79,"column":1,"offset":5408},"end":{"line":79,"column":334,"offset":5741}}}],"position":{"start":{"line":79,"column":1,"offset":5408},"end":{"line":79,"column":334,"offset":5741}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With Angular, I now use a function directly in the HTML linked to the ng-hide directive.","position":{"start":{"line":81,"column":1,"offset":5743},"end":{"line":81,"column":89,"offset":5831}}}],"position":{"start":{"line":81,"column":1,"offset":5743},"end":{"line":81,"column":89,"offset":5831}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Additionally with Angular I was able to move the paginator specific code into a separate directive which makes the underlying HTML a little cleaner. I am still working out how to make the directive more reusable but having an isolated scope on the directive is certainly a move in the right direction (isolated scope means that your directive is not reliant on any parent scopes and only specific data/functions can be passed in via attributes on your directive (at least that is my understanding!)).","position":{"start":{"line":83,"column":1,"offset":5833},"end":{"line":83,"column":501,"offset":6333}}}],"position":{"start":{"line":83,"column":1,"offset":5833},"end":{"line":83,"column":501,"offset":6333}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"ng-pluralise","position":{"start":{"line":85,"column":3,"offset":6337},"end":{"line":85,"column":15,"offset":6349}}}],"position":{"start":{"line":85,"column":1,"offset":6335},"end":{"line":85,"column":17,"offset":6351}}}],"position":{"start":{"line":85,"column":1,"offset":6335},"end":{"line":85,"column":17,"offset":6351}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Previously I worked directly with the DOM manipulating it dependent on the number of items in an array via conditional statements.","position":{"start":{"line":87,"column":1,"offset":6353},"end":{"line":87,"column":131,"offset":6483}}}],"position":{"start":{"line":87,"column":1,"offset":6353},"end":{"line":87,"column":131,"offset":6483}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ng-pluralise in its simplest form is a directive which allows you to map statements for the DOM to the length of an array, in the HTML code itself. This meant I could do away with direct manipulation and makes for a much cleaner way of doing things.","position":{"start":{"line":89,"column":1,"offset":6485},"end":{"line":89,"column":250,"offset":6734}}}],"position":{"start":{"line":89,"column":1,"offset":6485},"end":{"line":89,"column":250,"offset":6734}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"ng-repeat and automatic updating","position":{"start":{"line":91,"column":3,"offset":6738},"end":{"line":91,"column":35,"offset":6770}}}],"position":{"start":{"line":91,"column":1,"offset":6736},"end":{"line":91,"column":37,"offset":6772}}}],"position":{"start":{"line":91,"column":1,"offset":6736},"end":{"line":91,"column":37,"offset":6772}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The app shows a list of places where users have searched for photos. Previously when each location was provided it would be added to the DOM manually.","position":{"start":{"line":93,"column":1,"offset":6774},"end":{"line":93,"column":151,"offset":6924}}}],"position":{"start":{"line":93,"column":1,"offset":6774},"end":{"line":93,"column":151,"offset":6924}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With Angular I can push the location into a controller-based array and then use ng-repeat in the HTML itself, spitting out an element for each location. Because of the link to the controller the ng-repeat will update automatically when new locations are pushed into the array.","position":{"start":{"line":95,"column":1,"offset":6926},"end":{"line":95,"column":277,"offset":7202}}}],"position":{"start":{"line":95,"column":1,"offset":6926},"end":{"line":95,"column":277,"offset":7202}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"geoCoder.reverseGeocode(new google.maps.LatLng(l.lat, l.lon)).then(function(data){\n      $.locations.push(data[0].formatted_address);\n})\n"}],"position":{"start":{"line":97,"column":1,"offset":7204},"end":{"line":99,"column":7,"offset":7352}}}],"position":{"start":{"line":97,"column":1,"offset":7204},"end":{"line":99,"column":7,"offset":7352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Conclusion","position":{"start":{"line":101,"column":3,"offset":7356},"end":{"line":101,"column":13,"offset":7366}}}],"position":{"start":{"line":101,"column":1,"offset":7354},"end":{"line":101,"column":15,"offset":7368}}}],"position":{"start":{"line":101,"column":1,"offset":7354},"end":{"line":101,"column":15,"offset":7368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The code can be viewed in full ","position":{"start":{"line":103,"column":1,"offset":7370},"end":{"line":103,"column":32,"offset":7401}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/grabbeh/geophoto"},"children":[{"type":"text","value":"here on Github","position":{"start":{"line":103,"column":33,"offset":7402},"end":{"line":103,"column":47,"offset":7416}}}],"position":{"start":{"line":103,"column":32,"offset":7401},"end":{"line":103,"column":85,"offset":7454}}},{"type":"text","value":". Whilst the overall length may not have changed, the structure has improved dramatically in my view.","position":{"start":{"line":103,"column":85,"offset":7454},"end":{"line":103,"column":186,"offset":7555}}}],"position":{"start":{"line":103,"column":1,"offset":7370},"end":{"line":103,"column":186,"offset":7555}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":105,"column":1,"offset":7557}}}},{"id":"transformer-remark-markdown-html-ast-b1eaa845b7af3183eff02b69d06569d5--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Starting something completely new creates a whole load of different feelings. Hesitancy, fear, excitement and definitely for me the sense of being a little overwhelmed by it all (sometimes that's just getting out of bed in the morning).","position":{"start":{"line":7,"column":1,"offset":119},"end":{"line":7,"column":237,"offset":355}}}],"position":{"start":{"line":7,"column":1,"offset":119},"end":{"line":7,"column":237,"offset":355}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The only way to keep me going is to try to make sure the positive emotions and benefits outweigh the negative feelings that can come with trying your hand at something new.","position":{"start":{"line":9,"column":1,"offset":357},"end":{"line":9,"column":173,"offset":529}}}],"position":{"start":{"line":9,"column":1,"offset":357},"end":{"line":9,"column":173,"offset":529}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You might say I'm a little late to web development at 31","position":{"start":{"line":11,"column":1,"offset":531},"end":{"line":11,"column":57,"offset":587}}},{"type":"text","value":".","position":{"start":{"line":11,"column":57,"offset":587},"end":{"line":11,"column":59,"offset":589}}},{"type":"text","value":" In some ways, I don't know why it took me so long to begin to ponder the mysteries of the internet, how everything fits together, and how the sites I see everyday are created. But life can have a habit of distracting you from interests, especially when you've got a full-time job.","position":{"start":{"line":11,"column":59,"offset":589},"end":{"line":11,"column":340,"offset":870}}}],"position":{"start":{"line":11,"column":1,"offset":531},"end":{"line":11,"column":340,"offset":870}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It was only back in 2009 that I picked up a copy of ","position":{"start":{"line":13,"column":1,"offset":872},"end":{"line":13,"column":53,"offset":924}}},{"type":"element","tagName":"a","properties":{"href":"http://www.amazon.co.uk/HTML-XHTML-All-Reference-Dummies/dp/0470186275"},"children":[{"type":"text","value":"HTML, XHTML and CSS for dummies","position":{"start":{"line":13,"column":54,"offset":925},"end":{"line":13,"column":85,"offset":956}}}],"position":{"start":{"line":13,"column":53,"offset":924},"end":{"line":13,"column":158,"offset":1029}}},{"type":"text","value":". I worked through the sections in the title, but when I got to a section on PHP, I got stuck. I wasn't able to work out what was going on with the simple concept of booleans.","position":{"start":{"line":13,"column":158,"offset":1029},"end":{"line":13,"column":333,"offset":1204}}}],"position":{"start":{"line":13,"column":1,"offset":872},"end":{"line":13,"column":333,"offset":1204}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I think I just wasn't able to get to a place where the positive emotions and excitement at learning outweighed by negative feelings at feeling intellectually inadequate. I just gave up. So although I was pleased that I'd put together a few static sites with html and css, I hadn't made much progress on learning how to create sites with any functionality.","position":{"start":{"line":15,"column":1,"offset":1206},"end":{"line":15,"column":356,"offset":1561}}}],"position":{"start":{"line":15,"column":1,"offset":1206},"end":{"line":15,"column":356,"offset":1561}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It was a few years later, in 2011 when the interest in learning more about building sites rose above the other clutter in my brain. I bought a copy of Beginning Ruby(","position":{"start":{"line":17,"column":1,"offset":1563},"end":{"line":17,"column":167,"offset":1729}}},{"type":"element","tagName":"a","properties":{"href":"http://beginningruby.org/"},"children":[{"type":"text","value":"http://beginningruby.org/","position":{"start":{"line":17,"column":168,"offset":1730},"end":{"line":17,"column":193,"offset":1755}}}],"position":{"start":{"line":17,"column":167,"offset":1729},"end":{"line":17,"column":221,"offset":1783}}},{"type":"text","value":") by Peter Cooper.","position":{"start":{"line":17,"column":221,"offset":1783},"end":{"line":17,"column":239,"offset":1801}}}],"position":{"start":{"line":17,"column":1,"offset":1563},"end":{"line":17,"column":239,"offset":1801}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However, I didn't have anything to hang my learnings on, to say 'I want to do this, so what specifically do I need to learn to do that?' Although I was working my way through the book, it wasn't grabbing my interest as much as I'd hoped.","position":{"start":{"line":19,"column":1,"offset":1803},"end":{"line":19,"column":238,"offset":2040}}}],"position":{"start":{"line":19,"column":1,"offset":1803},"end":{"line":19,"column":238,"offset":2040}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This was absolutely a failing on my part. At the end of a day at work or even during brief bouts of unemployment, I didn't have the drive to always open the book and keep on reading. Again, the sense of being all a bit overwhelmed took over. 'Where am I going with this? What is the point of it all?' Without any real pre-defined goal, it was too easy for me to get distracted to name but one.","position":{"start":{"line":21,"column":1,"offset":2042},"end":{"line":21,"column":394,"offset":2435}}}],"position":{"start":{"line":21,"column":1,"offset":2042},"end":{"line":21,"column":394,"offset":2435}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Moving forward again, it was back in early 2012 that my curiosity was piqued when I read about node.js. I think it was probably the lazy person in me that was interested to read about node.js. I was aware of JavaScript on the client being used to supplement html so it was interesting to read about node.js and JS on the server.","position":{"start":{"line":23,"column":1,"offset":2437},"end":{"line":23,"column":329,"offset":2765}}}],"position":{"start":{"line":23,"column":1,"offset":2437},"end":{"line":23,"column":329,"offset":2765}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At the same time, ","position":{"start":{"line":25,"column":1,"offset":2767},"end":{"line":25,"column":19,"offset":2785}}},{"type":"element","tagName":"a","properties":{"href":"http://codecademy.com"},"children":[{"type":"text","value":"Code Academy","position":{"start":{"line":25,"column":20,"offset":2786},"end":{"line":25,"column":32,"offset":2798}}}],"position":{"start":{"line":25,"column":19,"offset":2785},"end":{"line":25,"column":56,"offset":2822}}},{"type":"text","value":" was launched with free courses on how to learn JavaScript. The carrot technique worked well for me in terms of the drip-feed of rewards (thoughts of rats in a maze being rewarded for successfully navigating a maze spring to mind).","position":{"start":{"line":25,"column":56,"offset":2822},"end":{"line":25,"column":287,"offset":3053}}}],"position":{"start":{"line":25,"column":1,"offset":2767},"end":{"line":25,"column":287,"offset":3053}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Still, although I steamed through lots of the courses, for me there still seemed to be a disconnect between the exercises on Code Academy and sites that I used everyday.","position":{"start":{"line":27,"column":1,"offset":3055},"end":{"line":27,"column":170,"offset":3224}}}],"position":{"start":{"line":27,"column":1,"offset":3055},"end":{"line":27,"column":170,"offset":3224}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My reading of the sacred texts of JS in the form of ","position":{"start":{"line":29,"column":1,"offset":3226},"end":{"line":29,"column":53,"offset":3278}}},{"type":"element","tagName":"a","properties":{"href":"http://www.crockford.com"},"children":[{"type":"text","value":"Douglas Crockford's JavaScript: The Good Parts","position":{"start":{"line":29,"column":54,"offset":3279},"end":{"line":29,"column":100,"offset":3325}}}],"position":{"start":{"line":29,"column":53,"offset":3278},"end":{"line":29,"column":127,"offset":3352}}},{"type":"text","value":" and ","position":{"start":{"line":29,"column":127,"offset":3352},"end":{"line":29,"column":132,"offset":3357}}},{"type":"element","tagName":"a","properties":{"href":"http://marijnhaverbeke.nl"},"children":[{"type":"text","value":"Martijn Haverbeke's Eloquent Javascript","position":{"start":{"line":29,"column":133,"offset":3358},"end":{"line":29,"column":172,"offset":3397}}}],"position":{"start":{"line":29,"column":132,"offset":3357},"end":{"line":29,"column":200,"offset":3425}}},{"type":"text","value":" also left me feeling a little overwhelmed and lost on how to actually build something.","position":{"start":{"line":29,"column":200,"offset":3425},"end":{"line":29,"column":287,"offset":3512}}}],"position":{"start":{"line":29,"column":1,"offset":3226},"end":{"line":29,"column":287,"offset":3512}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I think overall, the excitement of learning was still tempered by the feeling of separation from any tangible feeling of doing anything worthwhile and getting closer to building something worthwhile.","position":{"start":{"line":31,"column":1,"offset":3514},"end":{"line":31,"column":200,"offset":3713}}}],"position":{"start":{"line":31,"column":1,"offset":3514},"end":{"line":31,"column":200,"offset":3713}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I think the key point that's been missing from the above is the idea that to keep you learning, you need a project to focus on (I appreciate this may be a trite observation!).","position":{"start":{"line":33,"column":1,"offset":3715},"end":{"line":33,"column":176,"offset":3890}}}],"position":{"start":{"line":33,"column":1,"offset":3715},"end":{"line":33,"column":176,"offset":3890}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Although I'd had ideas over the years, I think they were perhaps on too grand a scale to make me think they were achievable. I'm not talking about manned missions to Mars here, more sites with a complexity too great for me to even begin to figure out where to start!.","position":{"start":{"line":35,"column":1,"offset":3892},"end":{"line":35,"column":268,"offset":4159}}}],"position":{"start":{"line":35,"column":1,"offset":3892},"end":{"line":35,"column":268,"offset":4159}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So what enabled me to make the leap from the theory of JavaScript to building ","position":{"start":{"line":37,"column":1,"offset":4161},"end":{"line":37,"column":79,"offset":4239}}},{"type":"element","tagName":"a","properties":{"href":"http://routebop.grabeh.net"},"children":[{"type":"text","value":"Routebop","position":{"start":{"line":37,"column":80,"offset":4240},"end":{"line":37,"column":88,"offset":4248}}}],"position":{"start":{"line":37,"column":79,"offset":4239},"end":{"line":37,"column":117,"offset":4277}}},{"type":"text","value":" (admittedly still a work in progress) site or ","position":{"start":{"line":37,"column":117,"offset":4277},"end":{"line":37,"column":164,"offset":4324}}},{"type":"element","tagName":"a","properties":{"href":"http://geoflickr.jit.su"},"children":[{"type":"text","value":"Geoflickr","position":{"start":{"line":37,"column":165,"offset":4325},"end":{"line":37,"column":174,"offset":4334}}}],"position":{"start":{"line":37,"column":164,"offset":4324},"end":{"line":37,"column":200,"offset":4360}}},{"type":"text","value":"? I think it was mainly getting some ideas in the first place. Something which I could actually home in on and work towards achieving, with small steps so I could break down the code that was needed into smaller pieces.","position":{"start":{"line":37,"column":200,"offset":4360},"end":{"line":37,"column":419,"offset":4579}}}],"position":{"start":{"line":37,"column":1,"offset":4161},"end":{"line":37,"column":419,"offset":4579}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The feeling of actually putting together some basic code and getting it to (eventually) work was incredible, punching-the-air worthy. Of course there was frustration and the negative feelings of sometimes wondering what the hell I was doing even trying to learn, but that was outweighed by the excitement.","position":{"start":{"line":39,"column":1,"offset":4581},"end":{"line":39,"column":306,"offset":4886}}}],"position":{"start":{"line":39,"column":1,"offset":4581},"end":{"line":39,"column":306,"offset":4886}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"On a basic level, I'd got to a place where the positive emotions and feelings of achievement were far outweighing the negativity.","position":{"start":{"line":41,"column":1,"offset":4888},"end":{"line":41,"column":130,"offset":5017}}}],"position":{"start":{"line":41,"column":1,"offset":4888},"end":{"line":41,"column":130,"offset":5017}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As to my overall progress, I think it's fair to say that excitement at managing to cobble something together can turn into a feeling of apathy as you realise that what you've created isn't particularly complex. Clearly as a person's understanding of a subject increases, what were once mind-blowing discoveries can turn into simplistic concepts which lose their luster, at least in my case.","position":{"start":{"line":43,"column":1,"offset":5019},"end":{"line":43,"column":391,"offset":5409}}}],"position":{"start":{"line":43,"column":1,"offset":5019},"end":{"line":43,"column":391,"offset":5409}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, whereas once I was excited at putting together Routebop, now all I see it as is simplistic manipulation of data using a basic CRUD interface.","position":{"start":{"line":45,"column":1,"offset":5411},"end":{"line":45,"column":155,"offset":5565}}}],"position":{"start":{"line":45,"column":1,"offset":5411},"end":{"line":45,"column":155,"offset":5565}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Whilst there's much to be said for putting together code that just works, I'm fairly certain mine doesn't conform to any design patterns, is not particularly maintainable nor (intentionally at least) makes use of closures, inheritance or with other concepts associated with well-written JavaScript. To an extent, accomplishments that were once exciting, are now just evidence that I haven't been able to grasp the more complex aspects of JavaScript.","position":{"start":{"line":47,"column":1,"offset":5567},"end":{"line":47,"column":450,"offset":6016}}}],"position":{"start":{"line":47,"column":1,"offset":5567},"end":{"line":47,"column":450,"offset":6016}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Having said that, it's better to be in a position where you're pushing yourself to improve rather than resting on your laurels. To this end, I'm trying to learn more about JS frameworks for the client-side and incorporate libraries such as Caolan's ","position":{"start":{"line":49,"column":1,"offset":6018},"end":{"line":49,"column":250,"offset":6267}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/caolan/async"},"children":[{"type":"text","value":"async","position":{"start":{"line":49,"column":251,"offset":6268},"end":{"line":49,"column":256,"offset":6273}}}],"position":{"start":{"line":49,"column":250,"offset":6267},"end":{"line":49,"column":290,"offset":6307}}},{"type":"text","value":" on the server-side.","position":{"start":{"line":49,"column":290,"offset":6307},"end":{"line":49,"column":310,"offset":6327}}}],"position":{"start":{"line":49,"column":1,"offset":6018},"end":{"line":49,"column":310,"offset":6327}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Eventually, maybe some time in the future, I can make the leap from beginner to someone conversant with the more advanced features of JavaScript.","position":{"start":{"line":51,"column":1,"offset":6329},"end":{"line":51,"column":146,"offset":6474}}}],"position":{"start":{"line":51,"column":1,"offset":6329},"end":{"line":51,"column":146,"offset":6474}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The code for Routebop and Geoflickr can be found ","position":{"start":{"line":53,"column":1,"offset":6476},"end":{"line":53,"column":50,"offset":6525}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/Grabbeh/routebop"},"children":[{"type":"text","value":"here","position":{"start":{"line":53,"column":51,"offset":6526},"end":{"line":53,"column":55,"offset":6530}}}],"position":{"start":{"line":53,"column":50,"offset":6525},"end":{"line":53,"column":93,"offset":6568}}},{"type":"text","value":" and ","position":{"start":{"line":53,"column":93,"offset":6568},"end":{"line":53,"column":98,"offset":6573}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/Grabbeh/geoflickr"},"children":[{"type":"text","value":"here","position":{"start":{"line":53,"column":99,"offset":6574},"end":{"line":53,"column":103,"offset":6578}}}],"position":{"start":{"line":53,"column":98,"offset":6573},"end":{"line":53,"column":142,"offset":6617}}},{"type":"text","value":" for the curious. Pull requests are welcome :)","position":{"start":{"line":53,"column":142,"offset":6617},"end":{"line":53,"column":188,"offset":6663}}}],"position":{"start":{"line":53,"column":1,"offset":6476},"end":{"line":53,"column":188,"offset":6663}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":55,"column":1,"offset":6665}}}},{"id":"transformer-remark-markdown-html-846657505a165da084fe0c050f9249d7--","value":"<p>I recently transferred a site recently written predominantly using jQuery to Angular. The site is <a href=\"http://geophoto.grabeh.net\">Geophoto</a> and simply allows a user to be shown photos of a particular place. The user can click on a map, provide a location or let the browser geolocate them.</p>\n<p>I am the first to admit that the jQuery I had written previously was a bit of a jumble to say the least, having no real structure. Consequently it would be untruthful to say I was translating finely-tuned jQuery code to Angular and that jQuery was some kind of evil bogeyman to be expunged at all costs! If anything I am the bogeyman for being allowed to write jQuery in such an abominable manner!</p>\n<p>jQuery can to an extent be moulded into whatever framework you want (to an extent!) but for a relative beginner the enforced compartmentalisation imposed by Angular has definitely helped me to produce code which I hope is cleaner and more straightforward to extend in the future.</p>\n<p>There are a few issues that I faced in transferring but overall it was a relatively smooth experience. Although this is attributable in part to my experience in building another site with related functionality.</p>\n<p><strong>Google maps</strong></p>\n<p>To recreate Google maps in Angular I simply wrapped all the necessary functionality in a Google maps-specific directive. However to limit the amount of functionality that interacted with the map, I had the directive $.broadcast out the necessary information to the parent controller.</p>\n<p>That way the controller could simply take that data and use it, without getting too involved with the map directive:</p>\n<pre><code class=\"language-javascript\">    $.$on('coords.change', function(e, l){     \n        flickr.search({ \n            lat: l.lat, \n            lon: l.lon, \n            tags: $.tag, \n            licenses: returnSelectedBoxesFilter($scope.licenses) })\n            .success(function(data){\n                $.arrayOfPhotos = data;\n            })\n            .error(function(err){\n                console.log(err)\n        })\n    })\n</code></pre>\n<p><strong>multiple select boxes</strong></p>\n<p>I use a range of select boxes in the app to allow the user to specify a range of licences applicable to their search. With jQuery I iterated over the boxes and extracted the selected ones to go to the server (Flickr's API takes an array of numbers corresponding to the different licences). The select boxes were then manually referenced in the HTML.</p>\n<p>In Angular the process is similar however, I extracted out the data for each licence (name, type) into the related controller, and then used an ng-repeat in the HTML itself. This results in cleaner HTML plus by specifying a model for each box, Angular automatically keeps track of which boxes are updated.</p>\n<p>Then to extract the licences, a custom $filter is used in the controller to then return the above-mentioned array. Overall the presence of filters encourages you to switch data manipulation away from the controller and thus helping you reduce the amount of code in your controller (this is a good thing because often controllers can be a dumping ground for everything that's not in your HTML views).</p>\n<p><strong>geocoder services</strong></p>\n<p>When the user inputs a physical location, the app geocodes this and returns coordinates so a marker can be placed on the map. Conversely to provide a physical address when the user clicks the map, the coordinates are reverse-geocoded.</p>\n<p>In both jQuery and Angular I use Google's geocoder service. With the latter however this has been extracted into a separate service which can then be injected into the controller.</p>\n<p>As part of creating the service, I became more acquainted with promises and the $q functionality that Angular uses for promises. Although I'd used $http before, as it returns a promise automatically, I hadn't used $q before (although you can still use $q as part of $http for additional validation).</p>\n<p>Using promises in services basically allows you to create a 'thennable' methods. When the method is called it will have a 'then' method to which you can provide two functions as arguments. The first what will happen in the event of a successful resolution (i.e. exposing the returned data), and the second in the event of a failed call (showing a suitable error message for example).</p>\n<pre><code>.factory('geoCoder', ['$q', function($q){\n         geocoder = new google.maps.Geocoder();\n          geocodeAddress: function(address){\n                 var deferred = $q.defer();\n                 geocoder.geocode({\n                    address: address\n                 }, function(results, status){\n                    if (status == google.maps.GeocoderStatus.OK){\n                        return deferred.resolve(results);\n                    }\n                    return deferred.reject();\n                 })\n                 return deferred.promise;\n            }\n        }\n        return geoCoder;\n    }])\n</code></pre>\n<p><strong>geolocation via $window</strong></p>\n<p>Rather than relying on window for HTML5 geolocation, I found you can use $window for this functionality which provides a suitable namespace rather than a global definition.</p>\n<p><strong>mg-paginator</strong></p>\n<p>Due to Flickr's terms of service, you can only display up to 30 photos per page. This meant that I had to create code to paginate the array of photo objects returned from the server.</p>\n<p>Although I got this done in jQuery, the code in Angular is much cleaner. Again, this may well be because from my study of Angular I have learnt cleaner ways of doing things. In jQuery for example in order to remove a 'Previous' button if at the start of an array, I tested the length of the array then removed the text of the button.</p>\n<p>With Angular, I now use a function directly in the HTML linked to the ng-hide directive.</p>\n<p>Additionally with Angular I was able to move the paginator specific code into a separate directive which makes the underlying HTML a little cleaner. I am still working out how to make the directive more reusable but having an isolated scope on the directive is certainly a move in the right direction (isolated scope means that your directive is not reliant on any parent scopes and only specific data/functions can be passed in via attributes on your directive (at least that is my understanding!)).</p>\n<p><strong>ng-pluralise</strong></p>\n<p>Previously I worked directly with the DOM manipulating it dependent on the number of items in an array via conditional statements.</p>\n<p>Ng-pluralise in its simplest form is a directive which allows you to map statements for the DOM to the length of an array, in the HTML code itself. This meant I could do away with direct manipulation and makes for a much cleaner way of doing things.</p>\n<p><strong>ng-repeat and automatic updating</strong></p>\n<p>The app shows a list of places where users have searched for photos. Previously when each location was provided it would be added to the DOM manually.</p>\n<p>With Angular I can push the location into a controller-based array and then use ng-repeat in the HTML itself, spitting out an element for each location. Because of the link to the controller the ng-repeat will update automatically when new locations are pushed into the array.</p>\n<pre><code>geoCoder.reverseGeocode(new google.maps.LatLng(l.lat, l.lon)).then(function(data){\n      $.locations.push(data[0].formatted_address);\n})\n</code></pre>\n<p><strong>Conclusion</strong></p>\n<p>The code can be viewed in full <a href=\"https://github.com/grabbeh/geophoto\">here on Github</a>. Whilst the overall length may not have changed, the structure has improved dramatically in my view.</p>"},{"id":"transformer-remark-markdown-html-b1eaa845b7af3183eff02b69d06569d5--","value":"<p>Starting something completely new creates a whole load of different feelings. Hesitancy, fear, excitement and definitely for me the sense of being a little overwhelmed by it all (sometimes that's just getting out of bed in the morning).</p>\n<p>The only way to keep me going is to try to make sure the positive emotions and benefits outweigh the negative feelings that can come with trying your hand at something new.</p>\n<p>You might say I'm a little late to web development at 31. In some ways, I don't know why it took me so long to begin to ponder the mysteries of the internet, how everything fits together, and how the sites I see everyday are created. But life can have a habit of distracting you from interests, especially when you've got a full-time job.</p>\n<p>It was only back in 2009 that I picked up a copy of <a href=\"http://www.amazon.co.uk/HTML-XHTML-All-Reference-Dummies/dp/0470186275\">HTML, XHTML and CSS for dummies</a>. I worked through the sections in the title, but when I got to a section on PHP, I got stuck. I wasn't able to work out what was going on with the simple concept of booleans.</p>\n<p>I think I just wasn't able to get to a place where the positive emotions and excitement at learning outweighed by negative feelings at feeling intellectually inadequate. I just gave up. So although I was pleased that I'd put together a few static sites with html and css, I hadn't made much progress on learning how to create sites with any functionality.</p>\n<p>It was a few years later, in 2011 when the interest in learning more about building sites rose above the other clutter in my brain. I bought a copy of Beginning Ruby(<a href=\"http://beginningruby.org/\">http://beginningruby.org/</a>) by Peter Cooper.</p>\n<p>However, I didn't have anything to hang my learnings on, to say 'I want to do this, so what specifically do I need to learn to do that?' Although I was working my way through the book, it wasn't grabbing my interest as much as I'd hoped.</p>\n<p>This was absolutely a failing on my part. At the end of a day at work or even during brief bouts of unemployment, I didn't have the drive to always open the book and keep on reading. Again, the sense of being all a bit overwhelmed took over. 'Where am I going with this? What is the point of it all?' Without any real pre-defined goal, it was too easy for me to get distracted to name but one.</p>\n<p>Moving forward again, it was back in early 2012 that my curiosity was piqued when I read about node.js. I think it was probably the lazy person in me that was interested to read about node.js. I was aware of JavaScript on the client being used to supplement html so it was interesting to read about node.js and JS on the server.</p>\n<p>At the same time, <a href=\"http://codecademy.com\">Code Academy</a> was launched with free courses on how to learn JavaScript. The carrot technique worked well for me in terms of the drip-feed of rewards (thoughts of rats in a maze being rewarded for successfully navigating a maze spring to mind).</p>\n<p>Still, although I steamed through lots of the courses, for me there still seemed to be a disconnect between the exercises on Code Academy and sites that I used everyday.</p>\n<p>My reading of the sacred texts of JS in the form of <a href=\"http://www.crockford.com\">Douglas Crockford's JavaScript: The Good Parts</a> and <a href=\"http://marijnhaverbeke.nl\">Martijn Haverbeke's Eloquent Javascript</a> also left me feeling a little overwhelmed and lost on how to actually build something.</p>\n<p>I think overall, the excitement of learning was still tempered by the feeling of separation from any tangible feeling of doing anything worthwhile and getting closer to building something worthwhile.</p>\n<p>I think the key point that's been missing from the above is the idea that to keep you learning, you need a project to focus on (I appreciate this may be a trite observation!).</p>\n<p>Although I'd had ideas over the years, I think they were perhaps on too grand a scale to make me think they were achievable. I'm not talking about manned missions to Mars here, more sites with a complexity too great for me to even begin to figure out where to start!.</p>\n<p>So what enabled me to make the leap from the theory of JavaScript to building <a href=\"http://routebop.grabeh.net\">Routebop</a> (admittedly still a work in progress) site or <a href=\"http://geoflickr.jit.su\">Geoflickr</a>? I think it was mainly getting some ideas in the first place. Something which I could actually home in on and work towards achieving, with small steps so I could break down the code that was needed into smaller pieces.</p>\n<p>The feeling of actually putting together some basic code and getting it to (eventually) work was incredible, punching-the-air worthy. Of course there was frustration and the negative feelings of sometimes wondering what the hell I was doing even trying to learn, but that was outweighed by the excitement.</p>\n<p>On a basic level, I'd got to a place where the positive emotions and feelings of achievement were far outweighing the negativity.</p>\n<p>As to my overall progress, I think it's fair to say that excitement at managing to cobble something together can turn into a feeling of apathy as you realise that what you've created isn't particularly complex. Clearly as a person's understanding of a subject increases, what were once mind-blowing discoveries can turn into simplistic concepts which lose their luster, at least in my case.</p>\n<p>For example, whereas once I was excited at putting together Routebop, now all I see it as is simplistic manipulation of data using a basic CRUD interface.</p>\n<p>Whilst there's much to be said for putting together code that just works, I'm fairly certain mine doesn't conform to any design patterns, is not particularly maintainable nor (intentionally at least) makes use of closures, inheritance or with other concepts associated with well-written JavaScript. To an extent, accomplishments that were once exciting, are now just evidence that I haven't been able to grasp the more complex aspects of JavaScript.</p>\n<p>Having said that, it's better to be in a position where you're pushing yourself to improve rather than resting on your laurels. To this end, I'm trying to learn more about JS frameworks for the client-side and incorporate libraries such as Caolan's <a href=\"https://github.com/caolan/async\">async</a> on the server-side.</p>\n<p>Eventually, maybe some time in the future, I can make the leap from beginner to someone conversant with the more advanced features of JavaScript.</p>\n<p>The code for Routebop and Geoflickr can be found <a href=\"https://github.com/Grabbeh/routebop\">here</a> and <a href=\"https://github.com/Grabbeh/geoflickr\">here</a> for the curious. Pull requests are welcome :)</p>"},{"id":"transformer-remark-markdown-ast-a7c7a1807b3e608a7c5062213699b3ab--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Automated-publishing-on-a-VPS-using-Draftin-webhooks-and-Node.js'\ntitle: 'Automated publishing on a VPS using Drafting webhooks and Node.js'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":156},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Draftin.com is a great tool I've been using lately to do some writing. Whilst I'm not utilising many of its more advanced features, the care and attention that its creator has put into the product shines through.","position":{"start":{"line":6,"column":1,"offset":158},"end":{"line":6,"column":213,"offset":370},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":158},"end":{"line":6,"column":213,"offset":370},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Once I'd written something my previous process of getting onto this site was to copy and paste the contents into a template file within the VPS I'm using to host this blog, and then name it appropriately. Although this isn't a particularly burdensome process, I thought there may be a simpler process.","position":{"start":{"line":8,"column":1,"offset":372},"end":{"line":8,"column":302,"offset":673},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":372},"end":{"line":8,"column":302,"offset":673},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Having a gander at Draftin I saw reference to ","position":{"start":{"line":10,"column":1,"offset":675},"end":{"line":10,"column":47,"offset":721},"indent":[]}},{"type":"link","title":null,"url":"https://draftin.com/features#webhooks","children":[{"type":"text","value":"Webhooks","position":{"start":{"line":10,"column":48,"offset":722},"end":{"line":10,"column":56,"offset":730},"indent":[]}}],"position":{"start":{"line":10,"column":47,"offset":721},"end":{"line":10,"column":96,"offset":770},"indent":[]}},{"type":"text","value":". Webhooks give you the ability to specify a url to which the content will be published using a simple POST request.","position":{"start":{"line":10,"column":96,"offset":770},"end":{"line":10,"column":212,"offset":886},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":675},"end":{"line":10,"column":212,"offset":886},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I thought it would be interesting to try to integrate this into the VPS so you could post data and automatically create a html file in the folder from which the html files making up this blog are served from via Nginx.","position":{"start":{"line":12,"column":1,"offset":888},"end":{"line":12,"column":219,"offset":1106},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":888},"end":{"line":12,"column":219,"offset":1106},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I initially created a basic Express server to test the data that was being sent. After some issues with accessing the data, I realised I need to parse the JSON to make it accessible.","position":{"start":{"line":14,"column":1,"offset":1108},"end":{"line":14,"column":183,"offset":1290},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":1108},"end":{"line":14,"column":183,"offset":1290},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Once that was done, I wrote the 'content_html' to a file in the relevant folder. However the issue was obviously that the only content being posted was the blog post itself. In addition to the content, it also needed surrounding container elements and the head element to specify css etc.","position":{"start":{"line":16,"column":1,"offset":1292},"end":{"line":16,"column":289,"offset":1580},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1292},"end":{"line":16,"column":289,"offset":1580},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To remedy this, I created a template.html file which is then read in when post data is received. Using the excellent ","position":{"start":{"line":18,"column":1,"offset":1582},"end":{"line":18,"column":118,"offset":1699},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/MatthewMueller/cheerio","children":[{"type":"text","value":"Cheerio","position":{"start":{"line":18,"column":119,"offset":1700},"end":{"line":18,"column":126,"offset":1707},"indent":[]}}],"position":{"start":{"line":18,"column":118,"offset":1699},"end":{"line":18,"column":170,"offset":1751},"indent":[]}},{"type":"text","value":" I then load in the template html and then manipulate it using simple jQuery-like functionality to add in a title and the content from the POST data from Draftin.","position":{"start":{"line":18,"column":170,"offset":1751},"end":{"line":18,"column":332,"offset":1913},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1582},"end":{"line":18,"column":332,"offset":1913},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Once completed, the amended file is then saved as a new file with the stated title then accessible at blog.grabeh.net/","position":{"start":{"line":20,"column":1,"offset":1915},"end":{"line":20,"column":119,"offset":2033},"indent":[]}},{"type":"linkReference","identifier":"title","referenceType":"shortcut","children":[{"type":"text","value":"title","position":{"start":{"line":20,"column":120,"offset":2034},"end":{"line":20,"column":125,"offset":2039},"indent":[]}}],"position":{"start":{"line":20,"column":119,"offset":2033},"end":{"line":20,"column":126,"offset":2040},"indent":[]}},{"type":"text","value":". Draftin also allows you to provide a location url in your response which is then captured by Draftin which is then displayed by your post.","position":{"start":{"line":20,"column":126,"offset":2040},"end":{"line":20,"column":266,"offset":2180},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1915},"end":{"line":20,"column":266,"offset":2180},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The whole basic Express server is below for the curious. As the documentation on Draftin notes, the URL used to post data to should be sufficiently obscure.","position":{"start":{"line":22,"column":1,"offset":2182},"end":{"line":22,"column":157,"offset":2338},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":2182},"end":{"line":22,"column":157,"offset":2338},"indent":[]}},{"type":"code","lang":null,"value":"  var express = require('express'),\n    fs = require('fs'),\n    cheerio = require('cheerio'),\n    app = express()\n  app.configure(function () {\n    app.use(express.bodyParser())\n    app.use(app.router)\n  })\n  app.post('/', function (req, res) {\n    var payload = req.body.payload\n    var parsedResponse = JSON.parse(payload)\n    var title = parsedResponse.name\n    var htitle = title.replace(/\\s+/g, '-').toLowerCase()\n    var parsedhtml = parsedResponse.content_html\n    fs.readFile('/usr/local/nginx/html/blog/template.html', function (err, data) {\n      $ = cheerio.load(data)\n      $('h3').text(title)\n      $('#textbody').html(parsedhtml)\n      var updatedhtml = $.html()\n      fs.writeFile(\n        '/usr/local/nginx/html/blog/' + htitle + '.html',\n        updatedhtml,\n        function (err) {\n          if (!err) {\n            res.set('location', 'http://blog.grabeh.net/' + htitle)\n            res.send()\n          }\n        }\n      )\n    })\n  })\n  app.listen(3010)","position":{"start":{"line":25,"column":1,"offset":2341},"end":{"line":56,"column":23,"offset":3443},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"I do need to resolve a few minor points like inserting a title in the head and also updating the index.html of the blog, but I think the above system creates a nice flow for automatically posting content to the blog from Draftin.","position":{"start":{"line":58,"column":1,"offset":3445},"end":{"line":58,"column":230,"offset":3674},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":3445},"end":{"line":58,"column":230,"offset":3674},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The only issue now of course is to keep focused on writing in the first place.","position":{"start":{"line":60,"column":1,"offset":3676},"end":{"line":60,"column":79,"offset":3754},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":3676},"end":{"line":60,"column":79,"offset":3754},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":62,"column":1,"offset":3756}}}},{"id":"transformer-remark-markdown-ast-0e2f1403937682d89b87b595dd00a4f9--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/The-myth-of-mandatory-trade-mark-enforcement'\ntitle: 'The myth of mandatory trade mark enforcement'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":115},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Trade mark disputes pop up all the time. Often it's a David v Goliath affair with a large incumbent with an equally large legal budget seeking to squish a plucky start-up.","position":{"start":{"line":6,"column":1,"offset":117},"end":{"line":6,"column":172,"offset":288},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":117},"end":{"line":6,"column":172,"offset":288},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In some cases, the Goliath can attempt to use its registered trade marks to oppress an upstart providing goods or services in an area completely unrelated to it.","position":{"start":{"line":8,"column":1,"offset":290},"end":{"line":8,"column":162,"offset":451},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":290},"end":{"line":8,"column":162,"offset":451},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Some may see this kind of action as completely unreasonable on the basis that there couldn't conceivably be any confusion or intention to take advantage of the reputation of the incumbent.","position":{"start":{"line":10,"column":1,"offset":453},"end":{"line":10,"column":189,"offset":641},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":453},"end":{"line":10,"column":189,"offset":641},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Others might comment that a trade mark owner is required to enforce their trade marks otherwise risk losing the ability to enforce them in the future or as is sometimes mooted lose the trade mark altogether.","position":{"start":{"line":12,"column":1,"offset":643},"end":{"line":12,"column":208,"offset":850},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":643},"end":{"line":12,"column":208,"offset":850},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first thing to say is that a trade mark owner is not going to lose their trade mark through a failure to enforce their trade mark right.","position":{"start":{"line":14,"column":1,"offset":852},"end":{"line":14,"column":141,"offset":992},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":852},"end":{"line":14,"column":141,"offset":992},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Failure to enforce may result in the trade mark becoming diluted and generic, in which case a third party may seek to invalidate the registration, but this process would never happen automatically.","position":{"start":{"line":16,"column":1,"offset":994},"end":{"line":16,"column":198,"offset":1191},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":994},"end":{"line":16,"column":198,"offset":1191},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Secondly, a trade mark owner will not lose their ability to enforce their trade mark rights simply because they do not enforce all potential misuses. This is because all potential misuses are not the same and a perceived infringement does not always equate to a cast-iron case against the alleged infringer.","position":{"start":{"line":18,"column":1,"offset":1193},"end":{"line":18,"column":308,"offset":1500},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1193},"end":{"line":18,"column":308,"offset":1500},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Some examples may be useful.","position":{"start":{"line":20,"column":1,"offset":1502},"end":{"line":20,"column":29,"offset":1530},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1502},"end":{"line":20,"column":29,"offset":1530},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"emphasis","children":[{"type":"text","value":"Example A","position":{"start":{"line":22,"column":4,"offset":1535},"end":{"line":22,"column":13,"offset":1544},"indent":[]}}],"position":{"start":{"line":22,"column":3,"offset":1534},"end":{"line":22,"column":14,"offset":1545},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1532},"end":{"line":22,"column":16,"offset":1547},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1532},"end":{"line":22,"column":16,"offset":1547},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Behemoth Enterprises runs a hugely successful business manufacturing hardware. Behemoth becomes aware of consulting company using the 'Bohomoth' mark providing advice to companies on hardware.","position":{"start":{"line":24,"column":3,"offset":1551},"end":{"line":24,"column":195,"offset":1743},"indent":[]}}],"position":{"start":{"line":24,"column":3,"offset":1551},"end":{"line":24,"column":195,"offset":1743},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":1549},"end":{"line":24,"column":195,"offset":1743},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"emphasis","children":[{"type":"text","value":"Example B","position":{"start":{"line":26,"column":4,"offset":1748},"end":{"line":26,"column":13,"offset":1757},"indent":[]}}],"position":{"start":{"line":26,"column":3,"offset":1747},"end":{"line":26,"column":14,"offset":1758},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1745},"end":{"line":26,"column":16,"offset":1760},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1745},"end":{"line":26,"column":16,"offset":1760},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Behemoth again becomes aware of a company using the Bohomoth mark but this time in the field of kindergarten services","position":{"start":{"line":28,"column":3,"offset":1764},"end":{"line":28,"column":120,"offset":1881},"indent":[]}}],"position":{"start":{"line":28,"column":3,"offset":1764},"end":{"line":28,"column":120,"offset":1881},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1762},"end":{"line":28,"column":120,"offset":1881},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In example A, action would be entirely justified in taking action even though Behemoth is not in the field of consulting services directly but there is a clear likelihood of confusion arising in the minds of consumers as to whether the consulting firm is linked to the goods supplier.","position":{"start":{"line":30,"column":1,"offset":1883},"end":{"line":30,"column":285,"offset":2167},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1883},"end":{"line":30,"column":285,"offset":2167},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It's also worth remembering that a trade mark owner is also not restricted from taking action for just identical marks but also for similar marks (hence the Behemoth vs Bohomoth example).","position":{"start":{"line":32,"column":1,"offset":2169},"end":{"line":32,"column":188,"offset":2356},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":2169},"end":{"line":32,"column":188,"offset":2356},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In example B, the grounds for taking action would be far more limited. It is not so clear cut however at its heart, there is a very low chance that a potential customer of a kindergarten would consider that there is a connection between the kindergarten and the hardware manufacturer","position":{"start":{"line":34,"column":1,"offset":2358},"end":{"line":34,"column":284,"offset":2641},"indent":[]}},{"type":"html","value":"<sup id=\"fnref1\">","position":{"start":{"line":34,"column":284,"offset":2641},"end":{"line":34,"column":301,"offset":2658},"indent":[]}},{"type":"link","title":null,"url":"#fn1","children":[{"type":"text","value":"1","position":{"start":{"line":34,"column":302,"offset":2659},"end":{"line":34,"column":303,"offset":2660},"indent":[]}}],"position":{"start":{"line":34,"column":301,"offset":2658},"end":{"line":34,"column":310,"offset":2667},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":34,"column":310,"offset":2667},"end":{"line":34,"column":316,"offset":2673},"indent":[]}},{"type":"text","value":" even one where Arnie works.","position":{"start":{"line":34,"column":316,"offset":2673},"end":{"line":34,"column":344,"offset":2701},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":2358},"end":{"line":34,"column":344,"offset":2701},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"/arnie.jpg","alt":null,"position":{"start":{"line":36,"column":1,"offset":2703},"end":{"line":36,"column":16,"offset":2718},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":2703},"end":{"line":36,"column":16,"offset":2718},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Whilst it is appreciated that a trade mark owner does not always have to pursue only those infringements it has a cast-iron case in relation to, there is certainly room for some nuance on the part of the trade mark owner in determining which perceived infringements to pursue.","position":{"start":{"line":38,"column":1,"offset":2720},"end":{"line":38,"column":277,"offset":2996},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":2720},"end":{"line":38,"column":277,"offset":2996},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"At the same time, it is not a requirement that the trade mark owner is under a duty to pursue each and every infringement.","position":{"start":{"line":40,"column":1,"offset":2998},"end":{"line":40,"column":123,"offset":3120},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2998},"end":{"line":40,"column":123,"offset":3120},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Support for the concept that a trade mark owner is not obliged to pursue every perceived infringement can be found in ","position":{"start":{"line":42,"column":1,"offset":3122},"end":{"line":42,"column":119,"offset":3240},"indent":[]}},{"type":"link","title":null,"url":"http://www.uspto.gov/ip/TMLitigationReport_final_2011April27.pdf","children":[{"type":"text","value":"this USPTO report to Congress from 2011","position":{"start":{"line":42,"column":120,"offset":3241},"end":{"line":42,"column":159,"offset":3280},"indent":[]}}],"position":{"start":{"line":42,"column":119,"offset":3240},"end":{"line":42,"column":226,"offset":3347},"indent":[]}},{"type":"text","value":". In their report whilst noting that there is an affirmative obligation to protect a trade mark from misuse, they noted that (at page 6):","position":{"start":{"line":42,"column":226,"offset":3347},"end":{"line":42,"column":363,"offset":3484},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":3122},"end":{"line":42,"column":363,"offset":3484},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"A trademark owner is not required to object to all unauthorized uses that might conflict, for not everys third-party use poses the same risk of eroding distinctiveness in the marketplace.","position":{"start":{"line":44,"column":2,"offset":3487},"end":{"line":44,"column":189,"offset":3674},"indent":[]}}],"position":{"start":{"line":44,"column":2,"offset":3487},"end":{"line":44,"column":189,"offset":3674},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":3486},"end":{"line":44,"column":189,"offset":3674},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Additionally, they included reference to the case of Chicago Bears Football Club Inc. v. 12th Man/Tennesse LLC, 83 USPQ2d 1073, 1082 (TTAB 2007), quoting McDonald's Corp. v. McKinley, 13 USPQ2d 1895, 1899-1900 (TTAB 1989) from the USPTO's Trademark Trial and Appeal Board:","position":{"start":{"line":46,"column":1,"offset":3676},"end":{"line":46,"column":273,"offset":3948},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":3676},"end":{"line":46,"column":273,"offset":3948},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"linkReference","identifier":"i","referenceType":"shortcut","children":[{"type":"text","value":"I","position":{"start":{"line":48,"column":3,"offset":3952},"end":{"line":48,"column":4,"offset":3953},"indent":[]}}],"position":{"start":{"line":48,"column":2,"offset":3951},"end":{"line":48,"column":5,"offset":3954},"indent":[]}},{"type":"text","value":"t is entirely reasonable for the ","position":{"start":{"line":48,"column":5,"offset":3954},"end":{"line":48,"column":38,"offset":3987},"indent":[]}},{"type":"linkReference","identifier":"trademark owner","referenceType":"shortcut","children":[{"type":"text","value":"trademark owner","position":{"start":{"line":48,"column":39,"offset":3988},"end":{"line":48,"column":54,"offset":4003},"indent":[]}}],"position":{"start":{"line":48,"column":38,"offset":3987},"end":{"line":48,"column":55,"offset":4004},"indent":[]}},{"type":"text","value":" to object to the use of certain marks in use on some goods which it believes would conflict with the use of its marks . . . while not objecting to use of a similar mark on other goods which it does not believe would conflict with its own use.","position":{"start":{"line":48,"column":55,"offset":4004},"end":{"line":48,"column":298,"offset":4247},"indent":[]}}],"position":{"start":{"line":48,"column":2,"offset":3951},"end":{"line":48,"column":298,"offset":4247},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":3950},"end":{"line":48,"column":298,"offset":4247},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As with the examples above, failing to pursue example B above, is unlikely to result in a reduction of the distinctiveness of the Behemoth mark for hardware manufacture and it is not reasonable to hold a belief that usage of Bohomoth for kindergartens would conflict.","position":{"start":{"line":50,"column":1,"offset":4249},"end":{"line":50,"column":268,"offset":4516},"indent":[]}},{"type":"html","value":"<sup id=\"fnref2\">","position":{"start":{"line":50,"column":268,"offset":4516},"end":{"line":50,"column":285,"offset":4533},"indent":[]}},{"type":"link","title":null,"url":"#fn2","children":[{"type":"text","value":"2","position":{"start":{"line":50,"column":286,"offset":4534},"end":{"line":50,"column":287,"offset":4535},"indent":[]}}],"position":{"start":{"line":50,"column":285,"offset":4533},"end":{"line":50,"column":294,"offset":4542},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":50,"column":294,"offset":4542},"end":{"line":50,"column":300,"offset":4548},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":4249},"end":{"line":50,"column":300,"offset":4548},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In any event it's clear that the affirmative duty is not to pursue each and every infringement but to pursue infringements which could erode distinctiveness.","position":{"start":{"line":52,"column":1,"offset":4550},"end":{"line":52,"column":158,"offset":4707},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":4550},"end":{"line":52,"column":158,"offset":4707},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Of course what cannot be ignored is that in practice there may be little difference between the two due to the determination being in the eye of beholder however a line should be drawn somewhere.","position":{"start":{"line":54,"column":1,"offset":4709},"end":{"line":54,"column":196,"offset":4904},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":4709},"end":{"line":54,"column":196,"offset":4904},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In reality it would be sensible in drawing that line to take into account the likelihood of a successful lawsuit and the potential for erosion of distinctiveness before taking the decision to send out a cease and desist letter.","position":{"start":{"line":56,"column":1,"offset":4906},"end":{"line":56,"column":228,"offset":5133},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":4906},"end":{"line":56,"column":228,"offset":5133},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Appropriate enforcement is a balancing act of taking action against all cases where there is a tangible threat to the trade mark owner's mark but at the same time not making threats which could be easily be rebuffed if the matter came to court or which at the very least risk attracting the ire of the court of public opinion.","position":{"start":{"line":58,"column":1,"offset":5135},"end":{"line":58,"column":327,"offset":5461},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":5135},"end":{"line":58,"column":327,"offset":5461},"indent":[]}},{"type":"html","value":"<div class=\"footnotes\">","position":{"start":{"line":60,"column":1,"offset":5463},"end":{"line":60,"column":24,"offset":5486},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":62,"column":1,"offset":5488},"end":{"line":62,"column":6,"offset":5493},"indent":[]}},{"type":"list","ordered":true,"start":1,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The test for confusion is generally used where Party A's goods are similar/identical to Party B's and Party A is using a similar/identical mark. In addition to confusion, Party B can generally take action where Party A seeks to take advantage of the goodwill Party B has in its mark even where the goods are completely dissimilar. This could be the case with Bohomoth Kindergartens however, it is submitted that it would be very difficult for Behemoth to show Bohomoth is attempting to take advantage of the goodwill in the Behemoth name. ","position":{"start":{"line":64,"column":5,"offset":5499},"end":{"line":64,"column":544,"offset":6038},"indent":[]}},{"type":"link","title":null,"url":"#fnref1","children":[{"type":"text","value":"↩","position":{"start":{"line":64,"column":545,"offset":6039},"end":{"line":64,"column":546,"offset":6040},"indent":[]}}],"position":{"start":{"line":64,"column":544,"offset":6038},"end":{"line":64,"column":556,"offset":6050},"indent":[]}}],"position":{"start":{"line":64,"column":5,"offset":5499},"end":{"line":64,"column":556,"offset":6050},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":5495},"end":{"line":65,"column":1,"offset":6051},"indent":[1]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"On a related note, acquiescence is another potential doctrine to consider, however failing to take action in example B would not constitute a waiver of a right to take action against example A. ","position":{"start":{"line":66,"column":5,"offset":6056},"end":{"line":66,"column":199,"offset":6250},"indent":[]}},{"type":"link","title":null,"url":"#fnref2","children":[{"type":"text","value":"↩","position":{"start":{"line":66,"column":200,"offset":6251},"end":{"line":66,"column":201,"offset":6252},"indent":[]}}],"position":{"start":{"line":66,"column":199,"offset":6250},"end":{"line":66,"column":211,"offset":6262},"indent":[]}}],"position":{"start":{"line":66,"column":5,"offset":6056},"end":{"line":66,"column":211,"offset":6262},"indent":[]}},{"type":"html","value":"</div>","position":{"start":{"line":67,"column":1,"offset":6263},"end":{"line":67,"column":7,"offset":6269},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":6052},"end":{"line":67,"column":7,"offset":6269},"indent":[1]}}],"position":{"start":{"line":64,"column":1,"offset":5495},"end":{"line":67,"column":7,"offset":6269},"indent":[1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":68,"column":1,"offset":6270}}}},{"id":"transformer-remark-markdown-ast-c49bcc011b1fb6797fb636cc25cc3ad7--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Adventures-with-CouchDB-Nano-and-Pjax'\ntitle: 'Adventures with CouchDB, Nano and Pjax'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":102},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It seemed fitting to write the first blog on here about the process of creating the blog itself, so whilst I hope to write on a broader range of topics on the above in future, what follows below is some comment on the tools used to build this blog.","position":{"start":{"line":6,"column":1,"offset":104},"end":{"line":6,"column":249,"offset":352},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":104},"end":{"line":6,"column":249,"offset":352},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"CouchDB and Nano","position":{"start":{"line":8,"column":3,"offset":356},"end":{"line":8,"column":19,"offset":372},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":354},"end":{"line":8,"column":21,"offset":374},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":354},"end":{"line":8,"column":21,"offset":374},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Whilst the main site utilises MongoDB for persistence, when I was originally looking at options for persistence, ","position":{"start":{"line":10,"column":1,"offset":376},"end":{"line":10,"column":114,"offset":489},"indent":[]}},{"type":"link","title":null,"url":"http://couchdb.apache.org/","children":[{"type":"text","value":"CouchDB","position":{"start":{"line":10,"column":115,"offset":490},"end":{"line":10,"column":122,"offset":497},"indent":[]}}],"position":{"start":{"line":10,"column":114,"offset":489},"end":{"line":10,"column":151,"offset":526},"indent":[]}},{"type":"text","value":" was of interest, so although I ending up opting for MongoDB, CouchDB always stuck with me. So as it was, when I decided it would be a good idea to get some thoughts down, I thought it would be a nice little project to put together a blog using CouchDB for persistence.","position":{"start":{"line":10,"column":151,"offset":526},"end":{"line":10,"column":420,"offset":795},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":376},"end":{"line":10,"column":420,"offset":795},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When looking at how to interface with CouchDB I considered a few options. Initially, I thought it would be nice to make HTTP requests directly to a CouchDB instance. I looked at ","position":{"start":{"line":12,"column":1,"offset":797},"end":{"line":12,"column":179,"offset":975},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/iriscouch/browser-request","children":[{"type":"text","value":"browser-request","position":{"start":{"line":12,"column":180,"offset":976},"end":{"line":12,"column":195,"offset":991},"indent":[]}}],"position":{"start":{"line":12,"column":179,"offset":975},"end":{"line":12,"column":242,"offset":1038},"indent":[]}},{"type":"text","value":", a library from the guys at ","position":{"start":{"line":12,"column":242,"offset":1038},"end":{"line":12,"column":271,"offset":1067},"indent":[]}},{"type":"link","title":null,"url":"http://www.iriscouch.com","children":[{"type":"text","value":"IrisCouch","position":{"start":{"line":12,"column":272,"offset":1068},"end":{"line":12,"column":281,"offset":1077},"indent":[]}}],"position":{"start":{"line":12,"column":271,"offset":1067},"end":{"line":12,"column":308,"offset":1104},"indent":[]}},{"type":"text","value":" (who coincidentally are the provider of the CouchDB instance used by this blog (thanks!)).","position":{"start":{"line":12,"column":308,"offset":1104},"end":{"line":12,"column":399,"offset":1195},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":797},"end":{"line":12,"column":399,"offset":1195},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Having played around with the browser variant, I ended up realising that it may be less cluttered to separate out concerns and leave the client-side purely for rendering the finished product.","position":{"start":{"line":14,"column":1,"offset":1197},"end":{"line":14,"column":192,"offset":1388},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":1197},"end":{"line":14,"column":192,"offset":1388},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Having decided to use Node together with CouchDB, it wasn't long before I stumbled on ","position":{"start":{"line":16,"column":1,"offset":1390},"end":{"line":16,"column":87,"offset":1476},"indent":[]}},{"type":"link","title":null,"url":"http://github.com/dscape/nano","children":[{"type":"text","value":"Nano","position":{"start":{"line":16,"column":88,"offset":1477},"end":{"line":16,"column":92,"offset":1481},"indent":[]}}],"position":{"start":{"line":16,"column":87,"offset":1476},"end":{"line":16,"column":124,"offset":1513},"indent":[]}},{"type":"text","value":" by Nuno Job. Nano is a basic wrapper which simplifies greatly interactions with your CouchDB instance. There were a few points with CouchDB and Nano that were and in some cases still are stumbling for me as per the below.","position":{"start":{"line":16,"column":124,"offset":1513},"end":{"line":16,"column":346,"offset":1735},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1390},"end":{"line":16,"column":346,"offset":1735},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Creating a database","position":{"start":{"line":18,"column":3,"offset":1739},"end":{"line":18,"column":22,"offset":1758},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1737},"end":{"line":18,"column":24,"offset":1760},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1737},"end":{"line":18,"column":24,"offset":1760},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Nano exposes a .use method to specify which database you are going to use. This assumes it has previously been created, so the first step would be to create the database. However, the issue for me is that once created, you don’t want to then subsequently create a further database on each occasion. I need to therefore figure out to perhaps only create a database if it doesn’t already exist.","position":{"start":{"line":20,"column":1,"offset":1762},"end":{"line":20,"column":393,"offset":2154},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1762},"end":{"line":20,"column":393,"offset":2154},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"CouchDB views","position":{"start":{"line":22,"column":3,"offset":2158},"end":{"line":22,"column":16,"offset":2171},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":2156},"end":{"line":22,"column":18,"offset":2173},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":2156},"end":{"line":22,"column":18,"offset":2173},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Coming from MongoDB/Mongoose, it took me a while to realise that CouchDB uses the concept of views to process and display data from the database. A view can be as simple as the below:","position":{"start":{"line":24,"column":1,"offset":2175},"end":{"line":24,"column":184,"offset":2358},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":2175},"end":{"line":24,"column":184,"offset":2358},"indent":[]}},{"type":"code","lang":null,"value":"function(doc) {\n  emit(doc._id, doc);\n}","position":{"start":{"line":26,"column":1,"offset":2360},"end":{"line":28,"column":6,"offset":2411},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This will simply map over the specified database and output an object for each row in the database, with that object containing the stored values. In addition to this basic functionality, you can of course do a much greater range of operations including reducing queries. More information on views can be found in this ","position":{"start":{"line":30,"column":1,"offset":2413},"end":{"line":30,"column":320,"offset":2732},"indent":[]}},{"type":"link","title":null,"url":"http://stackoverflow.com/a/7112722/1242579","children":[{"type":"text","value":"great answer","position":{"start":{"line":30,"column":321,"offset":2733},"end":{"line":30,"column":333,"offset":2745},"indent":[]}}],"position":{"start":{"line":30,"column":320,"offset":2732},"end":{"line":30,"column":378,"offset":2790},"indent":[]}},{"type":"text","value":" on Stack Overflow. It is worth noting that the view must be stored directly in your CouchDB instance using the Futon manager.","position":{"start":{"line":30,"column":378,"offset":2790},"end":{"line":30,"column":504,"offset":2916},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":2413},"end":{"line":30,"column":504,"offset":2916},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Updating a document","position":{"start":{"line":32,"column":3,"offset":2920},"end":{"line":32,"column":22,"offset":2939},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":2918},"end":{"line":32,"column":24,"offset":2941},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":2918},"end":{"line":32,"column":24,"offset":2941},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The concept of updating a document is from what I can tell frowned up on in CouchDB, rather than updating a document, you are essentially changing the pointer in your database so it point to a revised document. As a result, you have to supply the version of the document you wish to update. At the same time, I haven’t quite worked out if it is possible to only update certain values in an entry so at present, in addition to any amended values, I also supply the unchanged values. This to me is rather unwieldy.","position":{"start":{"line":34,"column":1,"offset":2943},"end":{"line":34,"column":513,"offset":3455},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":2943},"end":{"line":34,"column":513,"offset":3455},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Pjax","position":{"start":{"line":36,"column":3,"offset":3459},"end":{"line":36,"column":7,"offset":3463},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":3457},"end":{"line":36,"column":9,"offset":3465},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":3457},"end":{"line":36,"column":9,"offset":3465},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The site also uses ","position":{"start":{"line":38,"column":1,"offset":3467},"end":{"line":38,"column":20,"offset":3486},"indent":[]}},{"type":"link","title":null,"url":"http://pjax.heroku.com","children":[{"type":"text","value":"Pjax","position":{"start":{"line":38,"column":21,"offset":3487},"end":{"line":38,"column":25,"offset":3491},"indent":[]}}],"position":{"start":{"line":38,"column":20,"offset":3486},"end":{"line":38,"column":50,"offset":3516},"indent":[]}},{"type":"text","value":". This tool grabs html content from the server via AJAX but at the same time uses html5 pushstate to alter the url accordingly. As the details at the link states this gives the impression of a speeded up site as the whole page isn’t being reloaded. One issue for me with this tool is that when I edit a page and import content from the server, it doesn’t render correctly. As a result, I have disabled the pjax functionality for the edit page.","position":{"start":{"line":38,"column":50,"offset":3516},"end":{"line":38,"column":493,"offset":3959},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":3467},"end":{"line":38,"column":493,"offset":3959},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Another issue I haven't worked out is how to automatically enable pjax. Although I'm sure it's trivial, in the demo it is dealt via a checkbox (as this enables you to determine performance with and without pjax enabled).","position":{"start":{"line":40,"column":1,"offset":3961},"end":{"line":40,"column":221,"offset":4181},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":3961},"end":{"line":40,"column":221,"offset":4181},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To get Jquery-Pjax working with Express 3 I revised the demo ","position":{"start":{"line":42,"column":1,"offset":4183},"end":{"line":42,"column":62,"offset":4244},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/dakatsuka/express-pjax","children":[{"type":"text","value":"here","position":{"start":{"line":42,"column":63,"offset":4245},"end":{"line":42,"column":67,"offset":4249},"indent":[]}}],"position":{"start":{"line":42,"column":62,"offset":4244},"end":{"line":42,"column":111,"offset":4293},"indent":[]}},{"type":"text","value":" to use express-partials, which allows the use of layouts with Express 3","position":{"start":{"line":42,"column":111,"offset":4293},"end":{"line":42,"column":183,"offset":4365},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":42,"column":183,"offset":4365},"end":{"line":42,"column":185,"offset":4367},"indent":[]}},{"type":"text","value":" This is because pjax works by injecting the html from the server into a specified section of the layout.","position":{"start":{"line":42,"column":185,"offset":4367},"end":{"line":42,"column":290,"offset":4472},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":4183},"end":{"line":42,"column":290,"offset":4472},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Concluding thoughts","position":{"start":{"line":44,"column":3,"offset":4476},"end":{"line":44,"column":22,"offset":4495},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":4474},"end":{"line":44,"column":24,"offset":4497},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":4474},"end":{"line":44,"column":24,"offset":4497},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The code for the small blog I have created is available ","position":{"start":{"line":46,"column":1,"offset":4499},"end":{"line":46,"column":57,"offset":4555},"indent":[]}},{"type":"link","title":null,"url":"http://www.github.com/grabbeh/nanoblog","children":[{"type":"text","value":"on Github","position":{"start":{"line":46,"column":58,"offset":4556},"end":{"line":46,"column":67,"offset":4565},"indent":[]}}],"position":{"start":{"line":46,"column":57,"offset":4555},"end":{"line":46,"column":108,"offset":4606},"indent":[]}},{"type":"text","value":". It is a work in progress and I hope to try to resolve some of the unresolved issues above (or some kindly person will stumble on this blog and enlighten me!).","position":{"start":{"line":46,"column":108,"offset":4606},"end":{"line":46,"column":268,"offset":4766},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":4499},"end":{"line":46,"column":268,"offset":4766},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":48,"column":1,"offset":4768}}}},{"id":"transformer-remark-markdown-html-ast-a7c7a1807b3e608a7c5062213699b3ab--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Draftin.com is a great tool I've been using lately to do some writing. Whilst I'm not utilising many of its more advanced features, the care and attention that its creator has put into the product shines through.","position":{"start":{"line":6,"column":1,"offset":158},"end":{"line":6,"column":213,"offset":370}}}],"position":{"start":{"line":6,"column":1,"offset":158},"end":{"line":6,"column":213,"offset":370}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once I'd written something my previous process of getting onto this site was to copy and paste the contents into a template file within the VPS I'm using to host this blog, and then name it appropriately. Although this isn't a particularly burdensome process, I thought there may be a simpler process.","position":{"start":{"line":8,"column":1,"offset":372},"end":{"line":8,"column":302,"offset":673}}}],"position":{"start":{"line":8,"column":1,"offset":372},"end":{"line":8,"column":302,"offset":673}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Having a gander at Draftin I saw reference to ","position":{"start":{"line":10,"column":1,"offset":675},"end":{"line":10,"column":47,"offset":721}}},{"type":"element","tagName":"a","properties":{"href":"https://draftin.com/features#webhooks"},"children":[{"type":"text","value":"Webhooks","position":{"start":{"line":10,"column":48,"offset":722},"end":{"line":10,"column":56,"offset":730}}}],"position":{"start":{"line":10,"column":47,"offset":721},"end":{"line":10,"column":96,"offset":770}}},{"type":"text","value":". Webhooks give you the ability to specify a url to which the content will be published using a simple POST request.","position":{"start":{"line":10,"column":96,"offset":770},"end":{"line":10,"column":212,"offset":886}}}],"position":{"start":{"line":10,"column":1,"offset":675},"end":{"line":10,"column":212,"offset":886}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I thought it would be interesting to try to integrate this into the VPS so you could post data and automatically create a html file in the folder from which the html files making up this blog are served from via Nginx.","position":{"start":{"line":12,"column":1,"offset":888},"end":{"line":12,"column":219,"offset":1106}}}],"position":{"start":{"line":12,"column":1,"offset":888},"end":{"line":12,"column":219,"offset":1106}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I initially created a basic Express server to test the data that was being sent. After some issues with accessing the data, I realised I need to parse the JSON to make it accessible.","position":{"start":{"line":14,"column":1,"offset":1108},"end":{"line":14,"column":183,"offset":1290}}}],"position":{"start":{"line":14,"column":1,"offset":1108},"end":{"line":14,"column":183,"offset":1290}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once that was done, I wrote the 'content_html' to a file in the relevant folder. However the issue was obviously that the only content being posted was the blog post itself. In addition to the content, it also needed surrounding container elements and the head element to specify css etc.","position":{"start":{"line":16,"column":1,"offset":1292},"end":{"line":16,"column":289,"offset":1580}}}],"position":{"start":{"line":16,"column":1,"offset":1292},"end":{"line":16,"column":289,"offset":1580}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To remedy this, I created a template.html file which is then read in when post data is received. Using the excellent ","position":{"start":{"line":18,"column":1,"offset":1582},"end":{"line":18,"column":118,"offset":1699}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/MatthewMueller/cheerio"},"children":[{"type":"text","value":"Cheerio","position":{"start":{"line":18,"column":119,"offset":1700},"end":{"line":18,"column":126,"offset":1707}}}],"position":{"start":{"line":18,"column":118,"offset":1699},"end":{"line":18,"column":170,"offset":1751}}},{"type":"text","value":" I then load in the template html and then manipulate it using simple jQuery-like functionality to add in a title and the content from the POST data from Draftin.","position":{"start":{"line":18,"column":170,"offset":1751},"end":{"line":18,"column":332,"offset":1913}}}],"position":{"start":{"line":18,"column":1,"offset":1582},"end":{"line":18,"column":332,"offset":1913}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once completed, the amended file is then saved as a new file with the stated title then accessible at blog.grabeh.net/","position":{"start":{"line":20,"column":1,"offset":1915},"end":{"line":20,"column":119,"offset":2033}}},{"type":"text","value":"["},{"type":"text","value":"title","position":{"start":{"line":20,"column":120,"offset":2034},"end":{"line":20,"column":125,"offset":2039}}},{"type":"text","value":"]"},{"type":"text","value":". Draftin also allows you to provide a location url in your response which is then captured by Draftin which is then displayed by your post.","position":{"start":{"line":20,"column":126,"offset":2040},"end":{"line":20,"column":266,"offset":2180}}}],"position":{"start":{"line":20,"column":1,"offset":1915},"end":{"line":20,"column":266,"offset":2180}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The whole basic Express server is below for the curious. As the documentation on Draftin notes, the URL used to post data to should be sufficiently obscure.","position":{"start":{"line":22,"column":1,"offset":2182},"end":{"line":22,"column":157,"offset":2338}}}],"position":{"start":{"line":22,"column":1,"offset":2182},"end":{"line":22,"column":157,"offset":2338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"  var express = require('express'),\n    fs = require('fs'),\n    cheerio = require('cheerio'),\n    app = express()\n  app.configure(function () {\n    app.use(express.bodyParser())\n    app.use(app.router)\n  })\n  app.post('/', function (req, res) {\n    var payload = req.body.payload\n    var parsedResponse = JSON.parse(payload)\n    var title = parsedResponse.name\n    var htitle = title.replace(/\\s+/g, '-').toLowerCase()\n    var parsedhtml = parsedResponse.content_html\n    fs.readFile('/usr/local/nginx/html/blog/template.html', function (err, data) {\n      $ = cheerio.load(data)\n      $('h3').text(title)\n      $('#textbody').html(parsedhtml)\n      var updatedhtml = $.html()\n      fs.writeFile(\n        '/usr/local/nginx/html/blog/' + htitle + '.html',\n        updatedhtml,\n        function (err) {\n          if (!err) {\n            res.set('location', 'http://blog.grabeh.net/' + htitle)\n            res.send()\n          }\n        }\n      )\n    })\n  })\n  app.listen(3010)\n"}],"position":{"start":{"line":25,"column":1,"offset":2341},"end":{"line":56,"column":23,"offset":3443}}}],"position":{"start":{"line":25,"column":1,"offset":2341},"end":{"line":56,"column":23,"offset":3443}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I do need to resolve a few minor points like inserting a title in the head and also updating the index.html of the blog, but I think the above system creates a nice flow for automatically posting content to the blog from Draftin.","position":{"start":{"line":58,"column":1,"offset":3445},"end":{"line":58,"column":230,"offset":3674}}}],"position":{"start":{"line":58,"column":1,"offset":3445},"end":{"line":58,"column":230,"offset":3674}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The only issue now of course is to keep focused on writing in the first place.","position":{"start":{"line":60,"column":1,"offset":3676},"end":{"line":60,"column":79,"offset":3754}}}],"position":{"start":{"line":60,"column":1,"offset":3676},"end":{"line":60,"column":79,"offset":3754}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":62,"column":1,"offset":3756}}}},{"id":"transformer-remark-markdown-html-ast-0e2f1403937682d89b87b595dd00a4f9--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Trade mark disputes pop up all the time. Often it's a David v Goliath affair with a large incumbent with an equally large legal budget seeking to squish a plucky start-up.","position":{"start":{"line":6,"column":1,"offset":117},"end":{"line":6,"column":172,"offset":288}}}],"position":{"start":{"line":6,"column":1,"offset":117},"end":{"line":6,"column":172,"offset":288}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In some cases, the Goliath can attempt to use its registered trade marks to oppress an upstart providing goods or services in an area completely unrelated to it.","position":{"start":{"line":8,"column":1,"offset":290},"end":{"line":8,"column":162,"offset":451}}}],"position":{"start":{"line":8,"column":1,"offset":290},"end":{"line":8,"column":162,"offset":451}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Some may see this kind of action as completely unreasonable on the basis that there couldn't conceivably be any confusion or intention to take advantage of the reputation of the incumbent.","position":{"start":{"line":10,"column":1,"offset":453},"end":{"line":10,"column":189,"offset":641}}}],"position":{"start":{"line":10,"column":1,"offset":453},"end":{"line":10,"column":189,"offset":641}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Others might comment that a trade mark owner is required to enforce their trade marks otherwise risk losing the ability to enforce them in the future or as is sometimes mooted lose the trade mark altogether.","position":{"start":{"line":12,"column":1,"offset":643},"end":{"line":12,"column":208,"offset":850}}}],"position":{"start":{"line":12,"column":1,"offset":643},"end":{"line":12,"column":208,"offset":850}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first thing to say is that a trade mark owner is not going to lose their trade mark through a failure to enforce their trade mark right.","position":{"start":{"line":14,"column":1,"offset":852},"end":{"line":14,"column":141,"offset":992}}}],"position":{"start":{"line":14,"column":1,"offset":852},"end":{"line":14,"column":141,"offset":992}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Failure to enforce may result in the trade mark becoming diluted and generic, in which case a third party may seek to invalidate the registration, but this process would never happen automatically.","position":{"start":{"line":16,"column":1,"offset":994},"end":{"line":16,"column":198,"offset":1191}}}],"position":{"start":{"line":16,"column":1,"offset":994},"end":{"line":16,"column":198,"offset":1191}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Secondly, a trade mark owner will not lose their ability to enforce their trade mark rights simply because they do not enforce all potential misuses. This is because all potential misuses are not the same and a perceived infringement does not always equate to a cast-iron case against the alleged infringer.","position":{"start":{"line":18,"column":1,"offset":1193},"end":{"line":18,"column":308,"offset":1500}}}],"position":{"start":{"line":18,"column":1,"offset":1193},"end":{"line":18,"column":308,"offset":1500}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Some examples may be useful.","position":{"start":{"line":20,"column":1,"offset":1502},"end":{"line":20,"column":29,"offset":1530}}}],"position":{"start":{"line":20,"column":1,"offset":1502},"end":{"line":20,"column":29,"offset":1530}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Example A","position":{"start":{"line":22,"column":4,"offset":1535},"end":{"line":22,"column":13,"offset":1544}}}],"position":{"start":{"line":22,"column":3,"offset":1534},"end":{"line":22,"column":14,"offset":1545}}}],"position":{"start":{"line":22,"column":1,"offset":1532},"end":{"line":22,"column":16,"offset":1547}}}],"position":{"start":{"line":22,"column":1,"offset":1532},"end":{"line":22,"column":16,"offset":1547}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Behemoth Enterprises runs a hugely successful business manufacturing hardware. Behemoth becomes aware of consulting company using the 'Bohomoth' mark providing advice to companies on hardware.","position":{"start":{"line":24,"column":3,"offset":1551},"end":{"line":24,"column":195,"offset":1743}}}],"position":{"start":{"line":24,"column":3,"offset":1551},"end":{"line":24,"column":195,"offset":1743}}},{"type":"text","value":"\n"}],"position":{"start":{"line":24,"column":1,"offset":1549},"end":{"line":24,"column":195,"offset":1743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Example B","position":{"start":{"line":26,"column":4,"offset":1748},"end":{"line":26,"column":13,"offset":1757}}}],"position":{"start":{"line":26,"column":3,"offset":1747},"end":{"line":26,"column":14,"offset":1758}}}],"position":{"start":{"line":26,"column":1,"offset":1745},"end":{"line":26,"column":16,"offset":1760}}}],"position":{"start":{"line":26,"column":1,"offset":1745},"end":{"line":26,"column":16,"offset":1760}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Behemoth again becomes aware of a company using the Bohomoth mark but this time in the field of kindergarten services","position":{"start":{"line":28,"column":3,"offset":1764},"end":{"line":28,"column":120,"offset":1881}}}],"position":{"start":{"line":28,"column":3,"offset":1764},"end":{"line":28,"column":120,"offset":1881}}},{"type":"text","value":"\n"}],"position":{"start":{"line":28,"column":1,"offset":1762},"end":{"line":28,"column":120,"offset":1881}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In example A, action would be entirely justified in taking action even though Behemoth is not in the field of consulting services directly but there is a clear likelihood of confusion arising in the minds of consumers as to whether the consulting firm is linked to the goods supplier.","position":{"start":{"line":30,"column":1,"offset":1883},"end":{"line":30,"column":285,"offset":2167}}}],"position":{"start":{"line":30,"column":1,"offset":1883},"end":{"line":30,"column":285,"offset":2167}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It's also worth remembering that a trade mark owner is also not restricted from taking action for just identical marks but also for similar marks (hence the Behemoth vs Bohomoth example).","position":{"start":{"line":32,"column":1,"offset":2169},"end":{"line":32,"column":188,"offset":2356}}}],"position":{"start":{"line":32,"column":1,"offset":2169},"end":{"line":32,"column":188,"offset":2356}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In example B, the grounds for taking action would be far more limited. It is not so clear cut however at its heart, there is a very low chance that a potential customer of a kindergarten would consider that there is a connection between the kindergarten and the hardware manufacturer","position":{"start":{"line":34,"column":1,"offset":2358},"end":{"line":34,"column":284,"offset":2641}}},{"type":"raw","value":"<sup id=\"fnref1\">","position":{"start":{"line":34,"column":284,"offset":2641},"end":{"line":34,"column":301,"offset":2658}}},{"type":"element","tagName":"a","properties":{"href":"#fn1"},"children":[{"type":"text","value":"1","position":{"start":{"line":34,"column":302,"offset":2659},"end":{"line":34,"column":303,"offset":2660}}}],"position":{"start":{"line":34,"column":301,"offset":2658},"end":{"line":34,"column":310,"offset":2667}}},{"type":"raw","value":"</sup>","position":{"start":{"line":34,"column":310,"offset":2667},"end":{"line":34,"column":316,"offset":2673}}},{"type":"text","value":" even one where Arnie works.","position":{"start":{"line":34,"column":316,"offset":2673},"end":{"line":34,"column":344,"offset":2701}}}],"position":{"start":{"line":34,"column":1,"offset":2358},"end":{"line":34,"column":344,"offset":2701}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/arnie.jpg","alt":null},"children":[],"position":{"start":{"line":36,"column":1,"offset":2703},"end":{"line":36,"column":16,"offset":2718}}}],"position":{"start":{"line":36,"column":1,"offset":2703},"end":{"line":36,"column":16,"offset":2718}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Whilst it is appreciated that a trade mark owner does not always have to pursue only those infringements it has a cast-iron case in relation to, there is certainly room for some nuance on the part of the trade mark owner in determining which perceived infringements to pursue.","position":{"start":{"line":38,"column":1,"offset":2720},"end":{"line":38,"column":277,"offset":2996}}}],"position":{"start":{"line":38,"column":1,"offset":2720},"end":{"line":38,"column":277,"offset":2996}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At the same time, it is not a requirement that the trade mark owner is under a duty to pursue each and every infringement.","position":{"start":{"line":40,"column":1,"offset":2998},"end":{"line":40,"column":123,"offset":3120}}}],"position":{"start":{"line":40,"column":1,"offset":2998},"end":{"line":40,"column":123,"offset":3120}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Support for the concept that a trade mark owner is not obliged to pursue every perceived infringement can be found in ","position":{"start":{"line":42,"column":1,"offset":3122},"end":{"line":42,"column":119,"offset":3240}}},{"type":"element","tagName":"a","properties":{"href":"http://www.uspto.gov/ip/TMLitigationReport_final_2011April27.pdf"},"children":[{"type":"text","value":"this USPTO report to Congress from 2011","position":{"start":{"line":42,"column":120,"offset":3241},"end":{"line":42,"column":159,"offset":3280}}}],"position":{"start":{"line":42,"column":119,"offset":3240},"end":{"line":42,"column":226,"offset":3347}}},{"type":"text","value":". In their report whilst noting that there is an affirmative obligation to protect a trade mark from misuse, they noted that (at page 6):","position":{"start":{"line":42,"column":226,"offset":3347},"end":{"line":42,"column":363,"offset":3484}}}],"position":{"start":{"line":42,"column":1,"offset":3122},"end":{"line":42,"column":363,"offset":3484}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A trademark owner is not required to object to all unauthorized uses that might conflict, for not everys third-party use poses the same risk of eroding distinctiveness in the marketplace.","position":{"start":{"line":44,"column":2,"offset":3487},"end":{"line":44,"column":189,"offset":3674}}}],"position":{"start":{"line":44,"column":2,"offset":3487},"end":{"line":44,"column":189,"offset":3674}}},{"type":"text","value":"\n"}],"position":{"start":{"line":44,"column":1,"offset":3486},"end":{"line":44,"column":189,"offset":3674}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Additionally, they included reference to the case of Chicago Bears Football Club Inc. v. 12th Man/Tennesse LLC, 83 USPQ2d 1073, 1082 (TTAB 2007), quoting McDonald's Corp. v. McKinley, 13 USPQ2d 1895, 1899-1900 (TTAB 1989) from the USPTO's Trademark Trial and Appeal Board:","position":{"start":{"line":46,"column":1,"offset":3676},"end":{"line":46,"column":273,"offset":3948}}}],"position":{"start":{"line":46,"column":1,"offset":3676},"end":{"line":46,"column":273,"offset":3948}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"["},{"type":"text","value":"I","position":{"start":{"line":48,"column":3,"offset":3952},"end":{"line":48,"column":4,"offset":3953}}},{"type":"text","value":"]"},{"type":"text","value":"t is entirely reasonable for the ","position":{"start":{"line":48,"column":5,"offset":3954},"end":{"line":48,"column":38,"offset":3987}}},{"type":"text","value":"["},{"type":"text","value":"trademark owner","position":{"start":{"line":48,"column":39,"offset":3988},"end":{"line":48,"column":54,"offset":4003}}},{"type":"text","value":"]"},{"type":"text","value":" to object to the use of certain marks in use on some goods which it believes would conflict with the use of its marks . . . while not objecting to use of a similar mark on other goods which it does not believe would conflict with its own use.","position":{"start":{"line":48,"column":55,"offset":4004},"end":{"line":48,"column":298,"offset":4247}}}],"position":{"start":{"line":48,"column":2,"offset":3951},"end":{"line":48,"column":298,"offset":4247}}},{"type":"text","value":"\n"}],"position":{"start":{"line":48,"column":1,"offset":3950},"end":{"line":48,"column":298,"offset":4247}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As with the examples above, failing to pursue example B above, is unlikely to result in a reduction of the distinctiveness of the Behemoth mark for hardware manufacture and it is not reasonable to hold a belief that usage of Bohomoth for kindergartens would conflict.","position":{"start":{"line":50,"column":1,"offset":4249},"end":{"line":50,"column":268,"offset":4516}}},{"type":"raw","value":"<sup id=\"fnref2\">","position":{"start":{"line":50,"column":268,"offset":4516},"end":{"line":50,"column":285,"offset":4533}}},{"type":"element","tagName":"a","properties":{"href":"#fn2"},"children":[{"type":"text","value":"2","position":{"start":{"line":50,"column":286,"offset":4534},"end":{"line":50,"column":287,"offset":4535}}}],"position":{"start":{"line":50,"column":285,"offset":4533},"end":{"line":50,"column":294,"offset":4542}}},{"type":"raw","value":"</sup>","position":{"start":{"line":50,"column":294,"offset":4542},"end":{"line":50,"column":300,"offset":4548}}}],"position":{"start":{"line":50,"column":1,"offset":4249},"end":{"line":50,"column":300,"offset":4548}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In any event it's clear that the affirmative duty is not to pursue each and every infringement but to pursue infringements which could erode distinctiveness.","position":{"start":{"line":52,"column":1,"offset":4550},"end":{"line":52,"column":158,"offset":4707}}}],"position":{"start":{"line":52,"column":1,"offset":4550},"end":{"line":52,"column":158,"offset":4707}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Of course what cannot be ignored is that in practice there may be little difference between the two due to the determination being in the eye of beholder however a line should be drawn somewhere.","position":{"start":{"line":54,"column":1,"offset":4709},"end":{"line":54,"column":196,"offset":4904}}}],"position":{"start":{"line":54,"column":1,"offset":4709},"end":{"line":54,"column":196,"offset":4904}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In reality it would be sensible in drawing that line to take into account the likelihood of a successful lawsuit and the potential for erosion of distinctiveness before taking the decision to send out a cease and desist letter.","position":{"start":{"line":56,"column":1,"offset":4906},"end":{"line":56,"column":228,"offset":5133}}}],"position":{"start":{"line":56,"column":1,"offset":4906},"end":{"line":56,"column":228,"offset":5133}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Appropriate enforcement is a balancing act of taking action against all cases where there is a tangible threat to the trade mark owner's mark but at the same time not making threats which could be easily be rebuffed if the matter came to court or which at the very least risk attracting the ire of the court of public opinion.","position":{"start":{"line":58,"column":1,"offset":5135},"end":{"line":58,"column":327,"offset":5461}}}],"position":{"start":{"line":58,"column":1,"offset":5135},"end":{"line":58,"column":327,"offset":5461}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"footnotes\">","position":{"start":{"line":60,"column":1,"offset":5463},"end":{"line":60,"column":24,"offset":5486}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":62,"column":1,"offset":5488},"end":{"line":62,"column":6,"offset":5493}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The test for confusion is generally used where Party A's goods are similar/identical to Party B's and Party A is using a similar/identical mark. In addition to confusion, Party B can generally take action where Party A seeks to take advantage of the goodwill Party B has in its mark even where the goods are completely dissimilar. This could be the case with Bohomoth Kindergartens however, it is submitted that it would be very difficult for Behemoth to show Bohomoth is attempting to take advantage of the goodwill in the Behemoth name. ","position":{"start":{"line":64,"column":5,"offset":5499},"end":{"line":64,"column":544,"offset":6038}}},{"type":"element","tagName":"a","properties":{"href":"#fnref1"},"children":[{"type":"text","value":"↩","position":{"start":{"line":64,"column":545,"offset":6039},"end":{"line":64,"column":546,"offset":6040}}}],"position":{"start":{"line":64,"column":544,"offset":6038},"end":{"line":64,"column":556,"offset":6050}}}],"position":{"start":{"line":64,"column":5,"offset":5499},"end":{"line":64,"column":556,"offset":6050}}},{"type":"text","value":"\n"}],"position":{"start":{"line":64,"column":1,"offset":5495},"end":{"line":65,"column":1,"offset":6051}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"On a related note, acquiescence is another potential doctrine to consider, however failing to take action in example B would not constitute a waiver of a right to take action against example A. ","position":{"start":{"line":66,"column":5,"offset":6056},"end":{"line":66,"column":199,"offset":6250}}},{"type":"element","tagName":"a","properties":{"href":"#fnref2"},"children":[{"type":"text","value":"↩","position":{"start":{"line":66,"column":200,"offset":6251},"end":{"line":66,"column":201,"offset":6252}}}],"position":{"start":{"line":66,"column":199,"offset":6250},"end":{"line":66,"column":211,"offset":6262}}}],"position":{"start":{"line":66,"column":5,"offset":6056},"end":{"line":66,"column":211,"offset":6262}}},{"type":"text","value":"\n"},{"type":"raw","value":"</div>","position":{"start":{"line":67,"column":1,"offset":6263},"end":{"line":67,"column":7,"offset":6269}}},{"type":"text","value":"\n"}],"position":{"start":{"line":66,"column":1,"offset":6052},"end":{"line":67,"column":7,"offset":6269}}},{"type":"text","value":"\n"}],"position":{"start":{"line":64,"column":1,"offset":5495},"end":{"line":67,"column":7,"offset":6269}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":68,"column":1,"offset":6270}}}},{"id":"transformer-remark-markdown-html-a7c7a1807b3e608a7c5062213699b3ab--","value":"<p>Draftin.com is a great tool I've been using lately to do some writing. Whilst I'm not utilising many of its more advanced features, the care and attention that its creator has put into the product shines through.</p>\n<p>Once I'd written something my previous process of getting onto this site was to copy and paste the contents into a template file within the VPS I'm using to host this blog, and then name it appropriately. Although this isn't a particularly burdensome process, I thought there may be a simpler process.</p>\n<p>Having a gander at Draftin I saw reference to <a href=\"https://draftin.com/features#webhooks\">Webhooks</a>. Webhooks give you the ability to specify a url to which the content will be published using a simple POST request.</p>\n<p>I thought it would be interesting to try to integrate this into the VPS so you could post data and automatically create a html file in the folder from which the html files making up this blog are served from via Nginx.</p>\n<p>I initially created a basic Express server to test the data that was being sent. After some issues with accessing the data, I realised I need to parse the JSON to make it accessible.</p>\n<p>Once that was done, I wrote the 'content_html' to a file in the relevant folder. However the issue was obviously that the only content being posted was the blog post itself. In addition to the content, it also needed surrounding container elements and the head element to specify css etc.</p>\n<p>To remedy this, I created a template.html file which is then read in when post data is received. Using the excellent <a href=\"https://github.com/MatthewMueller/cheerio\">Cheerio</a> I then load in the template html and then manipulate it using simple jQuery-like functionality to add in a title and the content from the POST data from Draftin.</p>\n<p>Once completed, the amended file is then saved as a new file with the stated title then accessible at blog.grabeh.net/[title]. Draftin also allows you to provide a location url in your response which is then captured by Draftin which is then displayed by your post.</p>\n<p>The whole basic Express server is below for the curious. As the documentation on Draftin notes, the URL used to post data to should be sufficiently obscure.</p>\n<pre><code>  var express = require('express'),\n    fs = require('fs'),\n    cheerio = require('cheerio'),\n    app = express()\n  app.configure(function () {\n    app.use(express.bodyParser())\n    app.use(app.router)\n  })\n  app.post('/', function (req, res) {\n    var payload = req.body.payload\n    var parsedResponse = JSON.parse(payload)\n    var title = parsedResponse.name\n    var htitle = title.replace(/\\s+/g, '-').toLowerCase()\n    var parsedhtml = parsedResponse.content_html\n    fs.readFile('/usr/local/nginx/html/blog/template.html', function (err, data) {\n      $ = cheerio.load(data)\n      $('h3').text(title)\n      $('#textbody').html(parsedhtml)\n      var updatedhtml = $.html()\n      fs.writeFile(\n        '/usr/local/nginx/html/blog/' + htitle + '.html',\n        updatedhtml,\n        function (err) {\n          if (!err) {\n            res.set('location', 'http://blog.grabeh.net/' + htitle)\n            res.send()\n          }\n        }\n      )\n    })\n  })\n  app.listen(3010)\n</code></pre>\n<p>I do need to resolve a few minor points like inserting a title in the head and also updating the index.html of the blog, but I think the above system creates a nice flow for automatically posting content to the blog from Draftin.</p>\n<p>The only issue now of course is to keep focused on writing in the first place.</p>"},{"id":"transformer-remark-markdown-html-0e2f1403937682d89b87b595dd00a4f9--","value":"<p>Trade mark disputes pop up all the time. Often it's a David v Goliath affair with a large incumbent with an equally large legal budget seeking to squish a plucky start-up.</p>\n<p>In some cases, the Goliath can attempt to use its registered trade marks to oppress an upstart providing goods or services in an area completely unrelated to it.</p>\n<p>Some may see this kind of action as completely unreasonable on the basis that there couldn't conceivably be any confusion or intention to take advantage of the reputation of the incumbent.</p>\n<p>Others might comment that a trade mark owner is required to enforce their trade marks otherwise risk losing the ability to enforce them in the future or as is sometimes mooted lose the trade mark altogether.</p>\n<p>The first thing to say is that a trade mark owner is not going to lose their trade mark through a failure to enforce their trade mark right.</p>\n<p>Failure to enforce may result in the trade mark becoming diluted and generic, in which case a third party may seek to invalidate the registration, but this process would never happen automatically.</p>\n<p>Secondly, a trade mark owner will not lose their ability to enforce their trade mark rights simply because they do not enforce all potential misuses. This is because all potential misuses are not the same and a perceived infringement does not always equate to a cast-iron case against the alleged infringer.</p>\n<p>Some examples may be useful.</p>\n<p><strong><em>Example A</em></strong></p>\n<blockquote>\n<p>Behemoth Enterprises runs a hugely successful business manufacturing hardware. Behemoth becomes aware of consulting company using the 'Bohomoth' mark providing advice to companies on hardware.</p>\n</blockquote>\n<p><strong><em>Example B</em></strong></p>\n<blockquote>\n<p>Behemoth again becomes aware of a company using the Bohomoth mark but this time in the field of kindergarten services</p>\n</blockquote>\n<p>In example A, action would be entirely justified in taking action even though Behemoth is not in the field of consulting services directly but there is a clear likelihood of confusion arising in the minds of consumers as to whether the consulting firm is linked to the goods supplier.</p>\n<p>It's also worth remembering that a trade mark owner is also not restricted from taking action for just identical marks but also for similar marks (hence the Behemoth vs Bohomoth example).</p>\n<p>In example B, the grounds for taking action would be far more limited. It is not so clear cut however at its heart, there is a very low chance that a potential customer of a kindergarten would consider that there is a connection between the kindergarten and the hardware manufacturer<sup id=\"fnref1\"><a href=\"#fn1\">1</a></sup> even one where Arnie works.</p>\n<p><img src=\"/arnie.jpg\"></p>\n<p>Whilst it is appreciated that a trade mark owner does not always have to pursue only those infringements it has a cast-iron case in relation to, there is certainly room for some nuance on the part of the trade mark owner in determining which perceived infringements to pursue.</p>\n<p>At the same time, it is not a requirement that the trade mark owner is under a duty to pursue each and every infringement.</p>\n<p>Support for the concept that a trade mark owner is not obliged to pursue every perceived infringement can be found in <a href=\"http://www.uspto.gov/ip/TMLitigationReport_final_2011April27.pdf\">this USPTO report to Congress from 2011</a>. In their report whilst noting that there is an affirmative obligation to protect a trade mark from misuse, they noted that (at page 6):</p>\n<blockquote>\n<p>A trademark owner is not required to object to all unauthorized uses that might conflict, for not everys third-party use poses the same risk of eroding distinctiveness in the marketplace.</p>\n</blockquote>\n<p>Additionally, they included reference to the case of Chicago Bears Football Club Inc. v. 12th Man/Tennesse LLC, 83 USPQ2d 1073, 1082 (TTAB 2007), quoting McDonald's Corp. v. McKinley, 13 USPQ2d 1895, 1899-1900 (TTAB 1989) from the USPTO's Trademark Trial and Appeal Board:</p>\n<blockquote>\n<p>[I]t is entirely reasonable for the [trademark owner] to object to the use of certain marks in use on some goods which it believes would conflict with the use of its marks . . . while not objecting to use of a similar mark on other goods which it does not believe would conflict with its own use.</p>\n</blockquote>\n<p>As with the examples above, failing to pursue example B above, is unlikely to result in a reduction of the distinctiveness of the Behemoth mark for hardware manufacture and it is not reasonable to hold a belief that usage of Bohomoth for kindergartens would conflict.<sup id=\"fnref2\"><a href=\"#fn2\">2</a></sup></p>\n<p>In any event it's clear that the affirmative duty is not to pursue each and every infringement but to pursue infringements which could erode distinctiveness.</p>\n<p>Of course what cannot be ignored is that in practice there may be little difference between the two due to the determination being in the eye of beholder however a line should be drawn somewhere.</p>\n<p>In reality it would be sensible in drawing that line to take into account the likelihood of a successful lawsuit and the potential for erosion of distinctiveness before taking the decision to send out a cease and desist letter.</p>\n<p>Appropriate enforcement is a balancing act of taking action against all cases where there is a tangible threat to the trade mark owner's mark but at the same time not making threats which could be easily be rebuffed if the matter came to court or which at the very least risk attracting the ire of the court of public opinion.</p>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li>\n<p>The test for confusion is generally used where Party A's goods are similar/identical to Party B's and Party A is using a similar/identical mark. In addition to confusion, Party B can generally take action where Party A seeks to take advantage of the goodwill Party B has in its mark even where the goods are completely dissimilar. This could be the case with Bohomoth Kindergartens however, it is submitted that it would be very difficult for Behemoth to show Bohomoth is attempting to take advantage of the goodwill in the Behemoth name. <a href=\"#fnref1\">↩</a></p>\n</li>\n<li>\n<p>On a related note, acquiescence is another potential doctrine to consider, however failing to take action in example B would not constitute a waiver of a right to take action against example A. <a href=\"#fnref2\">↩</a></p>\n</div>\n</li>\n</ol>"},{"id":"transformer-remark-markdown-ast-92649b13efe9c051cf813305e5eefaeb--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Learnings-from-building-a-basic-Angular.js-app'\ntitle: 'Learnings from building a basic Angular.js app'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":119},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"I have recently been tinkering with Angular.js to build a basic application called Instok. Although I haven't really scratched the surface when it comes to Angular.js, I definitely learned a good amount about the framework and thought I'd share that in a post:","position":{"start":{"line":6,"column":1,"offset":121},"end":{"line":6,"column":261,"offset":381},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":121},"end":{"line":6,"column":261,"offset":381},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Authentication","position":{"start":{"line":8,"column":3,"offset":385},"end":{"line":8,"column":17,"offset":399},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":383},"end":{"line":8,"column":19,"offset":401},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":383},"end":{"line":8,"column":19,"offset":401},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Having worked with pure-server side authentication (in the sense that all authentication happened on the server, and if a request was successful there would be a redirect with a full page re-render) it was definitely a hurdle for me to manage authentication in Angular.","position":{"start":{"line":10,"column":1,"offset":403},"end":{"line":10,"column":270,"offset":672},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":403},"end":{"line":10,"column":270,"offset":672},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The main issue was that instead of there being a full page re-render on authentication, the server would notify the client that authentication was successful.","position":{"start":{"line":12,"column":1,"offset":674},"end":{"line":12,"column":159,"offset":832},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":674},"end":{"line":12,"column":159,"offset":832},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"However, initially I tried to stick as closely as possible to the existing server-side method as possible. This involved setting the user as a local variable (using app.locals in Express) which would be passed when the initial index.html template was rendered on the client side.","position":{"start":{"line":14,"column":1,"offset":834},"end":{"line":14,"column":280,"offset":1113},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":834},"end":{"line":14,"column":280,"offset":1113},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"However, this technique proved to be a little problematic for me on the basis that when a user logged out on the client-side, the change did not immediately follow through in the entirety of the app.","position":{"start":{"line":16,"column":1,"offset":1115},"end":{"line":16,"column":200,"offset":1314},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1115},"end":{"line":16,"column":200,"offset":1314},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Specifically, conditional views using ng-show would continue to display as if the user was still logged in. I think this may have been solved with a full page re-render but on the basis that I was using ng-view to display the bulk of the app (with the ng-show elements sitting outside the ng-view), I didn't necessarily want to do this.","position":{"start":{"line":18,"column":1,"offset":1316},"end":{"line":18,"column":337,"offset":1652},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1316},"end":{"line":18,"column":337,"offset":1652},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I think I then read about an alternative which would be to create a service to fetch the authenticated user from the server on a successful authentication. As a result, when the user logs in, on a successful request, the server responds with a 200 status, and the client then subsequently requests the logged in user's details.","position":{"start":{"line":20,"column":1,"offset":1654},"end":{"line":20,"column":328,"offset":1981},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1654},"end":{"line":20,"column":328,"offset":1981},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"On a successful request, the user is then attached to the rootScope, and therefore accessible through the Angular app.","position":{"start":{"line":22,"column":1,"offset":1983},"end":{"line":22,"column":119,"offset":2101},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1983},"end":{"line":22,"column":119,"offset":2101},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As a side note, I tried to simply send the authed user back with the login request, but for reasons I couldn't fathom this didn't work as desired. I also realise I should potentially use http interceptors to deal with the incoming requests, rather than waiting to deal with them in a service however at this stage I think I'm just pleased I've got authentication to work ok!","position":{"start":{"line":24,"column":1,"offset":2103},"end":{"line":24,"column":375,"offset":2477},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":2103},"end":{"line":24,"column":375,"offset":2477},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Restricting routes","position":{"start":{"line":26,"column":3,"offset":2481},"end":{"line":26,"column":21,"offset":2499},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":2479},"end":{"line":26,"column":23,"offset":2501},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":2479},"end":{"line":26,"column":23,"offset":2501},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initially in each controller for a particular route that I wanted to restrict access to I would make a call to the server to check if there was an authenticated user on the server-side. If there was no authed user I would redirect to a login page.","position":{"start":{"line":28,"column":1,"offset":2503},"end":{"line":28,"column":248,"offset":2750},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":2503},"end":{"line":28,"column":248,"offset":2750},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I then realised I could make use of the resolve feature on the $routeProvider to check whether the user was present and if not, redirect. In relation to the latter point, this was achieved using the following:","position":{"start":{"line":30,"column":1,"offset":2752},"end":{"line":30,"column":210,"offset":2961},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":2752},"end":{"line":30,"column":210,"offset":2961},"indent":[]}},{"type":"code","lang":null,"value":"$rootScope.$on('$routeChangeError', function(){\n    $location.path('/login')\n});","position":{"start":{"line":32,"column":1,"offset":2963},"end":{"line":34,"column":8,"offset":3055},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This works quite nicely however it's not immediately clear to me why this is necessary on the basis that the user should be attached to the $rootScope on the client-side and so I should be able to monitor whether or not there is an authenticated user without going to the server. One for a future tinkering perhaps.","position":{"start":{"line":36,"column":1,"offset":3057},"end":{"line":36,"column":316,"offset":3372},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":3057},"end":{"line":36,"column":316,"offset":3372},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Caching","position":{"start":{"line":38,"column":3,"offset":3376},"end":{"line":38,"column":10,"offset":3383},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":3374},"end":{"line":38,"column":12,"offset":3385},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":3374},"end":{"line":38,"column":12,"offset":3385},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"One problem that stumped me for some time was that in Internet Explorer 10, fetching data from the server appeared not to work as old data kept on appearing, even if a client-side input had resulted in the data changing.","position":{"start":{"line":40,"column":1,"offset":3387},"end":{"line":40,"column":221,"offset":3607},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":3387},"end":{"line":40,"column":221,"offset":3607},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Being a bit of a novice, it took a while to realise that the client was displaying cached data. After some digging, I found out that adding the following properties to the response headers would instruct the client-side not to cache results, meaning that fresh data would be displayed in each instance.","position":{"start":{"line":42,"column":1,"offset":3609},"end":{"line":42,"column":303,"offset":3911},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":3609},"end":{"line":42,"column":303,"offset":3911},"indent":[]}},{"type":"code","lang":null,"value":"res.set('Cache-Control', 'no-cache, no-store');","position":{"start":{"line":44,"column":1,"offset":3913},"end":{"line":44,"column":52,"offset":3964},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Logging","position":{"start":{"line":46,"column":3,"offset":3968},"end":{"line":46,"column":10,"offset":3975},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":3966},"end":{"line":46,"column":12,"offset":3977},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":3966},"end":{"line":46,"column":12,"offset":3977},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Not Angular.js related, however, building the app gave me an appreciation for the art of logging. When attempting to login I was periodically faced with 502 Bad Gateway errors from Nginx. I think the periodic error as opposed to the consistent error is possibly the most frustrating especially for a beginner because it makes it that much harder to track down.","position":{"start":{"line":48,"column":1,"offset":3979},"end":{"line":48,"column":361,"offset":4339},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":3979},"end":{"line":48,"column":361,"offset":4339},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Although I began to log errors arising from the Express app, and also with Nginx, this got me no closer to a solution. Eventually, I realised that because I was using Forever to keep the Express app up, there might be a solution within Forever's logs.","position":{"start":{"line":50,"column":1,"offset":4341},"end":{"line":50,"column":252,"offset":4592},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":4341},"end":{"line":50,"column":252,"offset":4592},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Sure enough, it became clear that the issue was with the MongoDB instance I was using throwing an error. Having identified the source of the problem I switched to a new instance and have had no problems since that point.","position":{"start":{"line":52,"column":1,"offset":4594},"end":{"line":52,"column":221,"offset":4814},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":4594},"end":{"line":52,"column":221,"offset":4814},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Passport.js","position":{"start":{"line":54,"column":3,"offset":4818},"end":{"line":54,"column":14,"offset":4829},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":4816},"end":{"line":54,"column":16,"offset":4831},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":4816},"end":{"line":54,"column":16,"offset":4831},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Being a novice and also not wishing to reinvent the wheel, I initially used passport.js for authentication within Express. This worked like a charm however as in perhaps a lot of cases, it seemed ever so slightly magical. I appreciate that I could have dug into the underlying code but as I'm a beginner this was a little daunting.","position":{"start":{"line":56,"column":1,"offset":4833},"end":{"line":56,"column":332,"offset":5164},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":4833},"end":{"line":56,"column":332,"offset":5164},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using Passport.js was great, however where I wanted to deviate from the functionality made available by passport things were a little tricky. I stumbled across an example of authentication on ","position":{"start":{"line":58,"column":1,"offset":5166},"end":{"line":58,"column":193,"offset":5358},"indent":[]}},{"type":"link","title":null,"url":"http://runnable.com/UTlPPF-f2W1TAAEY/login-auth-using-sessions-in-express-for-node-js-and-authentication","children":[{"type":"text","value":"Runnable","position":{"start":{"line":58,"column":194,"offset":5359},"end":{"line":58,"column":202,"offset":5367},"indent":[]}}],"position":{"start":{"line":58,"column":193,"offset":5358},"end":{"line":58,"column":309,"offset":5474},"indent":[]}},{"type":"text","value":". The 'authenticate' function in particular made a great deal more sense to me than the passport LocalStrategy example shown ","position":{"start":{"line":58,"column":309,"offset":5474},"end":{"line":58,"column":434,"offset":5599},"indent":[]}},{"type":"link","title":null,"url":"http://passportjs.org/guide/username-password/","children":[{"type":"text","value":"here","position":{"start":{"line":58,"column":435,"offset":5600},"end":{"line":58,"column":439,"offset":5604},"indent":[]}}],"position":{"start":{"line":58,"column":434,"offset":5599},"end":{"line":58,"column":488,"offset":5653},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":58,"column":488,"offset":5653},"end":{"line":58,"column":489,"offset":5654},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":5166},"end":{"line":58,"column":489,"offset":5654},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Specifically, the usage of 'fn' as a callback to pass in either the error or the user seemed much clearer than the abstraction used by passport (It wasn't immediately clear to me where the 'done' callback was actually called - although I think this may be done internally with the user automatically added to 'req.user'). This is absolutely a reflection on my status as a beginner rather than passport however.","position":{"start":{"line":60,"column":1,"offset":5656},"end":{"line":60,"column":411,"offset":6066},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":5656},"end":{"line":60,"column":411,"offset":6066},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Consequently, on the basis that my needs were relatively simple, I replaced passport with the authenticate function. I think all in all this has been working well for me thus far although I appreciate that passport can really come into its own when multiple authentication routes As a bonus, I have also been using the pattern of returning a function with either the error, or the result as a means of building up more complex functions by incorporating existing functions using this pattern.","position":{"start":{"line":62,"column":1,"offset":6068},"end":{"line":62,"column":493,"offset":6560},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":6068},"end":{"line":62,"column":493,"offset":6560},"indent":[]}},{"type":"code","lang":null,"value":"// Function\nfunction authenticate(name, pass, fn) {\n   User.find({name: name}, function(err, user){\n       if (err) { return fn(err);}\n       else  { return fn(null, user); }\n   })\n}\n\n// Usage\nauthenticate(\"username\", \"password\", function(err, user){\n    if (user){\n          req.session.regenerate(function(){\n            req.session.user = user;\n            res.status(200).send();\n          })\n      }\n      else {\n        res.status(401).send({message: \"Error\"})\n      }\n}","position":{"start":{"line":64,"column":1,"offset":6562},"end":{"line":83,"column":6,"offset":7114},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Conclusion","position":{"start":{"line":85,"column":3,"offset":7118},"end":{"line":85,"column":13,"offset":7128},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":7116},"end":{"line":85,"column":15,"offset":7130},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":7116},"end":{"line":85,"column":15,"offset":7130},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"All in all, the development process was fairly smooth and I very much enjoy using Angular and being forced to compartmentalise functionality in separate controllers and services. As outlined above, there were some moments which resulted in long delays (and scouring of Stackoverflow of course) but I am pleased with the end result.","position":{"start":{"line":87,"column":1,"offset":7132},"end":{"line":87,"column":332,"offset":7463},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":7132},"end":{"line":87,"column":332,"offset":7463},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":89,"column":1,"offset":7465}}}},{"id":"transformer-remark-markdown-html-ast-c49bcc011b1fb6797fb636cc25cc3ad7--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It seemed fitting to write the first blog on here about the process of creating the blog itself, so whilst I hope to write on a broader range of topics on the above in future, what follows below is some comment on the tools used to build this blog.","position":{"start":{"line":6,"column":1,"offset":104},"end":{"line":6,"column":249,"offset":352}}}],"position":{"start":{"line":6,"column":1,"offset":104},"end":{"line":6,"column":249,"offset":352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"CouchDB and Nano","position":{"start":{"line":8,"column":3,"offset":356},"end":{"line":8,"column":19,"offset":372}}}],"position":{"start":{"line":8,"column":1,"offset":354},"end":{"line":8,"column":21,"offset":374}}}],"position":{"start":{"line":8,"column":1,"offset":354},"end":{"line":8,"column":21,"offset":374}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Whilst the main site utilises MongoDB for persistence, when I was originally looking at options for persistence, ","position":{"start":{"line":10,"column":1,"offset":376},"end":{"line":10,"column":114,"offset":489}}},{"type":"element","tagName":"a","properties":{"href":"http://couchdb.apache.org/"},"children":[{"type":"text","value":"CouchDB","position":{"start":{"line":10,"column":115,"offset":490},"end":{"line":10,"column":122,"offset":497}}}],"position":{"start":{"line":10,"column":114,"offset":489},"end":{"line":10,"column":151,"offset":526}}},{"type":"text","value":" was of interest, so although I ending up opting for MongoDB, CouchDB always stuck with me. So as it was, when I decided it would be a good idea to get some thoughts down, I thought it would be a nice little project to put together a blog using CouchDB for persistence.","position":{"start":{"line":10,"column":151,"offset":526},"end":{"line":10,"column":420,"offset":795}}}],"position":{"start":{"line":10,"column":1,"offset":376},"end":{"line":10,"column":420,"offset":795}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When looking at how to interface with CouchDB I considered a few options. Initially, I thought it would be nice to make HTTP requests directly to a CouchDB instance. I looked at ","position":{"start":{"line":12,"column":1,"offset":797},"end":{"line":12,"column":179,"offset":975}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/iriscouch/browser-request"},"children":[{"type":"text","value":"browser-request","position":{"start":{"line":12,"column":180,"offset":976},"end":{"line":12,"column":195,"offset":991}}}],"position":{"start":{"line":12,"column":179,"offset":975},"end":{"line":12,"column":242,"offset":1038}}},{"type":"text","value":", a library from the guys at ","position":{"start":{"line":12,"column":242,"offset":1038},"end":{"line":12,"column":271,"offset":1067}}},{"type":"element","tagName":"a","properties":{"href":"http://www.iriscouch.com"},"children":[{"type":"text","value":"IrisCouch","position":{"start":{"line":12,"column":272,"offset":1068},"end":{"line":12,"column":281,"offset":1077}}}],"position":{"start":{"line":12,"column":271,"offset":1067},"end":{"line":12,"column":308,"offset":1104}}},{"type":"text","value":" (who coincidentally are the provider of the CouchDB instance used by this blog (thanks!)).","position":{"start":{"line":12,"column":308,"offset":1104},"end":{"line":12,"column":399,"offset":1195}}}],"position":{"start":{"line":12,"column":1,"offset":797},"end":{"line":12,"column":399,"offset":1195}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Having played around with the browser variant, I ended up realising that it may be less cluttered to separate out concerns and leave the client-side purely for rendering the finished product.","position":{"start":{"line":14,"column":1,"offset":1197},"end":{"line":14,"column":192,"offset":1388}}}],"position":{"start":{"line":14,"column":1,"offset":1197},"end":{"line":14,"column":192,"offset":1388}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Having decided to use Node together with CouchDB, it wasn't long before I stumbled on ","position":{"start":{"line":16,"column":1,"offset":1390},"end":{"line":16,"column":87,"offset":1476}}},{"type":"element","tagName":"a","properties":{"href":"http://github.com/dscape/nano"},"children":[{"type":"text","value":"Nano","position":{"start":{"line":16,"column":88,"offset":1477},"end":{"line":16,"column":92,"offset":1481}}}],"position":{"start":{"line":16,"column":87,"offset":1476},"end":{"line":16,"column":124,"offset":1513}}},{"type":"text","value":" by Nuno Job. Nano is a basic wrapper which simplifies greatly interactions with your CouchDB instance. There were a few points with CouchDB and Nano that were and in some cases still are stumbling for me as per the below.","position":{"start":{"line":16,"column":124,"offset":1513},"end":{"line":16,"column":346,"offset":1735}}}],"position":{"start":{"line":16,"column":1,"offset":1390},"end":{"line":16,"column":346,"offset":1735}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Creating a database","position":{"start":{"line":18,"column":3,"offset":1739},"end":{"line":18,"column":22,"offset":1758}}}],"position":{"start":{"line":18,"column":1,"offset":1737},"end":{"line":18,"column":24,"offset":1760}}}],"position":{"start":{"line":18,"column":1,"offset":1737},"end":{"line":18,"column":24,"offset":1760}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Nano exposes a .use method to specify which database you are going to use. This assumes it has previously been created, so the first step would be to create the database. However, the issue for me is that once created, you don’t want to then subsequently create a further database on each occasion. I need to therefore figure out to perhaps only create a database if it doesn’t already exist.","position":{"start":{"line":20,"column":1,"offset":1762},"end":{"line":20,"column":393,"offset":2154}}}],"position":{"start":{"line":20,"column":1,"offset":1762},"end":{"line":20,"column":393,"offset":2154}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"CouchDB views","position":{"start":{"line":22,"column":3,"offset":2158},"end":{"line":22,"column":16,"offset":2171}}}],"position":{"start":{"line":22,"column":1,"offset":2156},"end":{"line":22,"column":18,"offset":2173}}}],"position":{"start":{"line":22,"column":1,"offset":2156},"end":{"line":22,"column":18,"offset":2173}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Coming from MongoDB/Mongoose, it took me a while to realise that CouchDB uses the concept of views to process and display data from the database. A view can be as simple as the below:","position":{"start":{"line":24,"column":1,"offset":2175},"end":{"line":24,"column":184,"offset":2358}}}],"position":{"start":{"line":24,"column":1,"offset":2175},"end":{"line":24,"column":184,"offset":2358}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function(doc) {\n  emit(doc._id, doc);\n}\n"}],"position":{"start":{"line":26,"column":1,"offset":2360},"end":{"line":28,"column":6,"offset":2411}}}],"position":{"start":{"line":26,"column":1,"offset":2360},"end":{"line":28,"column":6,"offset":2411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This will simply map over the specified database and output an object for each row in the database, with that object containing the stored values. In addition to this basic functionality, you can of course do a much greater range of operations including reducing queries. More information on views can be found in this ","position":{"start":{"line":30,"column":1,"offset":2413},"end":{"line":30,"column":320,"offset":2732}}},{"type":"element","tagName":"a","properties":{"href":"http://stackoverflow.com/a/7112722/1242579"},"children":[{"type":"text","value":"great answer","position":{"start":{"line":30,"column":321,"offset":2733},"end":{"line":30,"column":333,"offset":2745}}}],"position":{"start":{"line":30,"column":320,"offset":2732},"end":{"line":30,"column":378,"offset":2790}}},{"type":"text","value":" on Stack Overflow. It is worth noting that the view must be stored directly in your CouchDB instance using the Futon manager.","position":{"start":{"line":30,"column":378,"offset":2790},"end":{"line":30,"column":504,"offset":2916}}}],"position":{"start":{"line":30,"column":1,"offset":2413},"end":{"line":30,"column":504,"offset":2916}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Updating a document","position":{"start":{"line":32,"column":3,"offset":2920},"end":{"line":32,"column":22,"offset":2939}}}],"position":{"start":{"line":32,"column":1,"offset":2918},"end":{"line":32,"column":24,"offset":2941}}}],"position":{"start":{"line":32,"column":1,"offset":2918},"end":{"line":32,"column":24,"offset":2941}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The concept of updating a document is from what I can tell frowned up on in CouchDB, rather than updating a document, you are essentially changing the pointer in your database so it point to a revised document. As a result, you have to supply the version of the document you wish to update. At the same time, I haven’t quite worked out if it is possible to only update certain values in an entry so at present, in addition to any amended values, I also supply the unchanged values. This to me is rather unwieldy.","position":{"start":{"line":34,"column":1,"offset":2943},"end":{"line":34,"column":513,"offset":3455}}}],"position":{"start":{"line":34,"column":1,"offset":2943},"end":{"line":34,"column":513,"offset":3455}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Pjax","position":{"start":{"line":36,"column":3,"offset":3459},"end":{"line":36,"column":7,"offset":3463}}}],"position":{"start":{"line":36,"column":1,"offset":3457},"end":{"line":36,"column":9,"offset":3465}}}],"position":{"start":{"line":36,"column":1,"offset":3457},"end":{"line":36,"column":9,"offset":3465}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The site also uses ","position":{"start":{"line":38,"column":1,"offset":3467},"end":{"line":38,"column":20,"offset":3486}}},{"type":"element","tagName":"a","properties":{"href":"http://pjax.heroku.com"},"children":[{"type":"text","value":"Pjax","position":{"start":{"line":38,"column":21,"offset":3487},"end":{"line":38,"column":25,"offset":3491}}}],"position":{"start":{"line":38,"column":20,"offset":3486},"end":{"line":38,"column":50,"offset":3516}}},{"type":"text","value":". This tool grabs html content from the server via AJAX but at the same time uses html5 pushstate to alter the url accordingly. As the details at the link states this gives the impression of a speeded up site as the whole page isn’t being reloaded. One issue for me with this tool is that when I edit a page and import content from the server, it doesn’t render correctly. As a result, I have disabled the pjax functionality for the edit page.","position":{"start":{"line":38,"column":50,"offset":3516},"end":{"line":38,"column":493,"offset":3959}}}],"position":{"start":{"line":38,"column":1,"offset":3467},"end":{"line":38,"column":493,"offset":3959}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Another issue I haven't worked out is how to automatically enable pjax. Although I'm sure it's trivial, in the demo it is dealt via a checkbox (as this enables you to determine performance with and without pjax enabled).","position":{"start":{"line":40,"column":1,"offset":3961},"end":{"line":40,"column":221,"offset":4181}}}],"position":{"start":{"line":40,"column":1,"offset":3961},"end":{"line":40,"column":221,"offset":4181}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To get Jquery-Pjax working with Express 3 I revised the demo ","position":{"start":{"line":42,"column":1,"offset":4183},"end":{"line":42,"column":62,"offset":4244}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/dakatsuka/express-pjax"},"children":[{"type":"text","value":"here","position":{"start":{"line":42,"column":63,"offset":4245},"end":{"line":42,"column":67,"offset":4249}}}],"position":{"start":{"line":42,"column":62,"offset":4244},"end":{"line":42,"column":111,"offset":4293}}},{"type":"text","value":" to use express-partials, which allows the use of layouts with Express 3","position":{"start":{"line":42,"column":111,"offset":4293},"end":{"line":42,"column":183,"offset":4365}}},{"type":"text","value":".","position":{"start":{"line":42,"column":183,"offset":4365},"end":{"line":42,"column":185,"offset":4367}}},{"type":"text","value":" This is because pjax works by injecting the html from the server into a specified section of the layout.","position":{"start":{"line":42,"column":185,"offset":4367},"end":{"line":42,"column":290,"offset":4472}}}],"position":{"start":{"line":42,"column":1,"offset":4183},"end":{"line":42,"column":290,"offset":4472}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Concluding thoughts","position":{"start":{"line":44,"column":3,"offset":4476},"end":{"line":44,"column":22,"offset":4495}}}],"position":{"start":{"line":44,"column":1,"offset":4474},"end":{"line":44,"column":24,"offset":4497}}}],"position":{"start":{"line":44,"column":1,"offset":4474},"end":{"line":44,"column":24,"offset":4497}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The code for the small blog I have created is available ","position":{"start":{"line":46,"column":1,"offset":4499},"end":{"line":46,"column":57,"offset":4555}}},{"type":"element","tagName":"a","properties":{"href":"http://www.github.com/grabbeh/nanoblog"},"children":[{"type":"text","value":"on Github","position":{"start":{"line":46,"column":58,"offset":4556},"end":{"line":46,"column":67,"offset":4565}}}],"position":{"start":{"line":46,"column":57,"offset":4555},"end":{"line":46,"column":108,"offset":4606}}},{"type":"text","value":". It is a work in progress and I hope to try to resolve some of the unresolved issues above (or some kindly person will stumble on this blog and enlighten me!).","position":{"start":{"line":46,"column":108,"offset":4606},"end":{"line":46,"column":268,"offset":4766}}}],"position":{"start":{"line":46,"column":1,"offset":4499},"end":{"line":46,"column":268,"offset":4766}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":48,"column":1,"offset":4768}}}},{"id":"transformer-remark-markdown-html-c49bcc011b1fb6797fb636cc25cc3ad7--","value":"<p>It seemed fitting to write the first blog on here about the process of creating the blog itself, so whilst I hope to write on a broader range of topics on the above in future, what follows below is some comment on the tools used to build this blog.</p>\n<p><strong>CouchDB and Nano</strong></p>\n<p>Whilst the main site utilises MongoDB for persistence, when I was originally looking at options for persistence, <a href=\"http://couchdb.apache.org/\">CouchDB</a> was of interest, so although I ending up opting for MongoDB, CouchDB always stuck with me. So as it was, when I decided it would be a good idea to get some thoughts down, I thought it would be a nice little project to put together a blog using CouchDB for persistence.</p>\n<p>When looking at how to interface with CouchDB I considered a few options. Initially, I thought it would be nice to make HTTP requests directly to a CouchDB instance. I looked at <a href=\"https://github.com/iriscouch/browser-request\">browser-request</a>, a library from the guys at <a href=\"http://www.iriscouch.com\">IrisCouch</a> (who coincidentally are the provider of the CouchDB instance used by this blog (thanks!)).</p>\n<p>Having played around with the browser variant, I ended up realising that it may be less cluttered to separate out concerns and leave the client-side purely for rendering the finished product.</p>\n<p>Having decided to use Node together with CouchDB, it wasn't long before I stumbled on <a href=\"http://github.com/dscape/nano\">Nano</a> by Nuno Job. Nano is a basic wrapper which simplifies greatly interactions with your CouchDB instance. There were a few points with CouchDB and Nano that were and in some cases still are stumbling for me as per the below.</p>\n<p><strong>Creating a database</strong></p>\n<p>Nano exposes a .use method to specify which database you are going to use. This assumes it has previously been created, so the first step would be to create the database. However, the issue for me is that once created, you don’t want to then subsequently create a further database on each occasion. I need to therefore figure out to perhaps only create a database if it doesn’t already exist.</p>\n<p><strong>CouchDB views</strong></p>\n<p>Coming from MongoDB/Mongoose, it took me a while to realise that CouchDB uses the concept of views to process and display data from the database. A view can be as simple as the below:</p>\n<pre><code>function(doc) {\n  emit(doc._id, doc);\n}\n</code></pre>\n<p>This will simply map over the specified database and output an object for each row in the database, with that object containing the stored values. In addition to this basic functionality, you can of course do a much greater range of operations including reducing queries. More information on views can be found in this <a href=\"http://stackoverflow.com/a/7112722/1242579\">great answer</a> on Stack Overflow. It is worth noting that the view must be stored directly in your CouchDB instance using the Futon manager.</p>\n<p><strong>Updating a document</strong></p>\n<p>The concept of updating a document is from what I can tell frowned up on in CouchDB, rather than updating a document, you are essentially changing the pointer in your database so it point to a revised document. As a result, you have to supply the version of the document you wish to update. At the same time, I haven’t quite worked out if it is possible to only update certain values in an entry so at present, in addition to any amended values, I also supply the unchanged values. This to me is rather unwieldy.</p>\n<p><strong>Pjax</strong></p>\n<p>The site also uses <a href=\"http://pjax.heroku.com\">Pjax</a>. This tool grabs html content from the server via AJAX but at the same time uses html5 pushstate to alter the url accordingly. As the details at the link states this gives the impression of a speeded up site as the whole page isn’t being reloaded. One issue for me with this tool is that when I edit a page and import content from the server, it doesn’t render correctly. As a result, I have disabled the pjax functionality for the edit page.</p>\n<p>Another issue I haven't worked out is how to automatically enable pjax. Although I'm sure it's trivial, in the demo it is dealt via a checkbox (as this enables you to determine performance with and without pjax enabled).</p>\n<p>To get Jquery-Pjax working with Express 3 I revised the demo <a href=\"https://github.com/dakatsuka/express-pjax\">here</a> to use express-partials, which allows the use of layouts with Express 3. This is because pjax works by injecting the html from the server into a specified section of the layout.</p>\n<p><strong>Concluding thoughts</strong></p>\n<p>The code for the small blog I have created is available <a href=\"http://www.github.com/grabbeh/nanoblog\">on Github</a>. It is a work in progress and I hope to try to resolve some of the unresolved issues above (or some kindly person will stumble on this blog and enlighten me!).</p>"},{"id":"transformer-remark-markdown-html-ast-92649b13efe9c051cf813305e5eefaeb--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I have recently been tinkering with Angular.js to build a basic application called Instok. Although I haven't really scratched the surface when it comes to Angular.js, I definitely learned a good amount about the framework and thought I'd share that in a post:","position":{"start":{"line":6,"column":1,"offset":121},"end":{"line":6,"column":261,"offset":381}}}],"position":{"start":{"line":6,"column":1,"offset":121},"end":{"line":6,"column":261,"offset":381}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Authentication","position":{"start":{"line":8,"column":3,"offset":385},"end":{"line":8,"column":17,"offset":399}}}],"position":{"start":{"line":8,"column":1,"offset":383},"end":{"line":8,"column":19,"offset":401}}}],"position":{"start":{"line":8,"column":1,"offset":383},"end":{"line":8,"column":19,"offset":401}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Having worked with pure-server side authentication (in the sense that all authentication happened on the server, and if a request was successful there would be a redirect with a full page re-render) it was definitely a hurdle for me to manage authentication in Angular.","position":{"start":{"line":10,"column":1,"offset":403},"end":{"line":10,"column":270,"offset":672}}}],"position":{"start":{"line":10,"column":1,"offset":403},"end":{"line":10,"column":270,"offset":672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The main issue was that instead of there being a full page re-render on authentication, the server would notify the client that authentication was successful.","position":{"start":{"line":12,"column":1,"offset":674},"end":{"line":12,"column":159,"offset":832}}}],"position":{"start":{"line":12,"column":1,"offset":674},"end":{"line":12,"column":159,"offset":832}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However, initially I tried to stick as closely as possible to the existing server-side method as possible. This involved setting the user as a local variable (using app.locals in Express) which would be passed when the initial index.html template was rendered on the client side.","position":{"start":{"line":14,"column":1,"offset":834},"end":{"line":14,"column":280,"offset":1113}}}],"position":{"start":{"line":14,"column":1,"offset":834},"end":{"line":14,"column":280,"offset":1113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However, this technique proved to be a little problematic for me on the basis that when a user logged out on the client-side, the change did not immediately follow through in the entirety of the app.","position":{"start":{"line":16,"column":1,"offset":1115},"end":{"line":16,"column":200,"offset":1314}}}],"position":{"start":{"line":16,"column":1,"offset":1115},"end":{"line":16,"column":200,"offset":1314}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Specifically, conditional views using ng-show would continue to display as if the user was still logged in. I think this may have been solved with a full page re-render but on the basis that I was using ng-view to display the bulk of the app (with the ng-show elements sitting outside the ng-view), I didn't necessarily want to do this.","position":{"start":{"line":18,"column":1,"offset":1316},"end":{"line":18,"column":337,"offset":1652}}}],"position":{"start":{"line":18,"column":1,"offset":1316},"end":{"line":18,"column":337,"offset":1652}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I think I then read about an alternative which would be to create a service to fetch the authenticated user from the server on a successful authentication. As a result, when the user logs in, on a successful request, the server responds with a 200 status, and the client then subsequently requests the logged in user's details.","position":{"start":{"line":20,"column":1,"offset":1654},"end":{"line":20,"column":328,"offset":1981}}}],"position":{"start":{"line":20,"column":1,"offset":1654},"end":{"line":20,"column":328,"offset":1981}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"On a successful request, the user is then attached to the rootScope, and therefore accessible through the Angular app.","position":{"start":{"line":22,"column":1,"offset":1983},"end":{"line":22,"column":119,"offset":2101}}}],"position":{"start":{"line":22,"column":1,"offset":1983},"end":{"line":22,"column":119,"offset":2101}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As a side note, I tried to simply send the authed user back with the login request, but for reasons I couldn't fathom this didn't work as desired. I also realise I should potentially use http interceptors to deal with the incoming requests, rather than waiting to deal with them in a service however at this stage I think I'm just pleased I've got authentication to work ok!","position":{"start":{"line":24,"column":1,"offset":2103},"end":{"line":24,"column":375,"offset":2477}}}],"position":{"start":{"line":24,"column":1,"offset":2103},"end":{"line":24,"column":375,"offset":2477}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Restricting routes","position":{"start":{"line":26,"column":3,"offset":2481},"end":{"line":26,"column":21,"offset":2499}}}],"position":{"start":{"line":26,"column":1,"offset":2479},"end":{"line":26,"column":23,"offset":2501}}}],"position":{"start":{"line":26,"column":1,"offset":2479},"end":{"line":26,"column":23,"offset":2501}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Initially in each controller for a particular route that I wanted to restrict access to I would make a call to the server to check if there was an authenticated user on the server-side. If there was no authed user I would redirect to a login page.","position":{"start":{"line":28,"column":1,"offset":2503},"end":{"line":28,"column":248,"offset":2750}}}],"position":{"start":{"line":28,"column":1,"offset":2503},"end":{"line":28,"column":248,"offset":2750}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I then realised I could make use of the resolve feature on the $routeProvider to check whether the user was present and if not, redirect. In relation to the latter point, this was achieved using the following:","position":{"start":{"line":30,"column":1,"offset":2752},"end":{"line":30,"column":210,"offset":2961}}}],"position":{"start":{"line":30,"column":1,"offset":2752},"end":{"line":30,"column":210,"offset":2961}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"$rootScope.$on('$routeChangeError', function(){\n    $location.path('/login')\n});\n"}],"position":{"start":{"line":32,"column":1,"offset":2963},"end":{"line":34,"column":8,"offset":3055}}}],"position":{"start":{"line":32,"column":1,"offset":2963},"end":{"line":34,"column":8,"offset":3055}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This works quite nicely however it's not immediately clear to me why this is necessary on the basis that the user should be attached to the $rootScope on the client-side and so I should be able to monitor whether or not there is an authenticated user without going to the server. One for a future tinkering perhaps.","position":{"start":{"line":36,"column":1,"offset":3057},"end":{"line":36,"column":316,"offset":3372}}}],"position":{"start":{"line":36,"column":1,"offset":3057},"end":{"line":36,"column":316,"offset":3372}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Caching","position":{"start":{"line":38,"column":3,"offset":3376},"end":{"line":38,"column":10,"offset":3383}}}],"position":{"start":{"line":38,"column":1,"offset":3374},"end":{"line":38,"column":12,"offset":3385}}}],"position":{"start":{"line":38,"column":1,"offset":3374},"end":{"line":38,"column":12,"offset":3385}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One problem that stumped me for some time was that in Internet Explorer 10, fetching data from the server appeared not to work as old data kept on appearing, even if a client-side input had resulted in the data changing.","position":{"start":{"line":40,"column":1,"offset":3387},"end":{"line":40,"column":221,"offset":3607}}}],"position":{"start":{"line":40,"column":1,"offset":3387},"end":{"line":40,"column":221,"offset":3607}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Being a bit of a novice, it took a while to realise that the client was displaying cached data. After some digging, I found out that adding the following properties to the response headers would instruct the client-side not to cache results, meaning that fresh data would be displayed in each instance.","position":{"start":{"line":42,"column":1,"offset":3609},"end":{"line":42,"column":303,"offset":3911}}}],"position":{"start":{"line":42,"column":1,"offset":3609},"end":{"line":42,"column":303,"offset":3911}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"res.set('Cache-Control', 'no-cache, no-store');\n"}],"position":{"start":{"line":44,"column":1,"offset":3913},"end":{"line":44,"column":52,"offset":3964}}}],"position":{"start":{"line":44,"column":1,"offset":3913},"end":{"line":44,"column":52,"offset":3964}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Logging","position":{"start":{"line":46,"column":3,"offset":3968},"end":{"line":46,"column":10,"offset":3975}}}],"position":{"start":{"line":46,"column":1,"offset":3966},"end":{"line":46,"column":12,"offset":3977}}}],"position":{"start":{"line":46,"column":1,"offset":3966},"end":{"line":46,"column":12,"offset":3977}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Not Angular.js related, however, building the app gave me an appreciation for the art of logging. When attempting to login I was periodically faced with 502 Bad Gateway errors from Nginx. I think the periodic error as opposed to the consistent error is possibly the most frustrating especially for a beginner because it makes it that much harder to track down.","position":{"start":{"line":48,"column":1,"offset":3979},"end":{"line":48,"column":361,"offset":4339}}}],"position":{"start":{"line":48,"column":1,"offset":3979},"end":{"line":48,"column":361,"offset":4339}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Although I began to log errors arising from the Express app, and also with Nginx, this got me no closer to a solution. Eventually, I realised that because I was using Forever to keep the Express app up, there might be a solution within Forever's logs.","position":{"start":{"line":50,"column":1,"offset":4341},"end":{"line":50,"column":252,"offset":4592}}}],"position":{"start":{"line":50,"column":1,"offset":4341},"end":{"line":50,"column":252,"offset":4592}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sure enough, it became clear that the issue was with the MongoDB instance I was using throwing an error. Having identified the source of the problem I switched to a new instance and have had no problems since that point.","position":{"start":{"line":52,"column":1,"offset":4594},"end":{"line":52,"column":221,"offset":4814}}}],"position":{"start":{"line":52,"column":1,"offset":4594},"end":{"line":52,"column":221,"offset":4814}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Passport.js","position":{"start":{"line":54,"column":3,"offset":4818},"end":{"line":54,"column":14,"offset":4829}}}],"position":{"start":{"line":54,"column":1,"offset":4816},"end":{"line":54,"column":16,"offset":4831}}}],"position":{"start":{"line":54,"column":1,"offset":4816},"end":{"line":54,"column":16,"offset":4831}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Being a novice and also not wishing to reinvent the wheel, I initially used passport.js for authentication within Express. This worked like a charm however as in perhaps a lot of cases, it seemed ever so slightly magical. I appreciate that I could have dug into the underlying code but as I'm a beginner this was a little daunting.","position":{"start":{"line":56,"column":1,"offset":4833},"end":{"line":56,"column":332,"offset":5164}}}],"position":{"start":{"line":56,"column":1,"offset":4833},"end":{"line":56,"column":332,"offset":5164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using Passport.js was great, however where I wanted to deviate from the functionality made available by passport things were a little tricky. I stumbled across an example of authentication on ","position":{"start":{"line":58,"column":1,"offset":5166},"end":{"line":58,"column":193,"offset":5358}}},{"type":"element","tagName":"a","properties":{"href":"http://runnable.com/UTlPPF-f2W1TAAEY/login-auth-using-sessions-in-express-for-node-js-and-authentication"},"children":[{"type":"text","value":"Runnable","position":{"start":{"line":58,"column":194,"offset":5359},"end":{"line":58,"column":202,"offset":5367}}}],"position":{"start":{"line":58,"column":193,"offset":5358},"end":{"line":58,"column":309,"offset":5474}}},{"type":"text","value":". The 'authenticate' function in particular made a great deal more sense to me than the passport LocalStrategy example shown ","position":{"start":{"line":58,"column":309,"offset":5474},"end":{"line":58,"column":434,"offset":5599}}},{"type":"element","tagName":"a","properties":{"href":"http://passportjs.org/guide/username-password/"},"children":[{"type":"text","value":"here","position":{"start":{"line":58,"column":435,"offset":5600},"end":{"line":58,"column":439,"offset":5604}}}],"position":{"start":{"line":58,"column":434,"offset":5599},"end":{"line":58,"column":488,"offset":5653}}},{"type":"text","value":".","position":{"start":{"line":58,"column":488,"offset":5653},"end":{"line":58,"column":489,"offset":5654}}}],"position":{"start":{"line":58,"column":1,"offset":5166},"end":{"line":58,"column":489,"offset":5654}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Specifically, the usage of 'fn' as a callback to pass in either the error or the user seemed much clearer than the abstraction used by passport (It wasn't immediately clear to me where the 'done' callback was actually called - although I think this may be done internally with the user automatically added to 'req.user'). This is absolutely a reflection on my status as a beginner rather than passport however.","position":{"start":{"line":60,"column":1,"offset":5656},"end":{"line":60,"column":411,"offset":6066}}}],"position":{"start":{"line":60,"column":1,"offset":5656},"end":{"line":60,"column":411,"offset":6066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consequently, on the basis that my needs were relatively simple, I replaced passport with the authenticate function. I think all in all this has been working well for me thus far although I appreciate that passport can really come into its own when multiple authentication routes As a bonus, I have also been using the pattern of returning a function with either the error, or the result as a means of building up more complex functions by incorporating existing functions using this pattern.","position":{"start":{"line":62,"column":1,"offset":6068},"end":{"line":62,"column":493,"offset":6560}}}],"position":{"start":{"line":62,"column":1,"offset":6068},"end":{"line":62,"column":493,"offset":6560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"// Function\nfunction authenticate(name, pass, fn) {\n   User.find({name: name}, function(err, user){\n       if (err) { return fn(err);}\n       else  { return fn(null, user); }\n   })\n}\n\n// Usage\nauthenticate(\"username\", \"password\", function(err, user){\n    if (user){\n          req.session.regenerate(function(){\n            req.session.user = user;\n            res.status(200).send();\n          })\n      }\n      else {\n        res.status(401).send({message: \"Error\"})\n      }\n}\n"}],"position":{"start":{"line":64,"column":1,"offset":6562},"end":{"line":83,"column":6,"offset":7114}}}],"position":{"start":{"line":64,"column":1,"offset":6562},"end":{"line":83,"column":6,"offset":7114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Conclusion","position":{"start":{"line":85,"column":3,"offset":7118},"end":{"line":85,"column":13,"offset":7128}}}],"position":{"start":{"line":85,"column":1,"offset":7116},"end":{"line":85,"column":15,"offset":7130}}}],"position":{"start":{"line":85,"column":1,"offset":7116},"end":{"line":85,"column":15,"offset":7130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All in all, the development process was fairly smooth and I very much enjoy using Angular and being forced to compartmentalise functionality in separate controllers and services. As outlined above, there were some moments which resulted in long delays (and scouring of Stackoverflow of course) but I am pleased with the end result.","position":{"start":{"line":87,"column":1,"offset":7132},"end":{"line":87,"column":332,"offset":7463}}}],"position":{"start":{"line":87,"column":1,"offset":7132},"end":{"line":87,"column":332,"offset":7463}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":89,"column":1,"offset":7465}}}},{"id":"transformer-remark-markdown-html-92649b13efe9c051cf813305e5eefaeb--","value":"<p>I have recently been tinkering with Angular.js to build a basic application called Instok. Although I haven't really scratched the surface when it comes to Angular.js, I definitely learned a good amount about the framework and thought I'd share that in a post:</p>\n<p><strong>Authentication</strong></p>\n<p>Having worked with pure-server side authentication (in the sense that all authentication happened on the server, and if a request was successful there would be a redirect with a full page re-render) it was definitely a hurdle for me to manage authentication in Angular.</p>\n<p>The main issue was that instead of there being a full page re-render on authentication, the server would notify the client that authentication was successful.</p>\n<p>However, initially I tried to stick as closely as possible to the existing server-side method as possible. This involved setting the user as a local variable (using app.locals in Express) which would be passed when the initial index.html template was rendered on the client side.</p>\n<p>However, this technique proved to be a little problematic for me on the basis that when a user logged out on the client-side, the change did not immediately follow through in the entirety of the app.</p>\n<p>Specifically, conditional views using ng-show would continue to display as if the user was still logged in. I think this may have been solved with a full page re-render but on the basis that I was using ng-view to display the bulk of the app (with the ng-show elements sitting outside the ng-view), I didn't necessarily want to do this.</p>\n<p>I think I then read about an alternative which would be to create a service to fetch the authenticated user from the server on a successful authentication. As a result, when the user logs in, on a successful request, the server responds with a 200 status, and the client then subsequently requests the logged in user's details.</p>\n<p>On a successful request, the user is then attached to the rootScope, and therefore accessible through the Angular app.</p>\n<p>As a side note, I tried to simply send the authed user back with the login request, but for reasons I couldn't fathom this didn't work as desired. I also realise I should potentially use http interceptors to deal with the incoming requests, rather than waiting to deal with them in a service however at this stage I think I'm just pleased I've got authentication to work ok!</p>\n<p><strong>Restricting routes</strong></p>\n<p>Initially in each controller for a particular route that I wanted to restrict access to I would make a call to the server to check if there was an authenticated user on the server-side. If there was no authed user I would redirect to a login page.</p>\n<p>I then realised I could make use of the resolve feature on the $routeProvider to check whether the user was present and if not, redirect. In relation to the latter point, this was achieved using the following:</p>\n<pre><code>$rootScope.$on('$routeChangeError', function(){\n    $location.path('/login')\n});\n</code></pre>\n<p>This works quite nicely however it's not immediately clear to me why this is necessary on the basis that the user should be attached to the $rootScope on the client-side and so I should be able to monitor whether or not there is an authenticated user without going to the server. One for a future tinkering perhaps.</p>\n<p><strong>Caching</strong></p>\n<p>One problem that stumped me for some time was that in Internet Explorer 10, fetching data from the server appeared not to work as old data kept on appearing, even if a client-side input had resulted in the data changing.</p>\n<p>Being a bit of a novice, it took a while to realise that the client was displaying cached data. After some digging, I found out that adding the following properties to the response headers would instruct the client-side not to cache results, meaning that fresh data would be displayed in each instance.</p>\n<pre><code>res.set('Cache-Control', 'no-cache, no-store');\n</code></pre>\n<p><strong>Logging</strong></p>\n<p>Not Angular.js related, however, building the app gave me an appreciation for the art of logging. When attempting to login I was periodically faced with 502 Bad Gateway errors from Nginx. I think the periodic error as opposed to the consistent error is possibly the most frustrating especially for a beginner because it makes it that much harder to track down.</p>\n<p>Although I began to log errors arising from the Express app, and also with Nginx, this got me no closer to a solution. Eventually, I realised that because I was using Forever to keep the Express app up, there might be a solution within Forever's logs.</p>\n<p>Sure enough, it became clear that the issue was with the MongoDB instance I was using throwing an error. Having identified the source of the problem I switched to a new instance and have had no problems since that point.</p>\n<p><strong>Passport.js</strong></p>\n<p>Being a novice and also not wishing to reinvent the wheel, I initially used passport.js for authentication within Express. This worked like a charm however as in perhaps a lot of cases, it seemed ever so slightly magical. I appreciate that I could have dug into the underlying code but as I'm a beginner this was a little daunting.</p>\n<p>Using Passport.js was great, however where I wanted to deviate from the functionality made available by passport things were a little tricky. I stumbled across an example of authentication on <a href=\"http://runnable.com/UTlPPF-f2W1TAAEY/login-auth-using-sessions-in-express-for-node-js-and-authentication\">Runnable</a>. The 'authenticate' function in particular made a great deal more sense to me than the passport LocalStrategy example shown <a href=\"http://passportjs.org/guide/username-password/\">here</a>.</p>\n<p>Specifically, the usage of 'fn' as a callback to pass in either the error or the user seemed much clearer than the abstraction used by passport (It wasn't immediately clear to me where the 'done' callback was actually called - although I think this may be done internally with the user automatically added to 'req.user'). This is absolutely a reflection on my status as a beginner rather than passport however.</p>\n<p>Consequently, on the basis that my needs were relatively simple, I replaced passport with the authenticate function. I think all in all this has been working well for me thus far although I appreciate that passport can really come into its own when multiple authentication routes As a bonus, I have also been using the pattern of returning a function with either the error, or the result as a means of building up more complex functions by incorporating existing functions using this pattern.</p>\n<pre><code>// Function\nfunction authenticate(name, pass, fn) {\n   User.find({name: name}, function(err, user){\n       if (err) { return fn(err);}\n       else  { return fn(null, user); }\n   })\n}\n\n// Usage\nauthenticate(\"username\", \"password\", function(err, user){\n    if (user){\n          req.session.regenerate(function(){\n            req.session.user = user;\n            res.status(200).send();\n          })\n      }\n      else {\n        res.status(401).send({message: \"Error\"})\n      }\n}\n</code></pre>\n<p><strong>Conclusion</strong></p>\n<p>All in all, the development process was fairly smooth and I very much enjoy using Angular and being forced to compartmentalise functionality in separate controllers and services. As outlined above, there were some moments which resulted in long delays (and scouring of Stackoverflow of course) but I am pleased with the end result.</p>"},{"id":"transformer-remark-markdown-ast-035075adbef62ee931a80bae3db3de27--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Image-uploads-and-resizing-with-Transloadit'\ntitle: 'Image uploads and resizing with Transloadit'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":113},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Giving people the ability to upload photos has been on my mind for a while because photos are a great way to help evoke memories and also to give others a better idea of what a route involves (although I guess there’s always Google Street View for that).","position":{"start":{"line":6,"column":1,"offset":115},"end":{"line":6,"column":255,"offset":369},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":115},"end":{"line":6,"column":255,"offset":369},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I had pondered different methods to upload images and in the end I’m now using a third party service in the form of ","position":{"start":{"line":8,"column":1,"offset":371},"end":{"line":8,"column":117,"offset":487},"indent":[]}},{"type":"link","title":null,"url":"http://www.transloadit.com","children":[{"type":"text","value":"Transloadit","position":{"start":{"line":8,"column":118,"offset":488},"end":{"line":8,"column":129,"offset":499},"indent":[]}}],"position":{"start":{"line":8,"column":117,"offset":487},"end":{"line":8,"column":158,"offset":528},"indent":[]}},{"type":"text","value":". Before starting with image uploads I was a little hesitant that it would be a task too complex for my beginner level experience so although I have previously preferred at certain times to build functionality myself, I was definitely interested in seeing how a third party service could make things easier for me.","position":{"start":{"line":8,"column":158,"offset":528},"end":{"line":8,"column":472,"offset":842},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":371},"end":{"line":8,"column":472,"offset":842},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Transloadit has its own servers which you can use for image processing (in Routebop’s case resizing the image to a thumbnail before uploading both to an S3 instance. In terms of the front-end code, and on a basic level, Transloadit requires you to incorporate hidden fields in your file upload forms which allow you to send data to Transloadit’s servers detailing how you want images/media to be processed. This process blocks the normal submission of the form and once processed, links to the processed images are returned in a hidden form field and the whole form is then submitted to your server as usual.","position":{"start":{"line":10,"column":1,"offset":844},"end":{"line":10,"column":609,"offset":1452},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":844},"end":{"line":10,"column":609,"offset":1452},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"However, because Routebop just deals with submitting data via jQuery’s .ajax functionality, I used the Transloadit’s handily provided jQuery plugin to disable automatic submission of the form following Transloadit’s completion of its magic. Instead, on completion, the urls for the images as stored on S3 are firstly used to render a thumbnail on the routebop.com/new page and also stored in an object and pushed into an images array, ready to be submitted with the rest of the route when the user is ready.","position":{"start":{"line":12,"column":1,"offset":1454},"end":{"line":12,"column":508,"offset":1961},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":1454},"end":{"line":12,"column":508,"offset":1961},"indent":[]}},{"type":"code","lang":null,"value":"$('#MyForm').transloadit({ \n  wait: true, \n  autoSubmit: false, \n  modal: false, \n  onProgress: function(bytesReceived, bytesExpected){ \n    $('#progress').text(\"Progress: \" + (bytesReceived / bytesExpected * 100)\n    .toFixed(2)+'%'); \n  }, \n  onSuccess: function(assembly){ \n    $('#progress').text(\"\"); \n    var thumburl = assembly.results.thumb[0].url; \n    var mainurl = assembly.results[':original'][0].url; \n    $('#thumb').append(\"\" + \"x\"); \n    $('#thumb').find('span').addClass('removeImage'); \n    var imgUrls = {}; \n    imgUrls['thumburl'] = thumburl; \n    imgUrls['mainurl'] = mainurl; \n    images.push(imgUrls); \n    } \n}); ","position":{"start":{"line":14,"column":1,"offset":1963},"end":{"line":33,"column":9,"offset":2681},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In addition to adding the thumbnail from Transloadit into the page, I also wanted to add a 'x' button so users could remove the offending image. Mainly because I was lazy, instead of using an image of a red cross (to be clicked when a user wants to remove an uploaded image), I created a separate span and used a negative margin to push the ","position":{"start":{"line":35,"column":1,"offset":2683},"end":{"line":35,"column":342,"offset":3024},"indent":[]}},{"type":"html","value":"<span>","position":{"start":{"line":35,"column":342,"offset":3024},"end":{"line":35,"column":348,"offset":3030},"indent":[]}},{"type":"text","value":"x","position":{"start":{"line":35,"column":348,"offset":3030},"end":{"line":35,"column":349,"offset":3031},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":35,"column":349,"offset":3031},"end":{"line":35,"column":356,"offset":3038},"indent":[]}},{"type":"text","value":" over the image in question. It doesn’t look quite as good as an image but I think it doesn’t look so bad (a fully circular span would be nice!). The code for that CSS is below.","position":{"start":{"line":35,"column":356,"offset":3038},"end":{"line":35,"column":533,"offset":3215},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":2683},"end":{"line":35,"column":533,"offset":3215},"indent":[]}},{"type":"code","lang":null,"value":".removeImage {\n  font-weight: bold;\n  background: red;\n  color: white;\n  font-family: arial;\n  font-size: 16px;\n  margin-top: 0px;\n  margin-right: 12px;\n  margin-left: -8px;\n  margin-bottom: 7px;\n  border-radius: 15px;\n  padding: 3px;\n}","position":{"start":{"line":37,"column":1,"offset":3217},"end":{"line":49,"column":6,"offset":3505},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Overall, I found incorporating Transloadit very straightforward and although I suspect I’m using it in a slightly different manner than intended, it’s working out well for me. Although it would definitely be interesting to explore building functionality to upload files directly to my S3 instance.","position":{"start":{"line":51,"column":1,"offset":3507},"end":{"line":51,"column":298,"offset":3804},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":3507},"end":{"line":51,"column":298,"offset":3804},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":53,"column":1,"offset":3806}}}},{"id":"transformer-remark-markdown-html-ast-035075adbef62ee931a80bae3db3de27--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Giving people the ability to upload photos has been on my mind for a while because photos are a great way to help evoke memories and also to give others a better idea of what a route involves (although I guess there’s always Google Street View for that).","position":{"start":{"line":6,"column":1,"offset":115},"end":{"line":6,"column":255,"offset":369}}}],"position":{"start":{"line":6,"column":1,"offset":115},"end":{"line":6,"column":255,"offset":369}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I had pondered different methods to upload images and in the end I’m now using a third party service in the form of ","position":{"start":{"line":8,"column":1,"offset":371},"end":{"line":8,"column":117,"offset":487}}},{"type":"element","tagName":"a","properties":{"href":"http://www.transloadit.com"},"children":[{"type":"text","value":"Transloadit","position":{"start":{"line":8,"column":118,"offset":488},"end":{"line":8,"column":129,"offset":499}}}],"position":{"start":{"line":8,"column":117,"offset":487},"end":{"line":8,"column":158,"offset":528}}},{"type":"text","value":". Before starting with image uploads I was a little hesitant that it would be a task too complex for my beginner level experience so although I have previously preferred at certain times to build functionality myself, I was definitely interested in seeing how a third party service could make things easier for me.","position":{"start":{"line":8,"column":158,"offset":528},"end":{"line":8,"column":472,"offset":842}}}],"position":{"start":{"line":8,"column":1,"offset":371},"end":{"line":8,"column":472,"offset":842}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Transloadit has its own servers which you can use for image processing (in Routebop’s case resizing the image to a thumbnail before uploading both to an S3 instance. In terms of the front-end code, and on a basic level, Transloadit requires you to incorporate hidden fields in your file upload forms which allow you to send data to Transloadit’s servers detailing how you want images/media to be processed. This process blocks the normal submission of the form and once processed, links to the processed images are returned in a hidden form field and the whole form is then submitted to your server as usual.","position":{"start":{"line":10,"column":1,"offset":844},"end":{"line":10,"column":609,"offset":1452}}}],"position":{"start":{"line":10,"column":1,"offset":844},"end":{"line":10,"column":609,"offset":1452}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However, because Routebop just deals with submitting data via jQuery’s .ajax functionality, I used the Transloadit’s handily provided jQuery plugin to disable automatic submission of the form following Transloadit’s completion of its magic. Instead, on completion, the urls for the images as stored on S3 are firstly used to render a thumbnail on the routebop.com/new page and also stored in an object and pushed into an images array, ready to be submitted with the rest of the route when the user is ready.","position":{"start":{"line":12,"column":1,"offset":1454},"end":{"line":12,"column":508,"offset":1961}}}],"position":{"start":{"line":12,"column":1,"offset":1454},"end":{"line":12,"column":508,"offset":1961}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"$('#MyForm').transloadit({ \n  wait: true, \n  autoSubmit: false, \n  modal: false, \n  onProgress: function(bytesReceived, bytesExpected){ \n    $('#progress').text(\"Progress: \" + (bytesReceived / bytesExpected * 100)\n    .toFixed(2)+'%'); \n  }, \n  onSuccess: function(assembly){ \n    $('#progress').text(\"\"); \n    var thumburl = assembly.results.thumb[0].url; \n    var mainurl = assembly.results[':original'][0].url; \n    $('#thumb').append(\"\" + \"x\"); \n    $('#thumb').find('span').addClass('removeImage'); \n    var imgUrls = {}; \n    imgUrls['thumburl'] = thumburl; \n    imgUrls['mainurl'] = mainurl; \n    images.push(imgUrls); \n    } \n}); \n"}],"position":{"start":{"line":14,"column":1,"offset":1963},"end":{"line":33,"column":9,"offset":2681}}}],"position":{"start":{"line":14,"column":1,"offset":1963},"end":{"line":33,"column":9,"offset":2681}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition to adding the thumbnail from Transloadit into the page, I also wanted to add a 'x' button so users could remove the offending image. Mainly because I was lazy, instead of using an image of a red cross (to be clicked when a user wants to remove an uploaded image), I created a separate span and used a negative margin to push the ","position":{"start":{"line":35,"column":1,"offset":2683},"end":{"line":35,"column":342,"offset":3024}}},{"type":"raw","value":"<span>","position":{"start":{"line":35,"column":342,"offset":3024},"end":{"line":35,"column":348,"offset":3030}}},{"type":"text","value":"x","position":{"start":{"line":35,"column":348,"offset":3030},"end":{"line":35,"column":349,"offset":3031}}},{"type":"raw","value":"</span>","position":{"start":{"line":35,"column":349,"offset":3031},"end":{"line":35,"column":356,"offset":3038}}},{"type":"text","value":" over the image in question. It doesn’t look quite as good as an image but I think it doesn’t look so bad (a fully circular span would be nice!). The code for that CSS is below.","position":{"start":{"line":35,"column":356,"offset":3038},"end":{"line":35,"column":533,"offset":3215}}}],"position":{"start":{"line":35,"column":1,"offset":2683},"end":{"line":35,"column":533,"offset":3215}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".removeImage {\n  font-weight: bold;\n  background: red;\n  color: white;\n  font-family: arial;\n  font-size: 16px;\n  margin-top: 0px;\n  margin-right: 12px;\n  margin-left: -8px;\n  margin-bottom: 7px;\n  border-radius: 15px;\n  padding: 3px;\n}\n"}],"position":{"start":{"line":37,"column":1,"offset":3217},"end":{"line":49,"column":6,"offset":3505}}}],"position":{"start":{"line":37,"column":1,"offset":3217},"end":{"line":49,"column":6,"offset":3505}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Overall, I found incorporating Transloadit very straightforward and although I suspect I’m using it in a slightly different manner than intended, it’s working out well for me. Although it would definitely be interesting to explore building functionality to upload files directly to my S3 instance.","position":{"start":{"line":51,"column":1,"offset":3507},"end":{"line":51,"column":298,"offset":3804}}}],"position":{"start":{"line":51,"column":1,"offset":3507},"end":{"line":51,"column":298,"offset":3804}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":53,"column":1,"offset":3806}}}},{"id":"transformer-remark-markdown-html-035075adbef62ee931a80bae3db3de27--","value":"<p>Giving people the ability to upload photos has been on my mind for a while because photos are a great way to help evoke memories and also to give others a better idea of what a route involves (although I guess there’s always Google Street View for that).</p>\n<p>I had pondered different methods to upload images and in the end I’m now using a third party service in the form of <a href=\"http://www.transloadit.com\">Transloadit</a>. Before starting with image uploads I was a little hesitant that it would be a task too complex for my beginner level experience so although I have previously preferred at certain times to build functionality myself, I was definitely interested in seeing how a third party service could make things easier for me.</p>\n<p>Transloadit has its own servers which you can use for image processing (in Routebop’s case resizing the image to a thumbnail before uploading both to an S3 instance. In terms of the front-end code, and on a basic level, Transloadit requires you to incorporate hidden fields in your file upload forms which allow you to send data to Transloadit’s servers detailing how you want images/media to be processed. This process blocks the normal submission of the form and once processed, links to the processed images are returned in a hidden form field and the whole form is then submitted to your server as usual.</p>\n<p>However, because Routebop just deals with submitting data via jQuery’s .ajax functionality, I used the Transloadit’s handily provided jQuery plugin to disable automatic submission of the form following Transloadit’s completion of its magic. Instead, on completion, the urls for the images as stored on S3 are firstly used to render a thumbnail on the routebop.com/new page and also stored in an object and pushed into an images array, ready to be submitted with the rest of the route when the user is ready.</p>\n<pre><code>$('#MyForm').transloadit({ \n  wait: true, \n  autoSubmit: false, \n  modal: false, \n  onProgress: function(bytesReceived, bytesExpected){ \n    $('#progress').text(\"Progress: \" + (bytesReceived / bytesExpected * 100)\n    .toFixed(2)+'%'); \n  }, \n  onSuccess: function(assembly){ \n    $('#progress').text(\"\"); \n    var thumburl = assembly.results.thumb[0].url; \n    var mainurl = assembly.results[':original'][0].url; \n    $('#thumb').append(\"\" + \"x\"); \n    $('#thumb').find('span').addClass('removeImage'); \n    var imgUrls = {}; \n    imgUrls['thumburl'] = thumburl; \n    imgUrls['mainurl'] = mainurl; \n    images.push(imgUrls); \n    } \n}); \n</code></pre>\n<p>In addition to adding the thumbnail from Transloadit into the page, I also wanted to add a 'x' button so users could remove the offending image. Mainly because I was lazy, instead of using an image of a red cross (to be clicked when a user wants to remove an uploaded image), I created a separate span and used a negative margin to push the <span>x</span> over the image in question. It doesn’t look quite as good as an image but I think it doesn’t look so bad (a fully circular span would be nice!). The code for that CSS is below.</p>\n<pre><code>.removeImage {\n  font-weight: bold;\n  background: red;\n  color: white;\n  font-family: arial;\n  font-size: 16px;\n  margin-top: 0px;\n  margin-right: 12px;\n  margin-left: -8px;\n  margin-bottom: 7px;\n  border-radius: 15px;\n  padding: 3px;\n}\n</code></pre>\n<p>Overall, I found incorporating Transloadit very straightforward and although I suspect I’m using it in a slightly different manner than intended, it’s working out well for me. Although it would definitely be interesting to explore building functionality to upload files directly to my S3 instance.</p>"},{"id":"transformer-remark-markdown-ast-591061575652cb6ecda78e5c73c758d4--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Setting-up-HTTPS-with-Express-Apps-using-Nginx-and-Digital-Ocean'\ntitle: 'Setting up HTTPS with Express Apps using Nginx and Digital Ocean'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":155},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269},"indent":[]}},{"type":"link","title":null,"url":"https://instok.net","children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276},"indent":[]}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297},"indent":[]}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591},"indent":[]}},{"type":"link","title":null,"url":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl","children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610},"indent":[]}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690},"indent":[]}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":206,"offset":709},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"openssl genrsa -out domain.com.key 2048","position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812},"indent":[1,1,1,1]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953},"indent":[]}},{"type":"code","lang":null,"value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem","position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":53,"offset":1095},"indent":[]}},{"type":"link","title":null,"url":"https://konklone.com/post/switch-to-https-now-for-free","children":[{"type":"text","value":"free","position":{"start":{"line":20,"column":54,"offset":1096},"end":{"line":20,"column":58,"offset":1100},"indent":[]}}],"position":{"start":{"line":20,"column":53,"offset":1095},"end":{"line":20,"column":115,"offset":1157},"indent":[]}},{"type":"text","value":"). I used ","position":{"start":{"line":20,"column":115,"offset":1157},"end":{"line":20,"column":125,"offset":1167},"indent":[]}},{"type":"link","title":null,"url":"http://www.namecheap.com","children":[{"type":"text","value":"NameCheap","position":{"start":{"line":20,"column":126,"offset":1168},"end":{"line":20,"column":135,"offset":1177},"indent":[]}}],"position":{"start":{"line":20,"column":125,"offset":1167},"end":{"line":20,"column":162,"offset":1204},"indent":[]}},{"type":"text","value":" as suggested by ","position":{"start":{"line":20,"column":162,"offset":1204},"end":{"line":20,"column":179,"offset":1221},"indent":[]}},{"type":"link","title":null,"url":"https://stripe.com/help/ssl","children":[{"type":"text","value":"Stripe","position":{"start":{"line":20,"column":180,"offset":1222},"end":{"line":20,"column":186,"offset":1228},"indent":[]}}],"position":{"start":{"line":20,"column":179,"offset":1221},"end":{"line":20,"column":216,"offset":1258},"indent":[]}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":20,"column":216,"offset":1258},"end":{"line":20,"column":326,"offset":1368},"indent":[]}}],"position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":326,"offset":1368},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":20,"column":326,"offset":1368},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1369},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":21,"column":188,"offset":1556},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177},"indent":[]}}],"position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177},"indent":[]}},{"type":"code","lang":"var options = {","value":"    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);","position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":36,"column":8,"offset":2560},"indent":[5,5,5,5,5,5,1,5,5]}}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560},"indent":[1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300},"indent":[]}}],"position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"server {\n   listen 443 ssl default_server;","position":{"start":{"line":42,"column":5,"offset":3306},"end":{"line":43,"column":38,"offset":3352},"indent":[5]}}],"position":{"start":{"line":42,"column":5,"offset":3306},"end":{"line":43,"column":38,"offset":3352},"indent":[5]}},{"type":"paragraph","children":[{"type":"text","value":"   ssl","position":{"start":{"line":45,"column":5,"offset":3358},"end":{"line":45,"column":11,"offset":3364},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"certificate      /path/to/your/app/main.pem;\n   ssl","position":{"start":{"line":45,"column":12,"offset":3365},"end":{"line":46,"column":11,"offset":3420},"indent":[5]}}],"position":{"start":{"line":45,"column":11,"offset":3364},"end":{"line":46,"column":12,"offset":3421},"indent":[5]}},{"type":"text","value":"certificate_key  /path/to/your/app/domain.pem;","position":{"start":{"line":46,"column":12,"offset":3421},"end":{"line":46,"column":58,"offset":3467},"indent":[]}}],"position":{"start":{"line":45,"column":5,"offset":3358},"end":{"line":46,"column":58,"offset":3467},"indent":[5]}},{"type":"paragraph","children":[{"type":"text","value":"}","position":{"start":{"line":48,"column":5,"offset":3473},"end":{"line":48,"column":6,"offset":3474},"indent":[]}}],"position":{"start":{"line":48,"column":5,"offset":3473},"end":{"line":48,"column":6,"offset":3474},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":49,"column":1,"offset":3475},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":50,"column":5,"offset":3480},"end":{"line":50,"column":48,"offset":3523},"indent":[]}},{"type":"link","title":null,"url":"https://widget.com","children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":50,"column":49,"offset":3524},"end":{"line":50,"column":67,"offset":3542},"indent":[]}}],"position":{"start":{"line":50,"column":48,"offset":3523},"end":{"line":50,"column":88,"offset":3563},"indent":[]}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":50,"column":88,"offset":3563},"end":{"line":50,"column":251,"offset":3726},"indent":[]}}],"position":{"start":{"line":50,"column":5,"offset":3480},"end":{"line":50,"column":251,"offset":3726},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"server {\n    listen 80;\n    server_name ","position":{"start":{"line":52,"column":5,"offset":3732},"end":{"line":54,"column":21,"offset":3780},"indent":[5,5]}},{"type":"link","title":null,"url":"http://widget.com","children":[{"type":"text","value":"http://widget.com","position":{"start":{"line":54,"column":21,"offset":3780},"end":{"line":54,"column":38,"offset":3797},"indent":[]}}],"position":{"start":{"line":54,"column":21,"offset":3780},"end":{"line":54,"column":38,"offset":3797},"indent":[]}},{"type":"text","value":";\n    return 301 ","position":{"start":{"line":54,"column":38,"offset":3797},"end":{"line":55,"column":20,"offset":3818},"indent":[5]}},{"type":"link","title":null,"url":"https://widget.com","children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":55,"column":20,"offset":3818},"end":{"line":55,"column":38,"offset":3836},"indent":[]}}],"position":{"start":{"line":55,"column":20,"offset":3818},"end":{"line":55,"column":38,"offset":3836},"indent":[]}},{"type":"text","value":";\n}","position":{"start":{"line":55,"column":38,"offset":3836},"end":{"line":56,"column":6,"offset":3843},"indent":[5]}}],"position":{"start":{"line":52,"column":5,"offset":3732},"end":{"line":56,"column":6,"offset":3843},"indent":[5,5,5,5]}}],"position":{"start":{"line":50,"column":1,"offset":3476},"end":{"line":56,"column":6,"offset":3843},"indent":[1,1,1,1,1,1]}}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":56,"column":6,"offset":3843},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":58,"column":1,"offset":3845},"end":{"line":58,"column":132,"offset":3976},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":3845},"end":{"line":58,"column":132,"offset":3976},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":60,"column":1,"offset":3978}}}},{"id":"transformer-remark-markdown-html-ast-591061575652cb6ecda78e5c73c758d4--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269}}},{"type":"element","tagName":"a","properties":{"href":"https://instok.net"},"children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276}}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297}}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407}}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591}}},{"type":"element","tagName":"a","properties":{"href":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl"},"children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610}}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690}}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709}}}],"position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":206,"offset":709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"openssl genrsa -out domain.com.key 2048","position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754}}}],"position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812}}}],"position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953}}}],"position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n"}],"position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041}}}],"position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":53,"offset":1095}}},{"type":"element","tagName":"a","properties":{"href":"https://konklone.com/post/switch-to-https-now-for-free"},"children":[{"type":"text","value":"free","position":{"start":{"line":20,"column":54,"offset":1096},"end":{"line":20,"column":58,"offset":1100}}}],"position":{"start":{"line":20,"column":53,"offset":1095},"end":{"line":20,"column":115,"offset":1157}}},{"type":"text","value":"). I used ","position":{"start":{"line":20,"column":115,"offset":1157},"end":{"line":20,"column":125,"offset":1167}}},{"type":"element","tagName":"a","properties":{"href":"http://www.namecheap.com"},"children":[{"type":"text","value":"NameCheap","position":{"start":{"line":20,"column":126,"offset":1168},"end":{"line":20,"column":135,"offset":1177}}}],"position":{"start":{"line":20,"column":125,"offset":1167},"end":{"line":20,"column":162,"offset":1204}}},{"type":"text","value":" as suggested by ","position":{"start":{"line":20,"column":162,"offset":1204},"end":{"line":20,"column":179,"offset":1221}}},{"type":"element","tagName":"a","properties":{"href":"https://stripe.com/help/ssl"},"children":[{"type":"text","value":"Stripe","position":{"start":{"line":20,"column":180,"offset":1222},"end":{"line":20,"column":186,"offset":1228}}}],"position":{"start":{"line":20,"column":179,"offset":1221},"end":{"line":20,"column":216,"offset":1258}}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":20,"column":216,"offset":1258},"end":{"line":20,"column":326,"offset":1368}}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":20,"column":326,"offset":1368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556}}}],"position":{"start":{"line":21,"column":1,"offset":1369},"end":{"line":21,"column":188,"offset":1556}}},{"type":"text","value":"\n"}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":21,"column":188,"offset":1556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782}}}],"position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177}}}],"position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-var"]},"children":[{"type":"text","value":"    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);\n"}],"position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":36,"column":8,"offset":2560}}}],"position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":36,"column":8,"offset":2560}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966}}}],"position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300}}}],"position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"server {\nlisten 443 ssl default_server;","position":{"start":{"line":42,"column":5,"offset":3306},"end":{"line":43,"column":38,"offset":3352}}}],"position":{"start":{"line":42,"column":5,"offset":3306},"end":{"line":43,"column":38,"offset":3352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   ssl","position":{"start":{"line":45,"column":5,"offset":3358},"end":{"line":45,"column":11,"offset":3364}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"certificate      /path/to/your/app/main.pem;\nssl","position":{"start":{"line":45,"column":12,"offset":3365},"end":{"line":46,"column":11,"offset":3420}}}],"position":{"start":{"line":45,"column":11,"offset":3364},"end":{"line":46,"column":12,"offset":3421}}},{"type":"text","value":"certificate_key  /path/to/your/app/domain.pem;","position":{"start":{"line":46,"column":12,"offset":3421},"end":{"line":46,"column":58,"offset":3467}}}],"position":{"start":{"line":45,"column":5,"offset":3358},"end":{"line":46,"column":58,"offset":3467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"}","position":{"start":{"line":48,"column":5,"offset":3473},"end":{"line":48,"column":6,"offset":3474}}}],"position":{"start":{"line":48,"column":5,"offset":3473},"end":{"line":48,"column":6,"offset":3474}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":49,"column":1,"offset":3475}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":50,"column":5,"offset":3480},"end":{"line":50,"column":48,"offset":3523}}},{"type":"element","tagName":"a","properties":{"href":"https://widget.com"},"children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":50,"column":49,"offset":3524},"end":{"line":50,"column":67,"offset":3542}}}],"position":{"start":{"line":50,"column":48,"offset":3523},"end":{"line":50,"column":88,"offset":3563}}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":50,"column":88,"offset":3563},"end":{"line":50,"column":251,"offset":3726}}}],"position":{"start":{"line":50,"column":5,"offset":3480},"end":{"line":50,"column":251,"offset":3726}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"server {\nlisten 80;\nserver_name ","position":{"start":{"line":52,"column":5,"offset":3732},"end":{"line":54,"column":21,"offset":3780}}},{"type":"element","tagName":"a","properties":{"href":"http://widget.com"},"children":[{"type":"text","value":"http://widget.com","position":{"start":{"line":54,"column":21,"offset":3780},"end":{"line":54,"column":38,"offset":3797}}}],"position":{"start":{"line":54,"column":21,"offset":3780},"end":{"line":54,"column":38,"offset":3797}}},{"type":"text","value":";\nreturn 301 ","position":{"start":{"line":54,"column":38,"offset":3797},"end":{"line":55,"column":20,"offset":3818}}},{"type":"element","tagName":"a","properties":{"href":"https://widget.com"},"children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":55,"column":20,"offset":3818},"end":{"line":55,"column":38,"offset":3836}}}],"position":{"start":{"line":55,"column":20,"offset":3818},"end":{"line":55,"column":38,"offset":3836}}},{"type":"text","value":";\n}","position":{"start":{"line":55,"column":38,"offset":3836},"end":{"line":56,"column":6,"offset":3843}}}],"position":{"start":{"line":52,"column":5,"offset":3732},"end":{"line":56,"column":6,"offset":3843}}},{"type":"text","value":"\n"}],"position":{"start":{"line":50,"column":1,"offset":3476},"end":{"line":56,"column":6,"offset":3843}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":56,"column":6,"offset":3843}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":58,"column":1,"offset":3845},"end":{"line":58,"column":132,"offset":3976}}}],"position":{"start":{"line":58,"column":1,"offset":3845},"end":{"line":58,"column":132,"offset":3976}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":60,"column":1,"offset":3978}}}},{"id":"transformer-remark-markdown-html-591061575652cb6ecda78e5c73c758d4--","value":"<p>This is a quick list of the steps I took to get https up and running with a new app I've been working on called <a href=\"https://instok.net\">Instok</a>. Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.</p>\n<p>Without further ado, the steps are as follows (which are provided mainly as an aide memoire):</p>\n<ul>\n<li>\n<p>Using OpenSSL, generate an RSA private key and a certificate signing request using <a href=\"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl\">these instructions</a> (excerpted below).</p>\n<p>openssl genrsa -out domain.com.key 2048</p>\n<p>openssl req -new -key domain.com.key -out domain.csr</p>\n</li>\n</ul>\n<p>If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).</p>\n<pre><code>openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n</code></pre>\n<ul>\n<li>Purchase a security certificate (or get one for <a href=\"https://konklone.com/post/switch-to-https-now-for-free\">free</a>). I used <a href=\"http://www.namecheap.com\">NameCheap</a> as suggested by <a href=\"https://stripe.com/help/ssl\">Stripe</a>. As part of the process, you will need to submit the certificate signing request generated in the above step.</li>\n<li>Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.</li>\n</ul>\n<p>In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.</p>\n<ul>\n<li>\n<p>Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.</p>\n<pre><code class=\"language-var\">    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);\n</code></pre>\n</li>\n</ul>\n<p>One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.</p>\n<ul>\n<li>\n<p>Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.</p>\n<p>server {\nlisten 443 ssl default_server;</p>\n<p>   ssl<em>certificate      /path/to/your/app/main.pem;\nssl</em>certificate_key  /path/to/your/app/domain.pem;</p>\n<p>}</p>\n</li>\n<li>\n<p>Once you reload the conf file, requests to <a href=\"https://widget.com\">https://widget.com</a> should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:</p>\n<p>server {\nlisten 80;\nserver_name <a href=\"http://widget.com\">http://widget.com</a>;\nreturn 301 <a href=\"https://widget.com\">https://widget.com</a>;\n}</p>\n</li>\n</ul>\n<p>All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.</p>"},{"id":"transformer-remark-markdown-ast-69a627073fe57203e5ec047383236829--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Setting-up-HTTPS-with-Express-Apps-using-Nginx-and-Digital-Ocean'\ntitle: 'Setting up HTTPS with Express Apps using Nginx and Digital Ocean'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":155},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269},"indent":[]}},{"type":"link","title":null,"url":"https://instok.net","children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276},"indent":[]}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297},"indent":[]}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591},"indent":[]}},{"type":"link","title":null,"url":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl","children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610},"indent":[]}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690},"indent":[]}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":206,"offset":709},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"openssl genrsa -out domain.com.key 2048","position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812},"indent":[1,1,1,1]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953},"indent":[]}},{"type":"code","lang":null,"value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem","position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":53,"offset":1095},"indent":[]}},{"type":"link","title":null,"url":"https://konklone.com/post/switch-to-https-now-for-free","children":[{"type":"text","value":"free","position":{"start":{"line":20,"column":54,"offset":1096},"end":{"line":20,"column":58,"offset":1100},"indent":[]}}],"position":{"start":{"line":20,"column":53,"offset":1095},"end":{"line":20,"column":115,"offset":1157},"indent":[]}},{"type":"text","value":"). I used ","position":{"start":{"line":20,"column":115,"offset":1157},"end":{"line":20,"column":125,"offset":1167},"indent":[]}},{"type":"link","title":null,"url":"http://www.namecheap.com","children":[{"type":"text","value":"NameCheap","position":{"start":{"line":20,"column":126,"offset":1168},"end":{"line":20,"column":135,"offset":1177},"indent":[]}}],"position":{"start":{"line":20,"column":125,"offset":1167},"end":{"line":20,"column":162,"offset":1204},"indent":[]}},{"type":"text","value":" as suggested by ","position":{"start":{"line":20,"column":162,"offset":1204},"end":{"line":20,"column":179,"offset":1221},"indent":[]}},{"type":"link","title":null,"url":"https://stripe.com/help/ssl","children":[{"type":"text","value":"Stripe","position":{"start":{"line":20,"column":180,"offset":1222},"end":{"line":20,"column":186,"offset":1228},"indent":[]}}],"position":{"start":{"line":20,"column":179,"offset":1221},"end":{"line":20,"column":216,"offset":1258},"indent":[]}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":20,"column":216,"offset":1258},"end":{"line":20,"column":326,"offset":1368},"indent":[]}}],"position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":326,"offset":1368},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":20,"column":326,"offset":1368},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1369},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":21,"column":188,"offset":1556},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177},"indent":[]}}],"position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177},"indent":[]}},{"type":"code","lang":"var options = {","value":"    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);","position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":36,"column":8,"offset":2560},"indent":[5,5,5,5,5,5,1,5,5]}}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560},"indent":[1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300},"indent":[]}}],"position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"server {\n   listen 443 ssl default_server;","position":{"start":{"line":42,"column":5,"offset":3306},"end":{"line":43,"column":38,"offset":3352},"indent":[5]}}],"position":{"start":{"line":42,"column":5,"offset":3306},"end":{"line":43,"column":38,"offset":3352},"indent":[5]}},{"type":"paragraph","children":[{"type":"text","value":"   ssl","position":{"start":{"line":45,"column":5,"offset":3358},"end":{"line":45,"column":11,"offset":3364},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"certificate      /path/to/your/app/main.pem;\n   ssl","position":{"start":{"line":45,"column":12,"offset":3365},"end":{"line":46,"column":11,"offset":3420},"indent":[5]}}],"position":{"start":{"line":45,"column":11,"offset":3364},"end":{"line":46,"column":12,"offset":3421},"indent":[5]}},{"type":"text","value":"certificate_key  /path/to/your/app/domain.pem;","position":{"start":{"line":46,"column":12,"offset":3421},"end":{"line":46,"column":58,"offset":3467},"indent":[]}}],"position":{"start":{"line":45,"column":5,"offset":3358},"end":{"line":46,"column":58,"offset":3467},"indent":[5]}},{"type":"paragraph","children":[{"type":"text","value":"}","position":{"start":{"line":48,"column":5,"offset":3473},"end":{"line":48,"column":6,"offset":3474},"indent":[]}}],"position":{"start":{"line":48,"column":5,"offset":3473},"end":{"line":48,"column":6,"offset":3474},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":49,"column":1,"offset":3475},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":50,"column":5,"offset":3480},"end":{"line":50,"column":48,"offset":3523},"indent":[]}},{"type":"link","title":null,"url":"https://widget.com","children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":50,"column":49,"offset":3524},"end":{"line":50,"column":67,"offset":3542},"indent":[]}}],"position":{"start":{"line":50,"column":48,"offset":3523},"end":{"line":50,"column":88,"offset":3563},"indent":[]}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":50,"column":88,"offset":3563},"end":{"line":50,"column":251,"offset":3726},"indent":[]}}],"position":{"start":{"line":50,"column":5,"offset":3480},"end":{"line":50,"column":251,"offset":3726},"indent":[]}},{"type":"code","lang":"server {","value":"    listen 80;\n    server_name http://widget.com;\n    return 301 https://widget.com;\n```}","position":{"start":{"line":52,"column":5,"offset":3732},"end":{"line":56,"column":9,"offset":3849},"indent":[5,5,5,5]}}],"position":{"start":{"line":50,"column":1,"offset":3476},"end":{"line":56,"column":9,"offset":3849},"indent":[1,1,1,1,1,1]}}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":56,"column":9,"offset":3849},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":58,"column":1,"offset":3851},"end":{"line":58,"column":132,"offset":3982},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":3851},"end":{"line":58,"column":132,"offset":3982},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":60,"column":1,"offset":3984}}}},{"id":"transformer-remark-markdown-html-ast-69a627073fe57203e5ec047383236829--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269}}},{"type":"element","tagName":"a","properties":{"href":"https://instok.net"},"children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276}}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297}}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407}}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591}}},{"type":"element","tagName":"a","properties":{"href":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl"},"children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610}}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690}}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709}}}],"position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":206,"offset":709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"openssl genrsa -out domain.com.key 2048","position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754}}}],"position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812}}}],"position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953}}}],"position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n"}],"position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041}}}],"position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":53,"offset":1095}}},{"type":"element","tagName":"a","properties":{"href":"https://konklone.com/post/switch-to-https-now-for-free"},"children":[{"type":"text","value":"free","position":{"start":{"line":20,"column":54,"offset":1096},"end":{"line":20,"column":58,"offset":1100}}}],"position":{"start":{"line":20,"column":53,"offset":1095},"end":{"line":20,"column":115,"offset":1157}}},{"type":"text","value":"). I used ","position":{"start":{"line":20,"column":115,"offset":1157},"end":{"line":20,"column":125,"offset":1167}}},{"type":"element","tagName":"a","properties":{"href":"http://www.namecheap.com"},"children":[{"type":"text","value":"NameCheap","position":{"start":{"line":20,"column":126,"offset":1168},"end":{"line":20,"column":135,"offset":1177}}}],"position":{"start":{"line":20,"column":125,"offset":1167},"end":{"line":20,"column":162,"offset":1204}}},{"type":"text","value":" as suggested by ","position":{"start":{"line":20,"column":162,"offset":1204},"end":{"line":20,"column":179,"offset":1221}}},{"type":"element","tagName":"a","properties":{"href":"https://stripe.com/help/ssl"},"children":[{"type":"text","value":"Stripe","position":{"start":{"line":20,"column":180,"offset":1222},"end":{"line":20,"column":186,"offset":1228}}}],"position":{"start":{"line":20,"column":179,"offset":1221},"end":{"line":20,"column":216,"offset":1258}}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":20,"column":216,"offset":1258},"end":{"line":20,"column":326,"offset":1368}}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":20,"column":326,"offset":1368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556}}}],"position":{"start":{"line":21,"column":1,"offset":1369},"end":{"line":21,"column":188,"offset":1556}}},{"type":"text","value":"\n"}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":21,"column":188,"offset":1556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782}}}],"position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177}}}],"position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-var"]},"children":[{"type":"text","value":"    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);\n"}],"position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":36,"column":8,"offset":2560}}}],"position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":36,"column":8,"offset":2560}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966}}}],"position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300}}}],"position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"server {\nlisten 443 ssl default_server;","position":{"start":{"line":42,"column":5,"offset":3306},"end":{"line":43,"column":38,"offset":3352}}}],"position":{"start":{"line":42,"column":5,"offset":3306},"end":{"line":43,"column":38,"offset":3352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   ssl","position":{"start":{"line":45,"column":5,"offset":3358},"end":{"line":45,"column":11,"offset":3364}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"certificate      /path/to/your/app/main.pem;\nssl","position":{"start":{"line":45,"column":12,"offset":3365},"end":{"line":46,"column":11,"offset":3420}}}],"position":{"start":{"line":45,"column":11,"offset":3364},"end":{"line":46,"column":12,"offset":3421}}},{"type":"text","value":"certificate_key  /path/to/your/app/domain.pem;","position":{"start":{"line":46,"column":12,"offset":3421},"end":{"line":46,"column":58,"offset":3467}}}],"position":{"start":{"line":45,"column":5,"offset":3358},"end":{"line":46,"column":58,"offset":3467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"}","position":{"start":{"line":48,"column":5,"offset":3473},"end":{"line":48,"column":6,"offset":3474}}}],"position":{"start":{"line":48,"column":5,"offset":3473},"end":{"line":48,"column":6,"offset":3474}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":49,"column":1,"offset":3475}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":50,"column":5,"offset":3480},"end":{"line":50,"column":48,"offset":3523}}},{"type":"element","tagName":"a","properties":{"href":"https://widget.com"},"children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":50,"column":49,"offset":3524},"end":{"line":50,"column":67,"offset":3542}}}],"position":{"start":{"line":50,"column":48,"offset":3523},"end":{"line":50,"column":88,"offset":3563}}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":50,"column":88,"offset":3563},"end":{"line":50,"column":251,"offset":3726}}}],"position":{"start":{"line":50,"column":5,"offset":3480},"end":{"line":50,"column":251,"offset":3726}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-server"]},"children":[{"type":"text","value":"    listen 80;\n    server_name http://widget.com;\n    return 301 https://widget.com;\n```}\n"}],"position":{"start":{"line":52,"column":5,"offset":3732},"end":{"line":56,"column":9,"offset":3849}}}],"position":{"start":{"line":52,"column":5,"offset":3732},"end":{"line":56,"column":9,"offset":3849}}},{"type":"text","value":"\n"}],"position":{"start":{"line":50,"column":1,"offset":3476},"end":{"line":56,"column":9,"offset":3849}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":56,"column":9,"offset":3849}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":58,"column":1,"offset":3851},"end":{"line":58,"column":132,"offset":3982}}}],"position":{"start":{"line":58,"column":1,"offset":3851},"end":{"line":58,"column":132,"offset":3982}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":60,"column":1,"offset":3984}}}},{"id":"transformer-remark-markdown-html-69a627073fe57203e5ec047383236829--","value":"<p>This is a quick list of the steps I took to get https up and running with a new app I've been working on called <a href=\"https://instok.net\">Instok</a>. Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.</p>\n<p>Without further ado, the steps are as follows (which are provided mainly as an aide memoire):</p>\n<ul>\n<li>\n<p>Using OpenSSL, generate an RSA private key and a certificate signing request using <a href=\"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl\">these instructions</a> (excerpted below).</p>\n<p>openssl genrsa -out domain.com.key 2048</p>\n<p>openssl req -new -key domain.com.key -out domain.csr</p>\n</li>\n</ul>\n<p>If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).</p>\n<pre><code>openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n</code></pre>\n<ul>\n<li>Purchase a security certificate (or get one for <a href=\"https://konklone.com/post/switch-to-https-now-for-free\">free</a>). I used <a href=\"http://www.namecheap.com\">NameCheap</a> as suggested by <a href=\"https://stripe.com/help/ssl\">Stripe</a>. As part of the process, you will need to submit the certificate signing request generated in the above step.</li>\n<li>Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.</li>\n</ul>\n<p>In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.</p>\n<ul>\n<li>\n<p>Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.</p>\n<pre><code class=\"language-var\">    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);\n</code></pre>\n</li>\n</ul>\n<p>One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.</p>\n<ul>\n<li>\n<p>Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.</p>\n<p>server {\nlisten 443 ssl default_server;</p>\n<p>   ssl<em>certificate      /path/to/your/app/main.pem;\nssl</em>certificate_key  /path/to/your/app/domain.pem;</p>\n<p>}</p>\n</li>\n<li>\n<p>Once you reload the conf file, requests to <a href=\"https://widget.com\">https://widget.com</a> should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:</p>\n<pre><code class=\"language-server\">    listen 80;\n    server_name http://widget.com;\n    return 301 https://widget.com;\n```}\n</code></pre>\n</li>\n</ul>\n<p>All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.</p>"},{"id":"transformer-remark-markdown-ast-387835eebe3a11728f9bb9a9c091175d--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Setting-up-HTTPS-with-Express-Apps-using-Nginx-and-Digital-Ocean'\ntitle: 'Setting up HTTPS with Express Apps using Nginx and Digital Ocean'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":155},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269},"indent":[]}},{"type":"link","title":null,"url":"https://instok.net","children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276},"indent":[]}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297},"indent":[]}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591},"indent":[]}},{"type":"link","title":null,"url":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl","children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610},"indent":[]}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690},"indent":[]}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":206,"offset":709},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"openssl genrsa -out domain.com.key 2048","position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812},"indent":[1,1,1,1]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953},"indent":[]}},{"type":"code","lang":null,"value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem","position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":53,"offset":1095},"indent":[]}},{"type":"link","title":null,"url":"https://konklone.com/post/switch-to-https-now-for-free","children":[{"type":"text","value":"free","position":{"start":{"line":20,"column":54,"offset":1096},"end":{"line":20,"column":58,"offset":1100},"indent":[]}}],"position":{"start":{"line":20,"column":53,"offset":1095},"end":{"line":20,"column":115,"offset":1157},"indent":[]}},{"type":"text","value":"). I used ","position":{"start":{"line":20,"column":115,"offset":1157},"end":{"line":20,"column":125,"offset":1167},"indent":[]}},{"type":"link","title":null,"url":"http://www.namecheap.com","children":[{"type":"text","value":"NameCheap","position":{"start":{"line":20,"column":126,"offset":1168},"end":{"line":20,"column":135,"offset":1177},"indent":[]}}],"position":{"start":{"line":20,"column":125,"offset":1167},"end":{"line":20,"column":162,"offset":1204},"indent":[]}},{"type":"text","value":" as suggested by ","position":{"start":{"line":20,"column":162,"offset":1204},"end":{"line":20,"column":179,"offset":1221},"indent":[]}},{"type":"link","title":null,"url":"https://stripe.com/help/ssl","children":[{"type":"text","value":"Stripe","position":{"start":{"line":20,"column":180,"offset":1222},"end":{"line":20,"column":186,"offset":1228},"indent":[]}}],"position":{"start":{"line":20,"column":179,"offset":1221},"end":{"line":20,"column":216,"offset":1258},"indent":[]}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":20,"column":216,"offset":1258},"end":{"line":20,"column":326,"offset":1368},"indent":[]}}],"position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":326,"offset":1368},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":20,"column":326,"offset":1368},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1369},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":21,"column":188,"offset":1556},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177},"indent":[]}}],"position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177},"indent":[]}},{"type":"code","lang":"var options = {","value":"    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);","position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":36,"column":8,"offset":2560},"indent":[5,5,5,5,5,5,1,5,5]}}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560},"indent":[1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300},"indent":[]}}],"position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"server {\n   listen 443 ssl default_server;","position":{"start":{"line":42,"column":5,"offset":3306},"end":{"line":43,"column":38,"offset":3352},"indent":[5]}}],"position":{"start":{"line":42,"column":5,"offset":3306},"end":{"line":43,"column":38,"offset":3352},"indent":[5]}},{"type":"paragraph","children":[{"type":"text","value":"   ssl","position":{"start":{"line":45,"column":5,"offset":3358},"end":{"line":45,"column":11,"offset":3364},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"certificate      /path/to/your/app/main.pem;\n   ssl","position":{"start":{"line":45,"column":12,"offset":3365},"end":{"line":46,"column":11,"offset":3420},"indent":[5]}}],"position":{"start":{"line":45,"column":11,"offset":3364},"end":{"line":46,"column":12,"offset":3421},"indent":[5]}},{"type":"text","value":"certificate_key  /path/to/your/app/domain.pem;","position":{"start":{"line":46,"column":12,"offset":3421},"end":{"line":46,"column":58,"offset":3467},"indent":[]}}],"position":{"start":{"line":45,"column":5,"offset":3358},"end":{"line":46,"column":58,"offset":3467},"indent":[5]}},{"type":"paragraph","children":[{"type":"text","value":"}","position":{"start":{"line":48,"column":5,"offset":3473},"end":{"line":48,"column":6,"offset":3474},"indent":[]}}],"position":{"start":{"line":48,"column":5,"offset":3473},"end":{"line":48,"column":6,"offset":3474},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":49,"column":1,"offset":3475},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":50,"column":5,"offset":3480},"end":{"line":50,"column":48,"offset":3523},"indent":[]}},{"type":"link","title":null,"url":"https://widget.com","children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":50,"column":49,"offset":3524},"end":{"line":50,"column":67,"offset":3542},"indent":[]}}],"position":{"start":{"line":50,"column":48,"offset":3523},"end":{"line":50,"column":88,"offset":3563},"indent":[]}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":50,"column":88,"offset":3563},"end":{"line":50,"column":251,"offset":3726},"indent":[]}}],"position":{"start":{"line":50,"column":5,"offset":3480},"end":{"line":50,"column":251,"offset":3726},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":3476},"end":{"line":50,"column":251,"offset":3726},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":50,"column":251,"offset":3726},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"server {","value":"        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n```}\n\nAll in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":52,"column":1,"offset":3728},"end":{"line":60,"column":1,"offset":3976},"indent":[1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":60,"column":1,"offset":3976}}}},{"id":"transformer-remark-markdown-html-ast-387835eebe3a11728f9bb9a9c091175d--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269}}},{"type":"element","tagName":"a","properties":{"href":"https://instok.net"},"children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276}}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297}}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407}}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591}}},{"type":"element","tagName":"a","properties":{"href":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl"},"children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610}}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690}}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709}}}],"position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":206,"offset":709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"openssl genrsa -out domain.com.key 2048","position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754}}}],"position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812}}}],"position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953}}}],"position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n"}],"position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041}}}],"position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":53,"offset":1095}}},{"type":"element","tagName":"a","properties":{"href":"https://konklone.com/post/switch-to-https-now-for-free"},"children":[{"type":"text","value":"free","position":{"start":{"line":20,"column":54,"offset":1096},"end":{"line":20,"column":58,"offset":1100}}}],"position":{"start":{"line":20,"column":53,"offset":1095},"end":{"line":20,"column":115,"offset":1157}}},{"type":"text","value":"). I used ","position":{"start":{"line":20,"column":115,"offset":1157},"end":{"line":20,"column":125,"offset":1167}}},{"type":"element","tagName":"a","properties":{"href":"http://www.namecheap.com"},"children":[{"type":"text","value":"NameCheap","position":{"start":{"line":20,"column":126,"offset":1168},"end":{"line":20,"column":135,"offset":1177}}}],"position":{"start":{"line":20,"column":125,"offset":1167},"end":{"line":20,"column":162,"offset":1204}}},{"type":"text","value":" as suggested by ","position":{"start":{"line":20,"column":162,"offset":1204},"end":{"line":20,"column":179,"offset":1221}}},{"type":"element","tagName":"a","properties":{"href":"https://stripe.com/help/ssl"},"children":[{"type":"text","value":"Stripe","position":{"start":{"line":20,"column":180,"offset":1222},"end":{"line":20,"column":186,"offset":1228}}}],"position":{"start":{"line":20,"column":179,"offset":1221},"end":{"line":20,"column":216,"offset":1258}}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":20,"column":216,"offset":1258},"end":{"line":20,"column":326,"offset":1368}}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":20,"column":326,"offset":1368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556}}}],"position":{"start":{"line":21,"column":1,"offset":1369},"end":{"line":21,"column":188,"offset":1556}}},{"type":"text","value":"\n"}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":21,"column":188,"offset":1556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782}}}],"position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177}}}],"position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-var"]},"children":[{"type":"text","value":"    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);\n"}],"position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":36,"column":8,"offset":2560}}}],"position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":36,"column":8,"offset":2560}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966}}}],"position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300}}}],"position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"server {\nlisten 443 ssl default_server;","position":{"start":{"line":42,"column":5,"offset":3306},"end":{"line":43,"column":38,"offset":3352}}}],"position":{"start":{"line":42,"column":5,"offset":3306},"end":{"line":43,"column":38,"offset":3352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   ssl","position":{"start":{"line":45,"column":5,"offset":3358},"end":{"line":45,"column":11,"offset":3364}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"certificate      /path/to/your/app/main.pem;\nssl","position":{"start":{"line":45,"column":12,"offset":3365},"end":{"line":46,"column":11,"offset":3420}}}],"position":{"start":{"line":45,"column":11,"offset":3364},"end":{"line":46,"column":12,"offset":3421}}},{"type":"text","value":"certificate_key  /path/to/your/app/domain.pem;","position":{"start":{"line":46,"column":12,"offset":3421},"end":{"line":46,"column":58,"offset":3467}}}],"position":{"start":{"line":45,"column":5,"offset":3358},"end":{"line":46,"column":58,"offset":3467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"}","position":{"start":{"line":48,"column":5,"offset":3473},"end":{"line":48,"column":6,"offset":3474}}}],"position":{"start":{"line":48,"column":5,"offset":3473},"end":{"line":48,"column":6,"offset":3474}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":49,"column":1,"offset":3475}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":50,"column":5,"offset":3480},"end":{"line":50,"column":48,"offset":3523}}},{"type":"element","tagName":"a","properties":{"href":"https://widget.com"},"children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":50,"column":49,"offset":3524},"end":{"line":50,"column":67,"offset":3542}}}],"position":{"start":{"line":50,"column":48,"offset":3523},"end":{"line":50,"column":88,"offset":3563}}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":50,"column":88,"offset":3563},"end":{"line":50,"column":251,"offset":3726}}}],"position":{"start":{"line":50,"column":5,"offset":3480},"end":{"line":50,"column":251,"offset":3726}}},{"type":"text","value":"\n"}],"position":{"start":{"line":50,"column":1,"offset":3476},"end":{"line":50,"column":251,"offset":3726}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":50,"column":251,"offset":3726}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-server"]},"children":[{"type":"text","value":"        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n```}\n\nAll in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.\n"}],"position":{"start":{"line":52,"column":1,"offset":3728},"end":{"line":60,"column":1,"offset":3976}}}],"position":{"start":{"line":52,"column":1,"offset":3728},"end":{"line":60,"column":1,"offset":3976}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":60,"column":1,"offset":3976}}}},{"id":"transformer-remark-markdown-html-387835eebe3a11728f9bb9a9c091175d--","value":"<p>This is a quick list of the steps I took to get https up and running with a new app I've been working on called <a href=\"https://instok.net\">Instok</a>. Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.</p>\n<p>Without further ado, the steps are as follows (which are provided mainly as an aide memoire):</p>\n<ul>\n<li>\n<p>Using OpenSSL, generate an RSA private key and a certificate signing request using <a href=\"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl\">these instructions</a> (excerpted below).</p>\n<p>openssl genrsa -out domain.com.key 2048</p>\n<p>openssl req -new -key domain.com.key -out domain.csr</p>\n</li>\n</ul>\n<p>If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).</p>\n<pre><code>openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n</code></pre>\n<ul>\n<li>Purchase a security certificate (or get one for <a href=\"https://konklone.com/post/switch-to-https-now-for-free\">free</a>). I used <a href=\"http://www.namecheap.com\">NameCheap</a> as suggested by <a href=\"https://stripe.com/help/ssl\">Stripe</a>. As part of the process, you will need to submit the certificate signing request generated in the above step.</li>\n<li>Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.</li>\n</ul>\n<p>In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.</p>\n<ul>\n<li>\n<p>Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.</p>\n<pre><code class=\"language-var\">    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);\n</code></pre>\n</li>\n</ul>\n<p>One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.</p>\n<ul>\n<li>\n<p>Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.</p>\n<p>server {\nlisten 443 ssl default_server;</p>\n<p>   ssl<em>certificate      /path/to/your/app/main.pem;\nssl</em>certificate_key  /path/to/your/app/domain.pem;</p>\n<p>}</p>\n</li>\n<li>\n<p>Once you reload the conf file, requests to <a href=\"https://widget.com\">https://widget.com</a> should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:</p>\n</li>\n</ul>\n<pre><code class=\"language-server\">        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n```}\n\nAll in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.\n</code></pre>"},{"id":"transformer-remark-markdown-ast-90bd3bd0a0c8976fd11e0ef0a1fe27a7--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Setting-up-HTTPS-with-Express-Apps-using-Nginx-and-Digital-Ocean'\ntitle: 'Setting up HTTPS with Express Apps using Nginx and Digital Ocean'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":155},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269},"indent":[]}},{"type":"link","title":null,"url":"https://instok.net","children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276},"indent":[]}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297},"indent":[]}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591},"indent":[]}},{"type":"link","title":null,"url":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl","children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610},"indent":[]}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690},"indent":[]}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":206,"offset":709},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"openssl genrsa -out domain.com.key 2048","position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812},"indent":[1,1,1,1]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953},"indent":[]}},{"type":"code","lang":null,"value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem","position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":53,"offset":1095},"indent":[]}},{"type":"link","title":null,"url":"https://konklone.com/post/switch-to-https-now-for-free","children":[{"type":"text","value":"free","position":{"start":{"line":20,"column":54,"offset":1096},"end":{"line":20,"column":58,"offset":1100},"indent":[]}}],"position":{"start":{"line":20,"column":53,"offset":1095},"end":{"line":20,"column":115,"offset":1157},"indent":[]}},{"type":"text","value":"). I used ","position":{"start":{"line":20,"column":115,"offset":1157},"end":{"line":20,"column":125,"offset":1167},"indent":[]}},{"type":"link","title":null,"url":"http://www.namecheap.com","children":[{"type":"text","value":"NameCheap","position":{"start":{"line":20,"column":126,"offset":1168},"end":{"line":20,"column":135,"offset":1177},"indent":[]}}],"position":{"start":{"line":20,"column":125,"offset":1167},"end":{"line":20,"column":162,"offset":1204},"indent":[]}},{"type":"text","value":" as suggested by ","position":{"start":{"line":20,"column":162,"offset":1204},"end":{"line":20,"column":179,"offset":1221},"indent":[]}},{"type":"link","title":null,"url":"https://stripe.com/help/ssl","children":[{"type":"text","value":"Stripe","position":{"start":{"line":20,"column":180,"offset":1222},"end":{"line":20,"column":186,"offset":1228},"indent":[]}}],"position":{"start":{"line":20,"column":179,"offset":1221},"end":{"line":20,"column":216,"offset":1258},"indent":[]}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":20,"column":216,"offset":1258},"end":{"line":20,"column":326,"offset":1368},"indent":[]}}],"position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":326,"offset":1368},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":20,"column":326,"offset":1368},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1369},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":21,"column":188,"offset":1556},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177},"indent":[]}}],"position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177},"indent":[]}},{"type":"code","lang":"var options = {","value":"    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);","position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":36,"column":8,"offset":2560},"indent":[5,5,5,5,5,5,1,5,5]}}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560},"indent":[1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300},"indent":[]}}],"position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"server {\n   listen 443 ssl default_server;","position":{"start":{"line":42,"column":5,"offset":3306},"end":{"line":43,"column":38,"offset":3352},"indent":[5]}}],"position":{"start":{"line":42,"column":5,"offset":3306},"end":{"line":43,"column":38,"offset":3352},"indent":[5]}},{"type":"paragraph","children":[{"type":"text","value":"   ssl","position":{"start":{"line":45,"column":5,"offset":3358},"end":{"line":45,"column":11,"offset":3364},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"certificate      /path/to/your/app/main.pem;\n   ssl","position":{"start":{"line":45,"column":12,"offset":3365},"end":{"line":46,"column":11,"offset":3420},"indent":[5]}}],"position":{"start":{"line":45,"column":11,"offset":3364},"end":{"line":46,"column":12,"offset":3421},"indent":[5]}},{"type":"text","value":"certificate_key  /path/to/your/app/domain.pem;","position":{"start":{"line":46,"column":12,"offset":3421},"end":{"line":46,"column":58,"offset":3467},"indent":[]}}],"position":{"start":{"line":45,"column":5,"offset":3358},"end":{"line":46,"column":58,"offset":3467},"indent":[5]}},{"type":"paragraph","children":[{"type":"text","value":"}","position":{"start":{"line":48,"column":5,"offset":3473},"end":{"line":48,"column":6,"offset":3474},"indent":[]}}],"position":{"start":{"line":48,"column":5,"offset":3473},"end":{"line":48,"column":6,"offset":3474},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":49,"column":1,"offset":3475},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":50,"column":5,"offset":3480},"end":{"line":50,"column":48,"offset":3523},"indent":[]}},{"type":"link","title":null,"url":"https://widget.com","children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":50,"column":49,"offset":3524},"end":{"line":50,"column":67,"offset":3542},"indent":[]}}],"position":{"start":{"line":50,"column":48,"offset":3523},"end":{"line":50,"column":88,"offset":3563},"indent":[]}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":50,"column":88,"offset":3563},"end":{"line":50,"column":251,"offset":3726},"indent":[]}}],"position":{"start":{"line":50,"column":5,"offset":3480},"end":{"line":50,"column":251,"offset":3726},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":3476},"end":{"line":50,"column":251,"offset":3726},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":50,"column":251,"offset":3726},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"javascript","value":"server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }","position":{"start":{"line":52,"column":1,"offset":3728},"end":{"line":58,"column":4,"offset":3857},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":60,"column":1,"offset":3859},"end":{"line":60,"column":132,"offset":3990},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":3859},"end":{"line":60,"column":132,"offset":3990},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":62,"column":1,"offset":3992}}}},{"id":"transformer-remark-markdown-html-ast-90bd3bd0a0c8976fd11e0ef0a1fe27a7--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269}}},{"type":"element","tagName":"a","properties":{"href":"https://instok.net"},"children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276}}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297}}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407}}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591}}},{"type":"element","tagName":"a","properties":{"href":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl"},"children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610}}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690}}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709}}}],"position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":206,"offset":709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"openssl genrsa -out domain.com.key 2048","position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754}}}],"position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812}}}],"position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953}}}],"position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n"}],"position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041}}}],"position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":53,"offset":1095}}},{"type":"element","tagName":"a","properties":{"href":"https://konklone.com/post/switch-to-https-now-for-free"},"children":[{"type":"text","value":"free","position":{"start":{"line":20,"column":54,"offset":1096},"end":{"line":20,"column":58,"offset":1100}}}],"position":{"start":{"line":20,"column":53,"offset":1095},"end":{"line":20,"column":115,"offset":1157}}},{"type":"text","value":"). I used ","position":{"start":{"line":20,"column":115,"offset":1157},"end":{"line":20,"column":125,"offset":1167}}},{"type":"element","tagName":"a","properties":{"href":"http://www.namecheap.com"},"children":[{"type":"text","value":"NameCheap","position":{"start":{"line":20,"column":126,"offset":1168},"end":{"line":20,"column":135,"offset":1177}}}],"position":{"start":{"line":20,"column":125,"offset":1167},"end":{"line":20,"column":162,"offset":1204}}},{"type":"text","value":" as suggested by ","position":{"start":{"line":20,"column":162,"offset":1204},"end":{"line":20,"column":179,"offset":1221}}},{"type":"element","tagName":"a","properties":{"href":"https://stripe.com/help/ssl"},"children":[{"type":"text","value":"Stripe","position":{"start":{"line":20,"column":180,"offset":1222},"end":{"line":20,"column":186,"offset":1228}}}],"position":{"start":{"line":20,"column":179,"offset":1221},"end":{"line":20,"column":216,"offset":1258}}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":20,"column":216,"offset":1258},"end":{"line":20,"column":326,"offset":1368}}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":20,"column":326,"offset":1368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556}}}],"position":{"start":{"line":21,"column":1,"offset":1369},"end":{"line":21,"column":188,"offset":1556}}},{"type":"text","value":"\n"}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":21,"column":188,"offset":1556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782}}}],"position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177}}}],"position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-var"]},"children":[{"type":"text","value":"    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);\n"}],"position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":36,"column":8,"offset":2560}}}],"position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":36,"column":8,"offset":2560}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966}}}],"position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300}}}],"position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"server {\nlisten 443 ssl default_server;","position":{"start":{"line":42,"column":5,"offset":3306},"end":{"line":43,"column":38,"offset":3352}}}],"position":{"start":{"line":42,"column":5,"offset":3306},"end":{"line":43,"column":38,"offset":3352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   ssl","position":{"start":{"line":45,"column":5,"offset":3358},"end":{"line":45,"column":11,"offset":3364}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"certificate      /path/to/your/app/main.pem;\nssl","position":{"start":{"line":45,"column":12,"offset":3365},"end":{"line":46,"column":11,"offset":3420}}}],"position":{"start":{"line":45,"column":11,"offset":3364},"end":{"line":46,"column":12,"offset":3421}}},{"type":"text","value":"certificate_key  /path/to/your/app/domain.pem;","position":{"start":{"line":46,"column":12,"offset":3421},"end":{"line":46,"column":58,"offset":3467}}}],"position":{"start":{"line":45,"column":5,"offset":3358},"end":{"line":46,"column":58,"offset":3467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"}","position":{"start":{"line":48,"column":5,"offset":3473},"end":{"line":48,"column":6,"offset":3474}}}],"position":{"start":{"line":48,"column":5,"offset":3473},"end":{"line":48,"column":6,"offset":3474}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":49,"column":1,"offset":3475}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":50,"column":5,"offset":3480},"end":{"line":50,"column":48,"offset":3523}}},{"type":"element","tagName":"a","properties":{"href":"https://widget.com"},"children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":50,"column":49,"offset":3524},"end":{"line":50,"column":67,"offset":3542}}}],"position":{"start":{"line":50,"column":48,"offset":3523},"end":{"line":50,"column":88,"offset":3563}}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":50,"column":88,"offset":3563},"end":{"line":50,"column":251,"offset":3726}}}],"position":{"start":{"line":50,"column":5,"offset":3480},"end":{"line":50,"column":251,"offset":3726}}},{"type":"text","value":"\n"}],"position":{"start":{"line":50,"column":1,"offset":3476},"end":{"line":50,"column":251,"offset":3726}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":50,"column":251,"offset":3726}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }\n"}],"position":{"start":{"line":52,"column":1,"offset":3728},"end":{"line":58,"column":4,"offset":3857}}}],"position":{"start":{"line":52,"column":1,"offset":3728},"end":{"line":58,"column":4,"offset":3857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":60,"column":1,"offset":3859},"end":{"line":60,"column":132,"offset":3990}}}],"position":{"start":{"line":60,"column":1,"offset":3859},"end":{"line":60,"column":132,"offset":3990}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":62,"column":1,"offset":3992}}}},{"id":"transformer-remark-markdown-html-90bd3bd0a0c8976fd11e0ef0a1fe27a7--","value":"<p>This is a quick list of the steps I took to get https up and running with a new app I've been working on called <a href=\"https://instok.net\">Instok</a>. Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.</p>\n<p>Without further ado, the steps are as follows (which are provided mainly as an aide memoire):</p>\n<ul>\n<li>\n<p>Using OpenSSL, generate an RSA private key and a certificate signing request using <a href=\"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl\">these instructions</a> (excerpted below).</p>\n<p>openssl genrsa -out domain.com.key 2048</p>\n<p>openssl req -new -key domain.com.key -out domain.csr</p>\n</li>\n</ul>\n<p>If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).</p>\n<pre><code>openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n</code></pre>\n<ul>\n<li>Purchase a security certificate (or get one for <a href=\"https://konklone.com/post/switch-to-https-now-for-free\">free</a>). I used <a href=\"http://www.namecheap.com\">NameCheap</a> as suggested by <a href=\"https://stripe.com/help/ssl\">Stripe</a>. As part of the process, you will need to submit the certificate signing request generated in the above step.</li>\n<li>Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.</li>\n</ul>\n<p>In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.</p>\n<ul>\n<li>\n<p>Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.</p>\n<pre><code class=\"language-var\">    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);\n</code></pre>\n</li>\n</ul>\n<p>One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.</p>\n<ul>\n<li>\n<p>Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.</p>\n<p>server {\nlisten 443 ssl default_server;</p>\n<p>   ssl<em>certificate      /path/to/your/app/main.pem;\nssl</em>certificate_key  /path/to/your/app/domain.pem;</p>\n<p>}</p>\n</li>\n<li>\n<p>Once you reload the conf file, requests to <a href=\"https://widget.com\">https://widget.com</a> should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:</p>\n</li>\n</ul>\n<pre><code class=\"language-javascript\">server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }\n</code></pre>\n<p>All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.</p>"},{"id":"transformer-remark-markdown-ast-250f1eb00b40ff9acbd4e97f79f59089--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Setting-up-HTTPS-with-Express-Apps-using-Nginx-and-Digital-Ocean'\ntitle: 'Setting up HTTPS with Express Apps using Nginx and Digital Ocean'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":155},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269},"indent":[]}},{"type":"link","title":null,"url":"https://instok.net","children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276},"indent":[]}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297},"indent":[]}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591},"indent":[]}},{"type":"link","title":null,"url":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl","children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610},"indent":[]}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690},"indent":[]}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":206,"offset":709},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"openssl genrsa -out domain.com.key 2048","position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812},"indent":[1,1,1,1]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953},"indent":[]}},{"type":"code","lang":null,"value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem","position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":53,"offset":1095},"indent":[]}},{"type":"link","title":null,"url":"https://konklone.com/post/switch-to-https-now-for-free","children":[{"type":"text","value":"free","position":{"start":{"line":20,"column":54,"offset":1096},"end":{"line":20,"column":58,"offset":1100},"indent":[]}}],"position":{"start":{"line":20,"column":53,"offset":1095},"end":{"line":20,"column":115,"offset":1157},"indent":[]}},{"type":"text","value":"). I used ","position":{"start":{"line":20,"column":115,"offset":1157},"end":{"line":20,"column":125,"offset":1167},"indent":[]}},{"type":"link","title":null,"url":"http://www.namecheap.com","children":[{"type":"text","value":"NameCheap","position":{"start":{"line":20,"column":126,"offset":1168},"end":{"line":20,"column":135,"offset":1177},"indent":[]}}],"position":{"start":{"line":20,"column":125,"offset":1167},"end":{"line":20,"column":162,"offset":1204},"indent":[]}},{"type":"text","value":" as suggested by ","position":{"start":{"line":20,"column":162,"offset":1204},"end":{"line":20,"column":179,"offset":1221},"indent":[]}},{"type":"link","title":null,"url":"https://stripe.com/help/ssl","children":[{"type":"text","value":"Stripe","position":{"start":{"line":20,"column":180,"offset":1222},"end":{"line":20,"column":186,"offset":1228},"indent":[]}}],"position":{"start":{"line":20,"column":179,"offset":1221},"end":{"line":20,"column":216,"offset":1258},"indent":[]}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":20,"column":216,"offset":1258},"end":{"line":20,"column":326,"offset":1368},"indent":[]}}],"position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":326,"offset":1368},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":20,"column":326,"offset":1368},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1369},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":21,"column":188,"offset":1556},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177},"indent":[]}}],"position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177},"indent":[]}},{"type":"code","lang":"var options = {","value":"    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);","position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":36,"column":8,"offset":2560},"indent":[5,5,5,5,5,5,1,5,5]}}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560},"indent":[1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300},"indent":[]}}],"position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":40,"column":333,"offset":3300},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":40,"column":333,"offset":3300},"indent":[]}},{"type":"code","lang":"javascript","value":"server {\n       listen 443 ssl default_server;\n\n       ssl_certificate      /path/to/your/app/main.pem;\n       ssl_certificate_key  /path/to/your/app/domain.pem;\n\n    }","position":{"start":{"line":42,"column":1,"offset":3302},"end":{"line":50,"column":4,"offset":3488},"indent":[1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":51,"column":5,"offset":3493},"end":{"line":51,"column":48,"offset":3536},"indent":[]}},{"type":"link","title":null,"url":"https://widget.com","children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":51,"column":49,"offset":3537},"end":{"line":51,"column":67,"offset":3555},"indent":[]}}],"position":{"start":{"line":51,"column":48,"offset":3536},"end":{"line":51,"column":88,"offset":3576},"indent":[]}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":51,"column":88,"offset":3576},"end":{"line":51,"column":251,"offset":3739},"indent":[]}}],"position":{"start":{"line":51,"column":5,"offset":3493},"end":{"line":51,"column":251,"offset":3739},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":3489},"end":{"line":51,"column":251,"offset":3739},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":3489},"end":{"line":51,"column":251,"offset":3739},"indent":[]}},{"type":"code","lang":"javascript","value":"server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }","position":{"start":{"line":53,"column":1,"offset":3741},"end":{"line":59,"column":4,"offset":3870},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":61,"column":1,"offset":3872},"end":{"line":61,"column":132,"offset":4003},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":3872},"end":{"line":61,"column":132,"offset":4003},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":63,"column":1,"offset":4005}}}},{"id":"transformer-remark-markdown-html-ast-250f1eb00b40ff9acbd4e97f79f59089--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269}}},{"type":"element","tagName":"a","properties":{"href":"https://instok.net"},"children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276}}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297}}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407}}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591}}},{"type":"element","tagName":"a","properties":{"href":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl"},"children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610}}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690}}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709}}}],"position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":206,"offset":709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"openssl genrsa -out domain.com.key 2048","position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754}}}],"position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812}}}],"position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953}}}],"position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n"}],"position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041}}}],"position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":53,"offset":1095}}},{"type":"element","tagName":"a","properties":{"href":"https://konklone.com/post/switch-to-https-now-for-free"},"children":[{"type":"text","value":"free","position":{"start":{"line":20,"column":54,"offset":1096},"end":{"line":20,"column":58,"offset":1100}}}],"position":{"start":{"line":20,"column":53,"offset":1095},"end":{"line":20,"column":115,"offset":1157}}},{"type":"text","value":"). I used ","position":{"start":{"line":20,"column":115,"offset":1157},"end":{"line":20,"column":125,"offset":1167}}},{"type":"element","tagName":"a","properties":{"href":"http://www.namecheap.com"},"children":[{"type":"text","value":"NameCheap","position":{"start":{"line":20,"column":126,"offset":1168},"end":{"line":20,"column":135,"offset":1177}}}],"position":{"start":{"line":20,"column":125,"offset":1167},"end":{"line":20,"column":162,"offset":1204}}},{"type":"text","value":" as suggested by ","position":{"start":{"line":20,"column":162,"offset":1204},"end":{"line":20,"column":179,"offset":1221}}},{"type":"element","tagName":"a","properties":{"href":"https://stripe.com/help/ssl"},"children":[{"type":"text","value":"Stripe","position":{"start":{"line":20,"column":180,"offset":1222},"end":{"line":20,"column":186,"offset":1228}}}],"position":{"start":{"line":20,"column":179,"offset":1221},"end":{"line":20,"column":216,"offset":1258}}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":20,"column":216,"offset":1258},"end":{"line":20,"column":326,"offset":1368}}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":20,"column":326,"offset":1368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556}}}],"position":{"start":{"line":21,"column":1,"offset":1369},"end":{"line":21,"column":188,"offset":1556}}},{"type":"text","value":"\n"}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":21,"column":188,"offset":1556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782}}}],"position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177}}}],"position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-var"]},"children":[{"type":"text","value":"    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);\n"}],"position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":36,"column":8,"offset":2560}}}],"position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":36,"column":8,"offset":2560}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":36,"column":8,"offset":2560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966}}}],"position":{"start":{"line":38,"column":1,"offset":2562},"end":{"line":38,"column":405,"offset":2966}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":40,"column":5,"offset":2972},"end":{"line":40,"column":333,"offset":3300}}}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":40,"column":333,"offset":3300}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":1,"offset":2968},"end":{"line":40,"column":333,"offset":3300}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"server {\n       listen 443 ssl default_server;\n\n       ssl_certificate      /path/to/your/app/main.pem;\n       ssl_certificate_key  /path/to/your/app/domain.pem;\n\n    }\n"}],"position":{"start":{"line":42,"column":1,"offset":3302},"end":{"line":50,"column":4,"offset":3488}}}],"position":{"start":{"line":42,"column":1,"offset":3302},"end":{"line":50,"column":4,"offset":3488}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":51,"column":5,"offset":3493},"end":{"line":51,"column":48,"offset":3536}}},{"type":"element","tagName":"a","properties":{"href":"https://widget.com"},"children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":51,"column":49,"offset":3537},"end":{"line":51,"column":67,"offset":3555}}}],"position":{"start":{"line":51,"column":48,"offset":3536},"end":{"line":51,"column":88,"offset":3576}}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":51,"column":88,"offset":3576},"end":{"line":51,"column":251,"offset":3739}}}],"position":{"start":{"line":51,"column":1,"offset":3489},"end":{"line":51,"column":251,"offset":3739}}},{"type":"text","value":"\n"}],"position":{"start":{"line":51,"column":1,"offset":3489},"end":{"line":51,"column":251,"offset":3739}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }\n"}],"position":{"start":{"line":53,"column":1,"offset":3741},"end":{"line":59,"column":4,"offset":3870}}}],"position":{"start":{"line":53,"column":1,"offset":3741},"end":{"line":59,"column":4,"offset":3870}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":61,"column":1,"offset":3872},"end":{"line":61,"column":132,"offset":4003}}}],"position":{"start":{"line":61,"column":1,"offset":3872},"end":{"line":61,"column":132,"offset":4003}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":63,"column":1,"offset":4005}}}},{"id":"transformer-remark-markdown-html-250f1eb00b40ff9acbd4e97f79f59089--","value":"<p>This is a quick list of the steps I took to get https up and running with a new app I've been working on called <a href=\"https://instok.net\">Instok</a>. Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.</p>\n<p>Without further ado, the steps are as follows (which are provided mainly as an aide memoire):</p>\n<ul>\n<li>\n<p>Using OpenSSL, generate an RSA private key and a certificate signing request using <a href=\"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl\">these instructions</a> (excerpted below).</p>\n<p>openssl genrsa -out domain.com.key 2048</p>\n<p>openssl req -new -key domain.com.key -out domain.csr</p>\n</li>\n</ul>\n<p>If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).</p>\n<pre><code>openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n</code></pre>\n<ul>\n<li>Purchase a security certificate (or get one for <a href=\"https://konklone.com/post/switch-to-https-now-for-free\">free</a>). I used <a href=\"http://www.namecheap.com\">NameCheap</a> as suggested by <a href=\"https://stripe.com/help/ssl\">Stripe</a>. As part of the process, you will need to submit the certificate signing request generated in the above step.</li>\n<li>Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.</li>\n</ul>\n<p>In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.</p>\n<ul>\n<li>\n<p>Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.</p>\n<pre><code class=\"language-var\">    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);\n</code></pre>\n</li>\n</ul>\n<p>One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.</p>\n<ul>\n<li>Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.</li>\n</ul>\n<pre><code class=\"language-javascript\">server {\n       listen 443 ssl default_server;\n\n       ssl_certificate      /path/to/your/app/main.pem;\n       ssl_certificate_key  /path/to/your/app/domain.pem;\n\n    }\n</code></pre>\n<ul>\n<li>Once you reload the conf file, requests to <a href=\"https://widget.com\">https://widget.com</a> should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:</li>\n</ul>\n<pre><code class=\"language-javascript\">server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }\n</code></pre>\n<p>All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.</p>"},{"id":"transformer-remark-markdown-ast-aeaba2b914d42f5abf5b7f7fc07f2093--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Setting-up-HTTPS-with-Express-Apps-using-Nginx-and-Digital-Ocean'\ntitle: 'Setting up HTTPS with Express Apps using Nginx and Digital Ocean'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":155},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269},"indent":[]}},{"type":"link","title":null,"url":"https://instok.net","children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276},"indent":[]}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297},"indent":[]}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591},"indent":[]}},{"type":"link","title":null,"url":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl","children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610},"indent":[]}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690},"indent":[]}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":206,"offset":709},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"openssl genrsa -out domain.com.key 2048","position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812},"indent":[1,1,1,1]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953},"indent":[]}},{"type":"code","lang":null,"value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem","position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":53,"offset":1095},"indent":[]}},{"type":"link","title":null,"url":"https://konklone.com/post/switch-to-https-now-for-free","children":[{"type":"text","value":"free","position":{"start":{"line":20,"column":54,"offset":1096},"end":{"line":20,"column":58,"offset":1100},"indent":[]}}],"position":{"start":{"line":20,"column":53,"offset":1095},"end":{"line":20,"column":115,"offset":1157},"indent":[]}},{"type":"text","value":"). I used ","position":{"start":{"line":20,"column":115,"offset":1157},"end":{"line":20,"column":125,"offset":1167},"indent":[]}},{"type":"link","title":null,"url":"http://www.namecheap.com","children":[{"type":"text","value":"NameCheap","position":{"start":{"line":20,"column":126,"offset":1168},"end":{"line":20,"column":135,"offset":1177},"indent":[]}}],"position":{"start":{"line":20,"column":125,"offset":1167},"end":{"line":20,"column":162,"offset":1204},"indent":[]}},{"type":"text","value":" as suggested by ","position":{"start":{"line":20,"column":162,"offset":1204},"end":{"line":20,"column":179,"offset":1221},"indent":[]}},{"type":"link","title":null,"url":"https://stripe.com/help/ssl","children":[{"type":"text","value":"Stripe","position":{"start":{"line":20,"column":180,"offset":1222},"end":{"line":20,"column":186,"offset":1228},"indent":[]}}],"position":{"start":{"line":20,"column":179,"offset":1221},"end":{"line":20,"column":216,"offset":1258},"indent":[]}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":20,"column":216,"offset":1258},"end":{"line":20,"column":326,"offset":1368},"indent":[]}}],"position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":326,"offset":1368},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":20,"column":326,"offset":1368},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1369},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":21,"column":188,"offset":1556},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177},"indent":[]}}],"position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177},"indent":[]}},{"type":"code","lang":"javascript","value":"var options = {\n    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);","position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":37,"column":8,"offset":2575},"indent":[5,5,5,5,5,5,5,1,5,5]}}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":37,"column":8,"offset":2575},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":37,"column":8,"offset":2575},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":39,"column":1,"offset":2577},"end":{"line":39,"column":405,"offset":2981},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":2577},"end":{"line":39,"column":405,"offset":2981},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":41,"column":5,"offset":2987},"end":{"line":41,"column":333,"offset":3315},"indent":[]}}],"position":{"start":{"line":41,"column":5,"offset":2987},"end":{"line":41,"column":333,"offset":3315},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":2983},"end":{"line":41,"column":333,"offset":3315},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":2983},"end":{"line":41,"column":333,"offset":3315},"indent":[]}},{"type":"code","lang":"javascript","value":"server {\n       listen 443 ssl default_server;\n\n       ssl_certificate      /path/to/your/app/main.pem;\n       ssl_certificate_key  /path/to/your/app/domain.pem;\n\n    }","position":{"start":{"line":43,"column":1,"offset":3317},"end":{"line":51,"column":4,"offset":3503},"indent":[1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":52,"column":5,"offset":3508},"end":{"line":52,"column":48,"offset":3551},"indent":[]}},{"type":"link","title":null,"url":"https://widget.com","children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":52,"column":49,"offset":3552},"end":{"line":52,"column":67,"offset":3570},"indent":[]}}],"position":{"start":{"line":52,"column":48,"offset":3551},"end":{"line":52,"column":88,"offset":3591},"indent":[]}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":52,"column":88,"offset":3591},"end":{"line":52,"column":251,"offset":3754},"indent":[]}}],"position":{"start":{"line":52,"column":5,"offset":3508},"end":{"line":52,"column":251,"offset":3754},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":3504},"end":{"line":52,"column":251,"offset":3754},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":3504},"end":{"line":52,"column":251,"offset":3754},"indent":[]}},{"type":"code","lang":"javascript","value":"server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }","position":{"start":{"line":54,"column":1,"offset":3756},"end":{"line":60,"column":4,"offset":3885},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":62,"column":1,"offset":3887},"end":{"line":62,"column":132,"offset":4018},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":3887},"end":{"line":62,"column":132,"offset":4018},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":64,"column":1,"offset":4020}}}},{"id":"transformer-remark-markdown-html-ast-aeaba2b914d42f5abf5b7f7fc07f2093--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269}}},{"type":"element","tagName":"a","properties":{"href":"https://instok.net"},"children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276}}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297}}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407}}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591}}},{"type":"element","tagName":"a","properties":{"href":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl"},"children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610}}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690}}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709}}}],"position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":206,"offset":709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"openssl genrsa -out domain.com.key 2048","position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754}}}],"position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812}}}],"position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953}}}],"position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n"}],"position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041}}}],"position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":53,"offset":1095}}},{"type":"element","tagName":"a","properties":{"href":"https://konklone.com/post/switch-to-https-now-for-free"},"children":[{"type":"text","value":"free","position":{"start":{"line":20,"column":54,"offset":1096},"end":{"line":20,"column":58,"offset":1100}}}],"position":{"start":{"line":20,"column":53,"offset":1095},"end":{"line":20,"column":115,"offset":1157}}},{"type":"text","value":"). I used ","position":{"start":{"line":20,"column":115,"offset":1157},"end":{"line":20,"column":125,"offset":1167}}},{"type":"element","tagName":"a","properties":{"href":"http://www.namecheap.com"},"children":[{"type":"text","value":"NameCheap","position":{"start":{"line":20,"column":126,"offset":1168},"end":{"line":20,"column":135,"offset":1177}}}],"position":{"start":{"line":20,"column":125,"offset":1167},"end":{"line":20,"column":162,"offset":1204}}},{"type":"text","value":" as suggested by ","position":{"start":{"line":20,"column":162,"offset":1204},"end":{"line":20,"column":179,"offset":1221}}},{"type":"element","tagName":"a","properties":{"href":"https://stripe.com/help/ssl"},"children":[{"type":"text","value":"Stripe","position":{"start":{"line":20,"column":180,"offset":1222},"end":{"line":20,"column":186,"offset":1228}}}],"position":{"start":{"line":20,"column":179,"offset":1221},"end":{"line":20,"column":216,"offset":1258}}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":20,"column":216,"offset":1258},"end":{"line":20,"column":326,"offset":1368}}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":20,"column":326,"offset":1368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556}}}],"position":{"start":{"line":21,"column":1,"offset":1369},"end":{"line":21,"column":188,"offset":1556}}},{"type":"text","value":"\n"}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":21,"column":188,"offset":1556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782}}}],"position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177}}}],"position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"var options = {\n    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);\n"}],"position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":37,"column":8,"offset":2575}}}],"position":{"start":{"line":27,"column":5,"offset":2183},"end":{"line":37,"column":8,"offset":2575}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":37,"column":8,"offset":2575}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":37,"column":8,"offset":2575}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":39,"column":1,"offset":2577},"end":{"line":39,"column":405,"offset":2981}}}],"position":{"start":{"line":39,"column":1,"offset":2577},"end":{"line":39,"column":405,"offset":2981}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":41,"column":5,"offset":2987},"end":{"line":41,"column":333,"offset":3315}}}],"position":{"start":{"line":41,"column":1,"offset":2983},"end":{"line":41,"column":333,"offset":3315}}},{"type":"text","value":"\n"}],"position":{"start":{"line":41,"column":1,"offset":2983},"end":{"line":41,"column":333,"offset":3315}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"server {\n       listen 443 ssl default_server;\n\n       ssl_certificate      /path/to/your/app/main.pem;\n       ssl_certificate_key  /path/to/your/app/domain.pem;\n\n    }\n"}],"position":{"start":{"line":43,"column":1,"offset":3317},"end":{"line":51,"column":4,"offset":3503}}}],"position":{"start":{"line":43,"column":1,"offset":3317},"end":{"line":51,"column":4,"offset":3503}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":52,"column":5,"offset":3508},"end":{"line":52,"column":48,"offset":3551}}},{"type":"element","tagName":"a","properties":{"href":"https://widget.com"},"children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":52,"column":49,"offset":3552},"end":{"line":52,"column":67,"offset":3570}}}],"position":{"start":{"line":52,"column":48,"offset":3551},"end":{"line":52,"column":88,"offset":3591}}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":52,"column":88,"offset":3591},"end":{"line":52,"column":251,"offset":3754}}}],"position":{"start":{"line":52,"column":1,"offset":3504},"end":{"line":52,"column":251,"offset":3754}}},{"type":"text","value":"\n"}],"position":{"start":{"line":52,"column":1,"offset":3504},"end":{"line":52,"column":251,"offset":3754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }\n"}],"position":{"start":{"line":54,"column":1,"offset":3756},"end":{"line":60,"column":4,"offset":3885}}}],"position":{"start":{"line":54,"column":1,"offset":3756},"end":{"line":60,"column":4,"offset":3885}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":62,"column":1,"offset":3887},"end":{"line":62,"column":132,"offset":4018}}}],"position":{"start":{"line":62,"column":1,"offset":3887},"end":{"line":62,"column":132,"offset":4018}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":64,"column":1,"offset":4020}}}},{"id":"transformer-remark-markdown-html-aeaba2b914d42f5abf5b7f7fc07f2093--","value":"<p>This is a quick list of the steps I took to get https up and running with a new app I've been working on called <a href=\"https://instok.net\">Instok</a>. Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.</p>\n<p>Without further ado, the steps are as follows (which are provided mainly as an aide memoire):</p>\n<ul>\n<li>\n<p>Using OpenSSL, generate an RSA private key and a certificate signing request using <a href=\"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl\">these instructions</a> (excerpted below).</p>\n<p>openssl genrsa -out domain.com.key 2048</p>\n<p>openssl req -new -key domain.com.key -out domain.csr</p>\n</li>\n</ul>\n<p>If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).</p>\n<pre><code>openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n</code></pre>\n<ul>\n<li>Purchase a security certificate (or get one for <a href=\"https://konklone.com/post/switch-to-https-now-for-free\">free</a>). I used <a href=\"http://www.namecheap.com\">NameCheap</a> as suggested by <a href=\"https://stripe.com/help/ssl\">Stripe</a>. As part of the process, you will need to submit the certificate signing request generated in the above step.</li>\n<li>Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.</li>\n</ul>\n<p>In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.</p>\n<ul>\n<li>\n<p>Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.</p>\n<pre><code class=\"language-javascript\">var options = {\n    // The RSA private key generated above\n    key: fs.readFileSync('./config/rsakey.pem'),\n    // The certicates sent to you by the certificate issuer\n    cert: fs.readFileSync('./config/main.pem'),\n    ca: [fs.readFileSync('./config/intermediate.pem')]\n};\n\nhttps.createServer(options, app).listen(port of your choosing);\n</code></pre>\n</li>\n</ul>\n<p>One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.</p>\n<ul>\n<li>Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.</li>\n</ul>\n<pre><code class=\"language-javascript\">server {\n       listen 443 ssl default_server;\n\n       ssl_certificate      /path/to/your/app/main.pem;\n       ssl_certificate_key  /path/to/your/app/domain.pem;\n\n    }\n</code></pre>\n<ul>\n<li>Once you reload the conf file, requests to <a href=\"https://widget.com\">https://widget.com</a> should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:</li>\n</ul>\n<pre><code class=\"language-javascript\">server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }\n</code></pre>\n<p>All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.</p>"},{"id":"transformer-remark-markdown-ast-a60637d719dc5ff93a6d511674465b62--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Setting-up-HTTPS-with-Express-Apps-using-Nginx-and-Digital-Ocean'\ntitle: 'Setting up HTTPS with Express Apps using Nginx and Digital Ocean'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":155},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269},"indent":[]}},{"type":"link","title":null,"url":"https://instok.net","children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276},"indent":[]}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297},"indent":[]}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591},"indent":[]}},{"type":"link","title":null,"url":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl","children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610},"indent":[]}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690},"indent":[]}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":206,"offset":709},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"openssl genrsa -out domain.com.key 2048","position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812},"indent":[1,1,1,1]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953},"indent":[]}},{"type":"code","lang":null,"value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem","position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":53,"offset":1095},"indent":[]}},{"type":"link","title":null,"url":"https://konklone.com/post/switch-to-https-now-for-free","children":[{"type":"text","value":"free","position":{"start":{"line":20,"column":54,"offset":1096},"end":{"line":20,"column":58,"offset":1100},"indent":[]}}],"position":{"start":{"line":20,"column":53,"offset":1095},"end":{"line":20,"column":115,"offset":1157},"indent":[]}},{"type":"text","value":"). I used ","position":{"start":{"line":20,"column":115,"offset":1157},"end":{"line":20,"column":125,"offset":1167},"indent":[]}},{"type":"link","title":null,"url":"http://www.namecheap.com","children":[{"type":"text","value":"NameCheap","position":{"start":{"line":20,"column":126,"offset":1168},"end":{"line":20,"column":135,"offset":1177},"indent":[]}}],"position":{"start":{"line":20,"column":125,"offset":1167},"end":{"line":20,"column":162,"offset":1204},"indent":[]}},{"type":"text","value":" as suggested by ","position":{"start":{"line":20,"column":162,"offset":1204},"end":{"line":20,"column":179,"offset":1221},"indent":[]}},{"type":"link","title":null,"url":"https://stripe.com/help/ssl","children":[{"type":"text","value":"Stripe","position":{"start":{"line":20,"column":180,"offset":1222},"end":{"line":20,"column":186,"offset":1228},"indent":[]}}],"position":{"start":{"line":20,"column":179,"offset":1221},"end":{"line":20,"column":216,"offset":1258},"indent":[]}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":20,"column":216,"offset":1258},"end":{"line":20,"column":326,"offset":1368},"indent":[]}}],"position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":326,"offset":1368},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":20,"column":326,"offset":1368},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1369},"end":{"line":21,"column":188,"offset":1556},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":21,"column":188,"offset":1556},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177},"indent":[]}}],"position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":25,"column":394,"offset":2177},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":25,"column":394,"offset":2177},"indent":[]}},{"type":"code","lang":"javascript","value":"    var options = {\n        // The RSA private key generated above\n        key: fs.readFileSync('./config/rsakey.pem'),\n        // The certicates sent to you by the certificate issuer\n        cert: fs.readFileSync('./config/main.pem'),\n        ca: [fs.readFileSync('./config/intermediate.pem')]\n    };\n\n    https.createServer(options, app).listen(port of your choosing);","position":{"start":{"line":27,"column":1,"offset":2179},"end":{"line":37,"column":4,"offset":2567},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":39,"column":1,"offset":2569},"end":{"line":39,"column":405,"offset":2973},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":2569},"end":{"line":39,"column":405,"offset":2973},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":41,"column":5,"offset":2979},"end":{"line":41,"column":333,"offset":3307},"indent":[]}}],"position":{"start":{"line":41,"column":5,"offset":2979},"end":{"line":41,"column":333,"offset":3307},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":2975},"end":{"line":41,"column":333,"offset":3307},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":2975},"end":{"line":41,"column":333,"offset":3307},"indent":[]}},{"type":"code","lang":"javascript","value":"server {\n       listen 443 ssl default_server;\n\n       ssl_certificate      /path/to/your/app/main.pem;\n       ssl_certificate_key  /path/to/your/app/domain.pem;\n\n    }","position":{"start":{"line":43,"column":1,"offset":3309},"end":{"line":51,"column":4,"offset":3495},"indent":[1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":52,"column":5,"offset":3500},"end":{"line":52,"column":48,"offset":3543},"indent":[]}},{"type":"link","title":null,"url":"https://widget.com","children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":52,"column":49,"offset":3544},"end":{"line":52,"column":67,"offset":3562},"indent":[]}}],"position":{"start":{"line":52,"column":48,"offset":3543},"end":{"line":52,"column":88,"offset":3583},"indent":[]}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":52,"column":88,"offset":3583},"end":{"line":52,"column":251,"offset":3746},"indent":[]}}],"position":{"start":{"line":52,"column":5,"offset":3500},"end":{"line":52,"column":251,"offset":3746},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":3496},"end":{"line":52,"column":251,"offset":3746},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":3496},"end":{"line":52,"column":251,"offset":3746},"indent":[]}},{"type":"code","lang":"javascript","value":"server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }","position":{"start":{"line":54,"column":1,"offset":3748},"end":{"line":60,"column":4,"offset":3877},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":62,"column":1,"offset":3879},"end":{"line":62,"column":132,"offset":4010},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":3879},"end":{"line":62,"column":132,"offset":4010},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":64,"column":1,"offset":4012}}}},{"id":"transformer-remark-markdown-html-ast-a60637d719dc5ff93a6d511674465b62--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269}}},{"type":"element","tagName":"a","properties":{"href":"https://instok.net"},"children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276}}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297}}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407}}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591}}},{"type":"element","tagName":"a","properties":{"href":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl"},"children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610}}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690}}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709}}}],"position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":206,"offset":709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"openssl genrsa -out domain.com.key 2048","position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754}}}],"position":{"start":{"line":12,"column":5,"offset":715},"end":{"line":12,"column":44,"offset":754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812}}}],"position":{"start":{"line":14,"column":5,"offset":760},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":14,"column":57,"offset":812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953}}}],"position":{"start":{"line":16,"column":1,"offset":814},"end":{"line":16,"column":140,"offset":953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n"}],"position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041}}}],"position":{"start":{"line":18,"column":1,"offset":955},"end":{"line":18,"column":87,"offset":1041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":20,"column":5,"offset":1047},"end":{"line":20,"column":53,"offset":1095}}},{"type":"element","tagName":"a","properties":{"href":"https://konklone.com/post/switch-to-https-now-for-free"},"children":[{"type":"text","value":"free","position":{"start":{"line":20,"column":54,"offset":1096},"end":{"line":20,"column":58,"offset":1100}}}],"position":{"start":{"line":20,"column":53,"offset":1095},"end":{"line":20,"column":115,"offset":1157}}},{"type":"text","value":"). I used ","position":{"start":{"line":20,"column":115,"offset":1157},"end":{"line":20,"column":125,"offset":1167}}},{"type":"element","tagName":"a","properties":{"href":"http://www.namecheap.com"},"children":[{"type":"text","value":"NameCheap","position":{"start":{"line":20,"column":126,"offset":1168},"end":{"line":20,"column":135,"offset":1177}}}],"position":{"start":{"line":20,"column":125,"offset":1167},"end":{"line":20,"column":162,"offset":1204}}},{"type":"text","value":" as suggested by ","position":{"start":{"line":20,"column":162,"offset":1204},"end":{"line":20,"column":179,"offset":1221}}},{"type":"element","tagName":"a","properties":{"href":"https://stripe.com/help/ssl"},"children":[{"type":"text","value":"Stripe","position":{"start":{"line":20,"column":180,"offset":1222},"end":{"line":20,"column":186,"offset":1228}}}],"position":{"start":{"line":20,"column":179,"offset":1221},"end":{"line":20,"column":216,"offset":1258}}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":20,"column":216,"offset":1258},"end":{"line":20,"column":326,"offset":1368}}}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":20,"column":326,"offset":1368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":21,"column":5,"offset":1373},"end":{"line":21,"column":188,"offset":1556}}}],"position":{"start":{"line":21,"column":1,"offset":1369},"end":{"line":21,"column":188,"offset":1556}}},{"type":"text","value":"\n"}],"position":{"start":{"line":20,"column":1,"offset":1043},"end":{"line":21,"column":188,"offset":1556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782}}}],"position":{"start":{"line":23,"column":1,"offset":1558},"end":{"line":23,"column":225,"offset":1782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":25,"column":5,"offset":1788},"end":{"line":25,"column":394,"offset":2177}}}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":25,"column":394,"offset":2177}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":1,"offset":1784},"end":{"line":25,"column":394,"offset":2177}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"    var options = {\n        // The RSA private key generated above\n        key: fs.readFileSync('./config/rsakey.pem'),\n        // The certicates sent to you by the certificate issuer\n        cert: fs.readFileSync('./config/main.pem'),\n        ca: [fs.readFileSync('./config/intermediate.pem')]\n    };\n\n    https.createServer(options, app).listen(port of your choosing);\n"}],"position":{"start":{"line":27,"column":1,"offset":2179},"end":{"line":37,"column":4,"offset":2567}}}],"position":{"start":{"line":27,"column":1,"offset":2179},"end":{"line":37,"column":4,"offset":2567}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":39,"column":1,"offset":2569},"end":{"line":39,"column":405,"offset":2973}}}],"position":{"start":{"line":39,"column":1,"offset":2569},"end":{"line":39,"column":405,"offset":2973}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":41,"column":5,"offset":2979},"end":{"line":41,"column":333,"offset":3307}}}],"position":{"start":{"line":41,"column":1,"offset":2975},"end":{"line":41,"column":333,"offset":3307}}},{"type":"text","value":"\n"}],"position":{"start":{"line":41,"column":1,"offset":2975},"end":{"line":41,"column":333,"offset":3307}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"server {\n       listen 443 ssl default_server;\n\n       ssl_certificate      /path/to/your/app/main.pem;\n       ssl_certificate_key  /path/to/your/app/domain.pem;\n\n    }\n"}],"position":{"start":{"line":43,"column":1,"offset":3309},"end":{"line":51,"column":4,"offset":3495}}}],"position":{"start":{"line":43,"column":1,"offset":3309},"end":{"line":51,"column":4,"offset":3495}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":52,"column":5,"offset":3500},"end":{"line":52,"column":48,"offset":3543}}},{"type":"element","tagName":"a","properties":{"href":"https://widget.com"},"children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":52,"column":49,"offset":3544},"end":{"line":52,"column":67,"offset":3562}}}],"position":{"start":{"line":52,"column":48,"offset":3543},"end":{"line":52,"column":88,"offset":3583}}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":52,"column":88,"offset":3583},"end":{"line":52,"column":251,"offset":3746}}}],"position":{"start":{"line":52,"column":1,"offset":3496},"end":{"line":52,"column":251,"offset":3746}}},{"type":"text","value":"\n"}],"position":{"start":{"line":52,"column":1,"offset":3496},"end":{"line":52,"column":251,"offset":3746}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }\n"}],"position":{"start":{"line":54,"column":1,"offset":3748},"end":{"line":60,"column":4,"offset":3877}}}],"position":{"start":{"line":54,"column":1,"offset":3748},"end":{"line":60,"column":4,"offset":3877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":62,"column":1,"offset":3879},"end":{"line":62,"column":132,"offset":4010}}}],"position":{"start":{"line":62,"column":1,"offset":3879},"end":{"line":62,"column":132,"offset":4010}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":64,"column":1,"offset":4012}}}},{"id":"transformer-remark-markdown-html-a60637d719dc5ff93a6d511674465b62--","value":"<p>This is a quick list of the steps I took to get https up and running with a new app I've been working on called <a href=\"https://instok.net\">Instok</a>. Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.</p>\n<p>Without further ado, the steps are as follows (which are provided mainly as an aide memoire):</p>\n<ul>\n<li>\n<p>Using OpenSSL, generate an RSA private key and a certificate signing request using <a href=\"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl\">these instructions</a> (excerpted below).</p>\n<p>openssl genrsa -out domain.com.key 2048</p>\n<p>openssl req -new -key domain.com.key -out domain.csr</p>\n</li>\n</ul>\n<p>If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).</p>\n<pre><code>openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n</code></pre>\n<ul>\n<li>Purchase a security certificate (or get one for <a href=\"https://konklone.com/post/switch-to-https-now-for-free\">free</a>). I used <a href=\"http://www.namecheap.com\">NameCheap</a> as suggested by <a href=\"https://stripe.com/help/ssl\">Stripe</a>. As part of the process, you will need to submit the certificate signing request generated in the above step.</li>\n<li>Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.</li>\n</ul>\n<p>In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.</p>\n<ul>\n<li>Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.</li>\n</ul>\n<pre><code class=\"language-javascript\">    var options = {\n        // The RSA private key generated above\n        key: fs.readFileSync('./config/rsakey.pem'),\n        // The certicates sent to you by the certificate issuer\n        cert: fs.readFileSync('./config/main.pem'),\n        ca: [fs.readFileSync('./config/intermediate.pem')]\n    };\n\n    https.createServer(options, app).listen(port of your choosing);\n</code></pre>\n<p>One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.</p>\n<ul>\n<li>Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.</li>\n</ul>\n<pre><code class=\"language-javascript\">server {\n       listen 443 ssl default_server;\n\n       ssl_certificate      /path/to/your/app/main.pem;\n       ssl_certificate_key  /path/to/your/app/domain.pem;\n\n    }\n</code></pre>\n<ul>\n<li>Once you reload the conf file, requests to <a href=\"https://widget.com\">https://widget.com</a> should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:</li>\n</ul>\n<pre><code class=\"language-javascript\">server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }\n</code></pre>\n<p>All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.</p>"},{"id":"transformer-remark-markdown-ast-c90f3ee517a32d988eb363305901c57e--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Setting-up-HTTPS-with-Express-Apps-using-Nginx-and-Digital-Ocean'\ntitle: 'Setting up HTTPS with Express Apps using Nginx and Digital Ocean'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":155},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269},"indent":[]}},{"type":"link","title":null,"url":"https://instok.net","children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276},"indent":[]}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297},"indent":[]}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591},"indent":[]}},{"type":"link","title":null,"url":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl","children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610},"indent":[]}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690},"indent":[]}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":206,"offset":709},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":10,"column":206,"offset":709},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":10,"column":206,"offset":709},"indent":[]}},{"type":"code","lang":null,"value":"    openssl genrsa -out domain.com.key 2048\n\n    openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":12,"column":1,"offset":711},"end":{"line":16,"column":4,"offset":820},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":17,"column":1,"offset":821},"end":{"line":17,"column":140,"offset":960},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":821},"end":{"line":17,"column":140,"offset":960},"indent":[]}},{"type":"code","lang":null,"value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem","position":{"start":{"line":19,"column":1,"offset":962},"end":{"line":19,"column":87,"offset":1048},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":21,"column":5,"offset":1054},"end":{"line":21,"column":53,"offset":1102},"indent":[]}},{"type":"link","title":null,"url":"https://konklone.com/post/switch-to-https-now-for-free","children":[{"type":"text","value":"free","position":{"start":{"line":21,"column":54,"offset":1103},"end":{"line":21,"column":58,"offset":1107},"indent":[]}}],"position":{"start":{"line":21,"column":53,"offset":1102},"end":{"line":21,"column":115,"offset":1164},"indent":[]}},{"type":"text","value":"). I used ","position":{"start":{"line":21,"column":115,"offset":1164},"end":{"line":21,"column":125,"offset":1174},"indent":[]}},{"type":"link","title":null,"url":"http://www.namecheap.com","children":[{"type":"text","value":"NameCheap","position":{"start":{"line":21,"column":126,"offset":1175},"end":{"line":21,"column":135,"offset":1184},"indent":[]}}],"position":{"start":{"line":21,"column":125,"offset":1174},"end":{"line":21,"column":162,"offset":1211},"indent":[]}},{"type":"text","value":" as suggested by ","position":{"start":{"line":21,"column":162,"offset":1211},"end":{"line":21,"column":179,"offset":1228},"indent":[]}},{"type":"link","title":null,"url":"https://stripe.com/help/ssl","children":[{"type":"text","value":"Stripe","position":{"start":{"line":21,"column":180,"offset":1229},"end":{"line":21,"column":186,"offset":1235},"indent":[]}}],"position":{"start":{"line":21,"column":179,"offset":1228},"end":{"line":21,"column":216,"offset":1265},"indent":[]}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":21,"column":216,"offset":1265},"end":{"line":21,"column":326,"offset":1375},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":1054},"end":{"line":21,"column":326,"offset":1375},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1050},"end":{"line":21,"column":326,"offset":1375},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":22,"column":5,"offset":1380},"end":{"line":22,"column":188,"offset":1563},"indent":[]}}],"position":{"start":{"line":22,"column":5,"offset":1380},"end":{"line":22,"column":188,"offset":1563},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1376},"end":{"line":22,"column":188,"offset":1563},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1050},"end":{"line":22,"column":188,"offset":1563},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":24,"column":1,"offset":1565},"end":{"line":24,"column":225,"offset":1789},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":1565},"end":{"line":24,"column":225,"offset":1789},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":26,"column":5,"offset":1795},"end":{"line":26,"column":394,"offset":2184},"indent":[]}}],"position":{"start":{"line":26,"column":5,"offset":1795},"end":{"line":26,"column":394,"offset":2184},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1791},"end":{"line":26,"column":394,"offset":2184},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1791},"end":{"line":26,"column":394,"offset":2184},"indent":[]}},{"type":"code","lang":"javascript","value":"    var options = {\n        // The RSA private key generated above\n        key: fs.readFileSync('./config/rsakey.pem'),\n        // The certicates sent to you by the certificate issuer\n        cert: fs.readFileSync('./config/main.pem'),\n        ca: [fs.readFileSync('./config/intermediate.pem')]\n    };\n\n    https.createServer(options, app).listen(port of your choosing);","position":{"start":{"line":28,"column":1,"offset":2186},"end":{"line":38,"column":4,"offset":2574},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":40,"column":1,"offset":2576},"end":{"line":40,"column":405,"offset":2980},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2576},"end":{"line":40,"column":405,"offset":2980},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":42,"column":5,"offset":2986},"end":{"line":42,"column":333,"offset":3314},"indent":[]}}],"position":{"start":{"line":42,"column":5,"offset":2986},"end":{"line":42,"column":333,"offset":3314},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":2982},"end":{"line":42,"column":333,"offset":3314},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":2982},"end":{"line":42,"column":333,"offset":3314},"indent":[]}},{"type":"code","lang":"javascript","value":"server {\n       listen 443 ssl default_server;\n\n       ssl_certificate      /path/to/your/app/main.pem;\n       ssl_certificate_key  /path/to/your/app/domain.pem;\n\n    }","position":{"start":{"line":44,"column":1,"offset":3316},"end":{"line":52,"column":4,"offset":3502},"indent":[1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":53,"column":5,"offset":3507},"end":{"line":53,"column":48,"offset":3550},"indent":[]}},{"type":"link","title":null,"url":"https://widget.com","children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":53,"column":49,"offset":3551},"end":{"line":53,"column":67,"offset":3569},"indent":[]}}],"position":{"start":{"line":53,"column":48,"offset":3550},"end":{"line":53,"column":88,"offset":3590},"indent":[]}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":53,"column":88,"offset":3590},"end":{"line":53,"column":251,"offset":3753},"indent":[]}}],"position":{"start":{"line":53,"column":5,"offset":3507},"end":{"line":53,"column":251,"offset":3753},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":3503},"end":{"line":53,"column":251,"offset":3753},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":3503},"end":{"line":53,"column":251,"offset":3753},"indent":[]}},{"type":"code","lang":"javascript","value":"server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }","position":{"start":{"line":55,"column":1,"offset":3755},"end":{"line":61,"column":4,"offset":3884},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":63,"column":1,"offset":3886},"end":{"line":63,"column":132,"offset":4017},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":3886},"end":{"line":63,"column":132,"offset":4017},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":65,"column":1,"offset":4019}}}},{"id":"transformer-remark-markdown-html-ast-c90f3ee517a32d988eb363305901c57e--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269}}},{"type":"element","tagName":"a","properties":{"href":"https://instok.net"},"children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276}}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":141,"offset":297}}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":141,"offset":297},"end":{"line":6,"column":251,"offset":407}}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":251,"offset":407}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}}],"position":{"start":{"line":8,"column":1,"offset":409},"end":{"line":8,"column":94,"offset":502}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":508},"end":{"line":10,"column":88,"offset":591}}},{"type":"element","tagName":"a","properties":{"href":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl"},"children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":592},"end":{"line":10,"column":107,"offset":610}}}],"position":{"start":{"line":10,"column":88,"offset":591},"end":{"line":10,"column":187,"offset":690}}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":690},"end":{"line":10,"column":206,"offset":709}}}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":10,"column":206,"offset":709}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":504},"end":{"line":10,"column":206,"offset":709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"    openssl genrsa -out domain.com.key 2048\n\n    openssl req -new -key domain.com.key -out domain.csr\n"}],"position":{"start":{"line":12,"column":1,"offset":711},"end":{"line":16,"column":4,"offset":820}}}],"position":{"start":{"line":12,"column":1,"offset":711},"end":{"line":16,"column":4,"offset":820}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":17,"column":1,"offset":821},"end":{"line":17,"column":140,"offset":960}}}],"position":{"start":{"line":17,"column":1,"offset":821},"end":{"line":17,"column":140,"offset":960}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n"}],"position":{"start":{"line":19,"column":1,"offset":962},"end":{"line":19,"column":87,"offset":1048}}}],"position":{"start":{"line":19,"column":1,"offset":962},"end":{"line":19,"column":87,"offset":1048}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":21,"column":5,"offset":1054},"end":{"line":21,"column":53,"offset":1102}}},{"type":"element","tagName":"a","properties":{"href":"https://konklone.com/post/switch-to-https-now-for-free"},"children":[{"type":"text","value":"free","position":{"start":{"line":21,"column":54,"offset":1103},"end":{"line":21,"column":58,"offset":1107}}}],"position":{"start":{"line":21,"column":53,"offset":1102},"end":{"line":21,"column":115,"offset":1164}}},{"type":"text","value":"). I used ","position":{"start":{"line":21,"column":115,"offset":1164},"end":{"line":21,"column":125,"offset":1174}}},{"type":"element","tagName":"a","properties":{"href":"http://www.namecheap.com"},"children":[{"type":"text","value":"NameCheap","position":{"start":{"line":21,"column":126,"offset":1175},"end":{"line":21,"column":135,"offset":1184}}}],"position":{"start":{"line":21,"column":125,"offset":1174},"end":{"line":21,"column":162,"offset":1211}}},{"type":"text","value":" as suggested by ","position":{"start":{"line":21,"column":162,"offset":1211},"end":{"line":21,"column":179,"offset":1228}}},{"type":"element","tagName":"a","properties":{"href":"https://stripe.com/help/ssl"},"children":[{"type":"text","value":"Stripe","position":{"start":{"line":21,"column":180,"offset":1229},"end":{"line":21,"column":186,"offset":1235}}}],"position":{"start":{"line":21,"column":179,"offset":1228},"end":{"line":21,"column":216,"offset":1265}}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":21,"column":216,"offset":1265},"end":{"line":21,"column":326,"offset":1375}}}],"position":{"start":{"line":21,"column":1,"offset":1050},"end":{"line":21,"column":326,"offset":1375}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":22,"column":5,"offset":1380},"end":{"line":22,"column":188,"offset":1563}}}],"position":{"start":{"line":22,"column":1,"offset":1376},"end":{"line":22,"column":188,"offset":1563}}},{"type":"text","value":"\n"}],"position":{"start":{"line":21,"column":1,"offset":1050},"end":{"line":22,"column":188,"offset":1563}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":24,"column":1,"offset":1565},"end":{"line":24,"column":225,"offset":1789}}}],"position":{"start":{"line":24,"column":1,"offset":1565},"end":{"line":24,"column":225,"offset":1789}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":26,"column":5,"offset":1795},"end":{"line":26,"column":394,"offset":2184}}}],"position":{"start":{"line":26,"column":1,"offset":1791},"end":{"line":26,"column":394,"offset":2184}}},{"type":"text","value":"\n"}],"position":{"start":{"line":26,"column":1,"offset":1791},"end":{"line":26,"column":394,"offset":2184}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"    var options = {\n        // The RSA private key generated above\n        key: fs.readFileSync('./config/rsakey.pem'),\n        // The certicates sent to you by the certificate issuer\n        cert: fs.readFileSync('./config/main.pem'),\n        ca: [fs.readFileSync('./config/intermediate.pem')]\n    };\n\n    https.createServer(options, app).listen(port of your choosing);\n"}],"position":{"start":{"line":28,"column":1,"offset":2186},"end":{"line":38,"column":4,"offset":2574}}}],"position":{"start":{"line":28,"column":1,"offset":2186},"end":{"line":38,"column":4,"offset":2574}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":40,"column":1,"offset":2576},"end":{"line":40,"column":405,"offset":2980}}}],"position":{"start":{"line":40,"column":1,"offset":2576},"end":{"line":40,"column":405,"offset":2980}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":42,"column":5,"offset":2986},"end":{"line":42,"column":333,"offset":3314}}}],"position":{"start":{"line":42,"column":1,"offset":2982},"end":{"line":42,"column":333,"offset":3314}}},{"type":"text","value":"\n"}],"position":{"start":{"line":42,"column":1,"offset":2982},"end":{"line":42,"column":333,"offset":3314}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"server {\n       listen 443 ssl default_server;\n\n       ssl_certificate      /path/to/your/app/main.pem;\n       ssl_certificate_key  /path/to/your/app/domain.pem;\n\n    }\n"}],"position":{"start":{"line":44,"column":1,"offset":3316},"end":{"line":52,"column":4,"offset":3502}}}],"position":{"start":{"line":44,"column":1,"offset":3316},"end":{"line":52,"column":4,"offset":3502}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":53,"column":5,"offset":3507},"end":{"line":53,"column":48,"offset":3550}}},{"type":"element","tagName":"a","properties":{"href":"https://widget.com"},"children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":53,"column":49,"offset":3551},"end":{"line":53,"column":67,"offset":3569}}}],"position":{"start":{"line":53,"column":48,"offset":3550},"end":{"line":53,"column":88,"offset":3590}}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":53,"column":88,"offset":3590},"end":{"line":53,"column":251,"offset":3753}}}],"position":{"start":{"line":53,"column":1,"offset":3503},"end":{"line":53,"column":251,"offset":3753}}},{"type":"text","value":"\n"}],"position":{"start":{"line":53,"column":1,"offset":3503},"end":{"line":53,"column":251,"offset":3753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }\n"}],"position":{"start":{"line":55,"column":1,"offset":3755},"end":{"line":61,"column":4,"offset":3884}}}],"position":{"start":{"line":55,"column":1,"offset":3755},"end":{"line":61,"column":4,"offset":3884}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":63,"column":1,"offset":3886},"end":{"line":63,"column":132,"offset":4017}}}],"position":{"start":{"line":63,"column":1,"offset":3886},"end":{"line":63,"column":132,"offset":4017}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":65,"column":1,"offset":4019}}}},{"id":"transformer-remark-markdown-html-c90f3ee517a32d988eb363305901c57e--","value":"<p>This is a quick list of the steps I took to get https up and running with a new app I've been working on called <a href=\"https://instok.net\">Instok</a>. Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.</p>\n<p>Without further ado, the steps are as follows (which are provided mainly as an aide memoire):</p>\n<ul>\n<li>Using OpenSSL, generate an RSA private key and a certificate signing request using <a href=\"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl\">these instructions</a> (excerpted below).</li>\n</ul>\n<pre><code>    openssl genrsa -out domain.com.key 2048\n\n    openssl req -new -key domain.com.key -out domain.csr\n</code></pre>\n<p>If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).</p>\n<pre><code>openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n</code></pre>\n<ul>\n<li>Purchase a security certificate (or get one for <a href=\"https://konklone.com/post/switch-to-https-now-for-free\">free</a>). I used <a href=\"http://www.namecheap.com\">NameCheap</a> as suggested by <a href=\"https://stripe.com/help/ssl\">Stripe</a>. As part of the process, you will need to submit the certificate signing request generated in the above step.</li>\n<li>Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.</li>\n</ul>\n<p>In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.</p>\n<ul>\n<li>Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.</li>\n</ul>\n<pre><code class=\"language-javascript\">    var options = {\n        // The RSA private key generated above\n        key: fs.readFileSync('./config/rsakey.pem'),\n        // The certicates sent to you by the certificate issuer\n        cert: fs.readFileSync('./config/main.pem'),\n        ca: [fs.readFileSync('./config/intermediate.pem')]\n    };\n\n    https.createServer(options, app).listen(port of your choosing);\n</code></pre>\n<p>One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.</p>\n<ul>\n<li>Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.</li>\n</ul>\n<pre><code class=\"language-javascript\">server {\n       listen 443 ssl default_server;\n\n       ssl_certificate      /path/to/your/app/main.pem;\n       ssl_certificate_key  /path/to/your/app/domain.pem;\n\n    }\n</code></pre>\n<ul>\n<li>Once you reload the conf file, requests to <a href=\"https://widget.com\">https://widget.com</a> should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:</li>\n</ul>\n<pre><code class=\"language-javascript\">server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }\n</code></pre>\n<p>All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.</p>"},{"id":"transformer-remark-markdown-ast-006eb5d5769e88035c15c3ded6845237--","value":{"type":"root","children":[{"type":"yaml","value":"path: '/Setting-up-HTTPS-with-Express-Apps-using-Nginx-and-Digital-Ocean'\ntitle: 'Setting up HTTPS with Express Apps using Nginx and Digital Ocean'","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":155},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/grabbeh/instok","children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276},"indent":[]}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":156,"offset":312},"indent":[]}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":156,"offset":312},"end":{"line":6,"column":266,"offset":422},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":266,"offset":422},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":424},"end":{"line":8,"column":94,"offset":517},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":424},"end":{"line":8,"column":94,"offset":517},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":523},"end":{"line":10,"column":88,"offset":606},"indent":[]}},{"type":"link","title":null,"url":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl","children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":607},"end":{"line":10,"column":107,"offset":625},"indent":[]}}],"position":{"start":{"line":10,"column":88,"offset":606},"end":{"line":10,"column":187,"offset":705},"indent":[]}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":705},"end":{"line":10,"column":206,"offset":724},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":523},"end":{"line":10,"column":206,"offset":724},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":519},"end":{"line":10,"column":206,"offset":724},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":519},"end":{"line":10,"column":206,"offset":724},"indent":[]}},{"type":"code","lang":null,"value":"    openssl genrsa -out domain.com.key 2048\n\n    openssl req -new -key domain.com.key -out domain.csr","position":{"start":{"line":12,"column":1,"offset":726},"end":{"line":16,"column":4,"offset":835},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":17,"column":1,"offset":836},"end":{"line":17,"column":140,"offset":975},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":836},"end":{"line":17,"column":140,"offset":975},"indent":[]}},{"type":"code","lang":null,"value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem","position":{"start":{"line":19,"column":1,"offset":977},"end":{"line":19,"column":87,"offset":1063},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":21,"column":5,"offset":1069},"end":{"line":21,"column":53,"offset":1117},"indent":[]}},{"type":"link","title":null,"url":"https://konklone.com/post/switch-to-https-now-for-free","children":[{"type":"text","value":"free","position":{"start":{"line":21,"column":54,"offset":1118},"end":{"line":21,"column":58,"offset":1122},"indent":[]}}],"position":{"start":{"line":21,"column":53,"offset":1117},"end":{"line":21,"column":115,"offset":1179},"indent":[]}},{"type":"text","value":"). I used ","position":{"start":{"line":21,"column":115,"offset":1179},"end":{"line":21,"column":125,"offset":1189},"indent":[]}},{"type":"link","title":null,"url":"http://www.namecheap.com","children":[{"type":"text","value":"NameCheap","position":{"start":{"line":21,"column":126,"offset":1190},"end":{"line":21,"column":135,"offset":1199},"indent":[]}}],"position":{"start":{"line":21,"column":125,"offset":1189},"end":{"line":21,"column":162,"offset":1226},"indent":[]}},{"type":"text","value":" as suggested by ","position":{"start":{"line":21,"column":162,"offset":1226},"end":{"line":21,"column":179,"offset":1243},"indent":[]}},{"type":"link","title":null,"url":"https://stripe.com/help/ssl","children":[{"type":"text","value":"Stripe","position":{"start":{"line":21,"column":180,"offset":1244},"end":{"line":21,"column":186,"offset":1250},"indent":[]}}],"position":{"start":{"line":21,"column":179,"offset":1243},"end":{"line":21,"column":216,"offset":1280},"indent":[]}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":21,"column":216,"offset":1280},"end":{"line":21,"column":326,"offset":1390},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":1069},"end":{"line":21,"column":326,"offset":1390},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1065},"end":{"line":21,"column":326,"offset":1390},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":22,"column":5,"offset":1395},"end":{"line":22,"column":188,"offset":1578},"indent":[]}}],"position":{"start":{"line":22,"column":5,"offset":1395},"end":{"line":22,"column":188,"offset":1578},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1391},"end":{"line":22,"column":188,"offset":1578},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1065},"end":{"line":22,"column":188,"offset":1578},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":24,"column":1,"offset":1580},"end":{"line":24,"column":225,"offset":1804},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":1580},"end":{"line":24,"column":225,"offset":1804},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":26,"column":5,"offset":1810},"end":{"line":26,"column":394,"offset":2199},"indent":[]}}],"position":{"start":{"line":26,"column":5,"offset":1810},"end":{"line":26,"column":394,"offset":2199},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1806},"end":{"line":26,"column":394,"offset":2199},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1806},"end":{"line":26,"column":394,"offset":2199},"indent":[]}},{"type":"code","lang":"javascript","value":"    var options = {\n        // The RSA private key generated above\n        key: fs.readFileSync('./config/rsakey.pem'),\n        // The certicates sent to you by the certificate issuer\n        cert: fs.readFileSync('./config/main.pem'),\n        ca: [fs.readFileSync('./config/intermediate.pem')]\n    };\n\n    https.createServer(options, app).listen(port of your choosing);","position":{"start":{"line":28,"column":1,"offset":2201},"end":{"line":38,"column":4,"offset":2589},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":40,"column":1,"offset":2591},"end":{"line":40,"column":405,"offset":2995},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2591},"end":{"line":40,"column":405,"offset":2995},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":42,"column":5,"offset":3001},"end":{"line":42,"column":333,"offset":3329},"indent":[]}}],"position":{"start":{"line":42,"column":5,"offset":3001},"end":{"line":42,"column":333,"offset":3329},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":2997},"end":{"line":42,"column":333,"offset":3329},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":2997},"end":{"line":42,"column":333,"offset":3329},"indent":[]}},{"type":"code","lang":"javascript","value":"server {\n       listen 443 ssl default_server;\n\n       ssl_certificate      /path/to/your/app/main.pem;\n       ssl_certificate_key  /path/to/your/app/domain.pem;\n\n    }","position":{"start":{"line":44,"column":1,"offset":3331},"end":{"line":52,"column":4,"offset":3517},"indent":[1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":53,"column":5,"offset":3522},"end":{"line":53,"column":48,"offset":3565},"indent":[]}},{"type":"link","title":null,"url":"https://widget.com","children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":53,"column":49,"offset":3566},"end":{"line":53,"column":67,"offset":3584},"indent":[]}}],"position":{"start":{"line":53,"column":48,"offset":3565},"end":{"line":53,"column":88,"offset":3605},"indent":[]}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":53,"column":88,"offset":3605},"end":{"line":53,"column":251,"offset":3768},"indent":[]}}],"position":{"start":{"line":53,"column":5,"offset":3522},"end":{"line":53,"column":251,"offset":3768},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":3518},"end":{"line":53,"column":251,"offset":3768},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":3518},"end":{"line":53,"column":251,"offset":3768},"indent":[]}},{"type":"code","lang":"javascript","value":"server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }","position":{"start":{"line":55,"column":1,"offset":3770},"end":{"line":61,"column":4,"offset":3899},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":63,"column":1,"offset":3901},"end":{"line":63,"column":132,"offset":4032},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":3901},"end":{"line":63,"column":132,"offset":4032},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":65,"column":1,"offset":4034}}}},{"id":"transformer-remark-markdown-html-ast-006eb5d5769e88035c15c3ded6845237--","value":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a quick list of the steps I took to get https up and running with a new app I've been working on called ","position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":113,"offset":269}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/grabbeh/instok"},"children":[{"type":"text","value":"Instok","position":{"start":{"line":6,"column":114,"offset":270},"end":{"line":6,"column":120,"offset":276}}}],"position":{"start":{"line":6,"column":113,"offset":269},"end":{"line":6,"column":156,"offset":312}}},{"type":"text","value":". Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.","position":{"start":{"line":6,"column":156,"offset":312},"end":{"line":6,"column":266,"offset":422}}}],"position":{"start":{"line":6,"column":1,"offset":157},"end":{"line":6,"column":266,"offset":422}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Without further ado, the steps are as follows (which are provided mainly as an aide memoire):","position":{"start":{"line":8,"column":1,"offset":424},"end":{"line":8,"column":94,"offset":517}}}],"position":{"start":{"line":8,"column":1,"offset":424},"end":{"line":8,"column":94,"offset":517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Using OpenSSL, generate an RSA private key and a certificate signing request using ","position":{"start":{"line":10,"column":5,"offset":523},"end":{"line":10,"column":88,"offset":606}}},{"type":"element","tagName":"a","properties":{"href":"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl"},"children":[{"type":"text","value":"these instructions","position":{"start":{"line":10,"column":89,"offset":607},"end":{"line":10,"column":107,"offset":625}}}],"position":{"start":{"line":10,"column":88,"offset":606},"end":{"line":10,"column":187,"offset":705}}},{"type":"text","value":" (excerpted below).","position":{"start":{"line":10,"column":187,"offset":705},"end":{"line":10,"column":206,"offset":724}}}],"position":{"start":{"line":10,"column":1,"offset":519},"end":{"line":10,"column":206,"offset":724}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":519},"end":{"line":10,"column":206,"offset":724}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"    openssl genrsa -out domain.com.key 2048\n\n    openssl req -new -key domain.com.key -out domain.csr\n"}],"position":{"start":{"line":12,"column":1,"offset":726},"end":{"line":16,"column":4,"offset":835}}}],"position":{"start":{"line":12,"column":1,"offset":726},"end":{"line":16,"column":4,"offset":835}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).","position":{"start":{"line":17,"column":1,"offset":836},"end":{"line":17,"column":140,"offset":975}}}],"position":{"start":{"line":17,"column":1,"offset":836},"end":{"line":17,"column":140,"offset":975}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n"}],"position":{"start":{"line":19,"column":1,"offset":977},"end":{"line":19,"column":87,"offset":1063}}}],"position":{"start":{"line":19,"column":1,"offset":977},"end":{"line":19,"column":87,"offset":1063}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Purchase a security certificate (or get one for ","position":{"start":{"line":21,"column":5,"offset":1069},"end":{"line":21,"column":53,"offset":1117}}},{"type":"element","tagName":"a","properties":{"href":"https://konklone.com/post/switch-to-https-now-for-free"},"children":[{"type":"text","value":"free","position":{"start":{"line":21,"column":54,"offset":1118},"end":{"line":21,"column":58,"offset":1122}}}],"position":{"start":{"line":21,"column":53,"offset":1117},"end":{"line":21,"column":115,"offset":1179}}},{"type":"text","value":"). I used ","position":{"start":{"line":21,"column":115,"offset":1179},"end":{"line":21,"column":125,"offset":1189}}},{"type":"element","tagName":"a","properties":{"href":"http://www.namecheap.com"},"children":[{"type":"text","value":"NameCheap","position":{"start":{"line":21,"column":126,"offset":1190},"end":{"line":21,"column":135,"offset":1199}}}],"position":{"start":{"line":21,"column":125,"offset":1189},"end":{"line":21,"column":162,"offset":1226}}},{"type":"text","value":" as suggested by ","position":{"start":{"line":21,"column":162,"offset":1226},"end":{"line":21,"column":179,"offset":1243}}},{"type":"element","tagName":"a","properties":{"href":"https://stripe.com/help/ssl"},"children":[{"type":"text","value":"Stripe","position":{"start":{"line":21,"column":180,"offset":1244},"end":{"line":21,"column":186,"offset":1250}}}],"position":{"start":{"line":21,"column":179,"offset":1243},"end":{"line":21,"column":216,"offset":1280}}},{"type":"text","value":". As part of the process, you will need to submit the certificate signing request generated in the above step.","position":{"start":{"line":21,"column":216,"offset":1280},"end":{"line":21,"column":326,"offset":1390}}}],"position":{"start":{"line":21,"column":1,"offset":1065},"end":{"line":21,"column":326,"offset":1390}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.","position":{"start":{"line":22,"column":5,"offset":1395},"end":{"line":22,"column":188,"offset":1578}}}],"position":{"start":{"line":22,"column":1,"offset":1391},"end":{"line":22,"column":188,"offset":1578}}},{"type":"text","value":"\n"}],"position":{"start":{"line":21,"column":1,"offset":1065},"end":{"line":22,"column":188,"offset":1578}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.","position":{"start":{"line":24,"column":1,"offset":1580},"end":{"line":24,"column":225,"offset":1804}}}],"position":{"start":{"line":24,"column":1,"offset":1580},"end":{"line":24,"column":225,"offset":1804}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.","position":{"start":{"line":26,"column":5,"offset":1810},"end":{"line":26,"column":394,"offset":2199}}}],"position":{"start":{"line":26,"column":1,"offset":1806},"end":{"line":26,"column":394,"offset":2199}}},{"type":"text","value":"\n"}],"position":{"start":{"line":26,"column":1,"offset":1806},"end":{"line":26,"column":394,"offset":2199}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"    var options = {\n        // The RSA private key generated above\n        key: fs.readFileSync('./config/rsakey.pem'),\n        // The certicates sent to you by the certificate issuer\n        cert: fs.readFileSync('./config/main.pem'),\n        ca: [fs.readFileSync('./config/intermediate.pem')]\n    };\n\n    https.createServer(options, app).listen(port of your choosing);\n"}],"position":{"start":{"line":28,"column":1,"offset":2201},"end":{"line":38,"column":4,"offset":2589}}}],"position":{"start":{"line":28,"column":1,"offset":2201},"end":{"line":38,"column":4,"offset":2589}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.","position":{"start":{"line":40,"column":1,"offset":2591},"end":{"line":40,"column":405,"offset":2995}}}],"position":{"start":{"line":40,"column":1,"offset":2591},"end":{"line":40,"column":405,"offset":2995}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.","position":{"start":{"line":42,"column":5,"offset":3001},"end":{"line":42,"column":333,"offset":3329}}}],"position":{"start":{"line":42,"column":1,"offset":2997},"end":{"line":42,"column":333,"offset":3329}}},{"type":"text","value":"\n"}],"position":{"start":{"line":42,"column":1,"offset":2997},"end":{"line":42,"column":333,"offset":3329}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"server {\n       listen 443 ssl default_server;\n\n       ssl_certificate      /path/to/your/app/main.pem;\n       ssl_certificate_key  /path/to/your/app/domain.pem;\n\n    }\n"}],"position":{"start":{"line":44,"column":1,"offset":3331},"end":{"line":52,"column":4,"offset":3517}}}],"position":{"start":{"line":44,"column":1,"offset":3331},"end":{"line":52,"column":4,"offset":3517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Once you reload the conf file, requests to ","position":{"start":{"line":53,"column":5,"offset":3522},"end":{"line":53,"column":48,"offset":3565}}},{"type":"element","tagName":"a","properties":{"href":"https://widget.com"},"children":[{"type":"text","value":"https://widget.com","position":{"start":{"line":53,"column":49,"offset":3566},"end":{"line":53,"column":67,"offset":3584}}}],"position":{"start":{"line":53,"column":48,"offset":3565},"end":{"line":53,"column":88,"offset":3605}}},{"type":"text","value":" should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:","position":{"start":{"line":53,"column":88,"offset":3605},"end":{"line":53,"column":251,"offset":3768}}}],"position":{"start":{"line":53,"column":1,"offset":3518},"end":{"line":53,"column":251,"offset":3768}}},{"type":"text","value":"\n"}],"position":{"start":{"line":53,"column":1,"offset":3518},"end":{"line":53,"column":251,"offset":3768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }\n"}],"position":{"start":{"line":55,"column":1,"offset":3770},"end":{"line":61,"column":4,"offset":3899}}}],"position":{"start":{"line":55,"column":1,"offset":3770},"end":{"line":61,"column":4,"offset":3899}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.","position":{"start":{"line":63,"column":1,"offset":3901},"end":{"line":63,"column":132,"offset":4032}}}],"position":{"start":{"line":63,"column":1,"offset":3901},"end":{"line":63,"column":132,"offset":4032}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":65,"column":1,"offset":4034}}}},{"id":"transformer-remark-markdown-html-006eb5d5769e88035c15c3ded6845237--","value":"<p>This is a quick list of the steps I took to get https up and running with a new app I've been working on called <a href=\"https://github.com/grabbeh/instok\">Instok</a>. Although https is of course a good idea in general, the main motivation was to make sure I could use Stripe.</p>\n<p>Without further ado, the steps are as follows (which are provided mainly as an aide memoire):</p>\n<ul>\n<li>Using OpenSSL, generate an RSA private key and a certificate signing request using <a href=\"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl\">these instructions</a> (excerpted below).</li>\n</ul>\n<pre><code>    openssl genrsa -out domain.com.key 2048\n\n    openssl req -new -key domain.com.key -out domain.csr\n</code></pre>\n<p>If you're planning on testing SSL you can also generate your own certificates using the below (after you've created your key and your CSR).</p>\n<pre><code>openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n</code></pre>\n<ul>\n<li>Purchase a security certificate (or get one for <a href=\"https://konklone.com/post/switch-to-https-now-for-free\">free</a>). I used <a href=\"http://www.namecheap.com\">NameCheap</a> as suggested by <a href=\"https://stripe.com/help/ssl\">Stripe</a>. As part of the process, you will need to submit the certificate signing request generated in the above step.</li>\n<li>Once you have got access to your certificates (mine were emailed to me) copy and paste the certificate(s) into a txt file and store wherever they'll be needed on the VPS or elsewhere.</li>\n</ul>\n<p>In addition to the main certificate, I was emailed an intermediate certificate. If this is the case for you, you can incorporate reference to this intermediate certificate in the 'ca' array referenced below in your node app.</p>\n<ul>\n<li>Incorporate a HTTPS server into your app, principally with the below code. If you're wondering, the pem format is nothing particularly special and can be enabled just be saving a file as 'rsakey.pem' for example provided it has -----BEGIN CERTIFICATE----- at the start and -----END CERTIFICATE----- you guessed it at the end. It is also important to retain the format they are provided in.</li>\n</ul>\n<pre><code class=\"language-javascript\">    var options = {\n        // The RSA private key generated above\n        key: fs.readFileSync('./config/rsakey.pem'),\n        // The certicates sent to you by the certificate issuer\n        cert: fs.readFileSync('./config/main.pem'),\n        ca: [fs.readFileSync('./config/intermediate.pem')]\n    };\n\n    https.createServer(options, app).listen(port of your choosing);\n</code></pre>\n<p>One point that I got stuck on (for about a day alas) was that I initially had the https server listening on 443. I subsequently realised that this meant that Nginx could not use 443 to route requests as this was locked up by the Express app. This meant that Nginx couldn't do its job properly in terms of signposting requests to the various apps running on the VPS nor redirecting http requests to https.</p>\n<ul>\n<li>Once the app is running on your VPS, you'll need to update your nginx.conf file. The server module for https is similar to your usual modules for http but with a reference to port 443 and to the location of your RSA key and your main certificate as per the below. I found I didn't need to reference the intermediate certificate.</li>\n</ul>\n<pre><code class=\"language-javascript\">server {\n       listen 443 ssl default_server;\n\n       ssl_certificate      /path/to/your/app/main.pem;\n       ssl_certificate_key  /path/to/your/app/domain.pem;\n\n    }\n</code></pre>\n<ul>\n<li>Once you reload the conf file, requests to <a href=\"https://widget.com\">https://widget.com</a> should be encrypted. You'll probably want to redirect http requests to https. This can be done in several ways but the most straight-forward method appears to be:</li>\n</ul>\n<pre><code class=\"language-javascript\">server {\n        listen 80;\n        server_name http://widget.com;\n        return 301 https://widget.com;\n    }\n</code></pre>\n<p>All in all I found the process relatively straightforward albeit with a few issues caused by my misunderstanding of how ports work.</p>"}]}