{"data":{"markdownRemark":{"html":"<p>I recently bought an Acer C270 Chromebook and having undertaken the straightforward process of using Crouton to install Ubuntu/Unity, I found I had to take a few more steps to make the machine usable for Node.js development.</p>\n<p>I thought I'd outline the steps below I took. Clearly some steps may not be applicable depending on the preferred setup.</p>\n<p><strong>Terminal</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"gatsby-code-text\"><code class=\"gatsby-code-text\">sudo apt-get install gnome-terminal</code></pre>\n      </div>\n<p><strong>Google Chrome</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"gatsby-code-text\"><code class=\"gatsby-code-text\">wget https://dl.google.com/linux/direct/google-chrome-  stable_current_amd64.deb\n\nsudo dpkg -i google-chrome*.deb\n\nsudo apt-get -f install</code></pre>\n      </div>\n<p>You may need to add '--user-data-dir' to the end of the /usr/bin/google-chrome file also so that Chrome runs.</p>\n<p>Also 'python -c \"import gnomekeyring;gnomekeyring.change<em>password</em>sync('login', 'MYPASSWORD', '');\"' can be used to disable the request for a keyring password.</p>\n<p><strong>Node.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"gatsby-code-text\"><code class=\"gatsby-code-text\">wget http://nodejs.org/dist/v0.10.22/node-v0.10.22.tar.gz\n\ntar -xvzf node-v0.10.22.tar.gz\n\ncd node-v0.10.22\n\napt-get install build-essential g++\n\n./configure\n\nmake\n\nsudo make install\n\nnode -v</code></pre>\n      </div>\n<p><strong>Git</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"gatsby-code-text\"><code class=\"gatsby-code-text\">sudo apt-get install git</code></pre>\n      </div>\n<p><strong>Fonts</strong></p>\n<p>The font on Gnome Terminal was bunched up. This was fixed by installing a new font package as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"gatsby-code-text\"><code class=\"gatsby-code-text\">sudo apt-get install ttf-ubuntu-font-family</code></pre>\n      </div>\n<p><strong>Sublime Text 2</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"gatsby-code-text\"><code class=\"gatsby-code-text\">sudo add-apt-repository ppa:webupd8team/sublime-text-2\n\nsudo apt-get update\n\nsudo apt-get install sublime-text</code></pre>\n      </div>\n<p><strong>Switching to Chromebook keyboard</strong></p>\n<p>The key mappings in Ubuntu 12.04 are different to the default ones for the Chromebook. I therefore used xmodmap to update/switch around certain keys.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"gatsby-code-text\"><code class=\"gatsby-code-text\">xmodmap -e &quot;keycode 94 shift = backslash bar&quot;\n\nxmodmap -e &quot;keycode 51 shift = numbersign asciitilde&quot;\n\nxmodmap -e  &quot;keycode 11 shift = 2 quotedbl&quot;\n\nxmodmap -e &quot;keycode 48 shift = apostrophe at&quot;</code></pre>\n      </div>\n<p>I also added a delete key and made the search key into caps lock with the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"gatsby-code-text\"><code class=\"gatsby-code-text\">xmodmap -e &quot;keycode 22 shift = BackSpace Delete&quot;\n\nxmodmap -e &quot;keycode 133 = Caps_Lock&quot;</code></pre>\n      </div>\n<p>Bear in mind that the above commands are session specific so to persist them you should create a file called '.xinitrc' file in your home directory, with 'xmodmap .Xmodmap' in, then xmodmap -pke > .Xmodmap in same directory to save revised .Xmodmap file in that directory.</p>\n<p>Alternatively, you can just call .xmodmap ~/Xmodmap on each session startup.</p>\n<p>On remapping the Delete key I couldn't get the Alt + Backspace combination to work so used shift instead.</p>\n<p>I also mapped delete in Sublime Text 2 to shift + backspace by editing the existing binding in .sublime-keymap to the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"gatsby-code-text\"><code class=\"gatsby-code-text\">{ &quot;keys&quot;: [&quot;shift+backspace&quot;], &quot;command&quot;: &quot;right_delete&quot; }</code></pre>\n      </div>\n<p>I'm very happy with the new Chromebook and the above additions have helped no end to make using Unity/Ubuntu via Crouton a good environment for me to develop in (maybe one day I'll master Vim but not today).</p>","frontmatter":{"path":"/Steps-to-improve-Unity-Ubuntu-on-Chromebook-Crouton-for-developer-purposes","title":"Steps to improve Unity Ubuntu on Chromebook Crouton for developer purposes","date":null}}},"pathContext":{}}